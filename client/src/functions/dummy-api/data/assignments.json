{
  "assignments": [
    {
      "id": "180789",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180789",
      "title": "HW #1: LMC #4, 5",
      "description": "<p><span style=\"color: #169179;\"> For this homework assignment, you may use the paper handout from class, and submit pictures of your work or print out the Google doc <span><a class=\"external\" href=\"https://docs.google.com/document/d/1mA_GRLjaDfkj2dx13L7iyX9kCXews4HKYtNLSUuYv3M/edit?usp=sharing\" target=\"_blank\">LMC #4, #5</a></span> and then submit. <br></span></p>\n<p><span style=\"color: #169179;\">Also, please note, Canvas requires me to click thousands (or so) of times to create an assignment.&nbsp;&nbsp;<span style=\"text-decoration: underline;\"> To keep the time manageable, I'm not going to set separate times that each assignment is due for each period.&nbsp; </span></span></p>\n<p><strong><span style=\"color: #169179;\"><span style=\"text-decoration: underline;\"><span style=\"background-color: #f8cac6;\">So on Canvas it will say \"due midnight\"</span>, <span style=\"background-color: #f8cac6;\">but just assume it is due when class starts.</span></span><br></span></strong></p>\n<p><strong><span style=\"color: #169179;\"><span style=\"text-decoration: underline;\"><span style=\"background-color: #f8cac6;\"><img src=\"https://mvla.instructure.com/courses/8995/files/2842674/preview?verifier=rYp8raoqDiWRs5kOq21xAXFIQtk8fBkTeyJ8vIhW\" alt=\"Canvas submit.png\" width=\"335\" height=\"90\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842674\" data-api-returntype=\"File\" loading=\"lazy\"></span></span></span></strong></p>\n<p>&nbsp;</p>\n<p><span>- Complete <a class=\"external\" href=\"https://docs.google.com/document/d/1mA_GRLjaDfkj2dx13L7iyX9kCXews4HKYtNLSUuYv3M/edit?usp=sharing\" target=\"_blank\"><span>LMC #4, #5</span></a> to the best of your ability.&nbsp; </span></p>\n<p><span>I will grade on effort and completion, not full correctness yet (Later we will have rubrics incorporating effort and correctness) &nbsp; </span></p>\n<p><span>You can test it with lmc.jar afterwards if you wish, but you don't have to.&nbsp; </span></p>\n<p><span><span style=\"color: #e03e2d;\"><strong>Submit the picture of your work on paper to this Canvas assignment.<br></strong></span></span></p>\n<p>&nbsp;</p>",
      "materials": [],
      "dueDate": "2024-08-16T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180806",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180806",
      "title": "HW #2: LMC #6, #7",
      "description": "<p><span style=\"color: #169179;\"> For this homework assignment, you may use the paper handout from class, and submit pictures of your work (recommended), or you may make a copy of the Google Doc and submit.&nbsp;&nbsp; <br></span></p>\n<p><span style=\"color: #169179;\">Also, please note, Canvas requires me to click thousands (or so) of times to create an assignment.&nbsp;&nbsp;<span style=\"text-decoration: underline;\"> To keep the time manageable,&nbsp; I'm not going to set separate times that each assignment is due for each period.&nbsp;</span></span><strong><span style=\"color: #169179;\"><span style=\"text-decoration: underline;\"> </span></span></strong></p>\n<p><strong><span style=\"color: #169179;\"><span style=\"text-decoration: underline;\">So on Canvas it will say \"due midnight\", but just assume it is due when class starts.</span></span></strong></p>\n<p>&nbsp;</p>\n<p><span>- Complete <a href=\"https://docs.google.com/document/d/1425OYZBYxfs6kqNAF8CQNObTjW6cBBGeCu_px7L6S0M/edit?usp=sharing\" target=\"_blank\">LMC #6, LMC #7</a> to the best of your ability.&nbsp;&nbsp; Again, you may print and do on paper (<strong><em>recommended since quiz will be on paper</em></strong>), and submit pictures of your work, or you may make a copy of the Google Doc and submit.</span></p>",
      "materials": [],
      "dueDate": "2024-08-19T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180814",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180814",
      "title": "CW: 2.2 Notes",
      "description": "<p><span style=\"color: #000000;\"><strong><span style=\"text-decoration: underline;\">Watch the 2 videos, and answer the Canvas Studio questions</span> embedded in them.&nbsp; </strong></span></p>\n<p><span style=\"color: #000000;\">Here are the slides for the 2 videos: <span style=\"background-color: #fbeeb8;\"><a class=\"inline_disabled\" style=\"background-color: #fbeeb8; color: #000000;\" href=\"https://docs.google.com/presentation/d/1pLZjivFKkC61d77cPdWB4mIb8Mvj6J9eX3EZ2XUnrhQ/edit?usp=sharing\" target=\"_blank\">Slides</a></span>, and here are the original .pdf notes: <span style=\"background-color: #eccafa;\"><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" style=\"color: #000000; background-color: #eccafa;\" title=\"2.2 notes.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842408?verifier=9BYtY0ln4X11QP9QXUP4VfNMdcDp9BfPZPESBaHn&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842408\" data-api-returntype=\"File\"></a><a id=\"1205648\" class=\"instructure_file_link instructure_scribd_file inline_disabled\" style=\"background-color: #eccafa;\" href=\"https://mvla.instructure.com/courses/8995/files/2842408?verifier=9BYtY0ln4X11QP9QXUP4VfNMdcDp9BfPZPESBaHn&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"true\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842408\" data-api-returntype=\"File\">2.2 notes.pdf</a></span></span></p>\n<p><span style=\"color: #e03e2d;\"><span style=\"color: #000000;\">All you have to do is answer the questions with your best effort.</span><strong><br></strong></span></p>\n<p>1) 2.2 notes: Names, variables, primitive types:</p>\n<p><span style=\"color: #e03e2d;\"><strong><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_embedding_id%3D176-UA6RVL5c1vYX8NjvCbdjWw\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" loading=\"lazy\"></iframe></strong></span></p>\n<p>&nbsp;</p>\n<hr>\n<p>&nbsp;</p>\n<p><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_embedding_id%3D175-QjonJie-2kuzwFbwi-jZYg\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" loading=\"lazy\"></iframe></p>",
      "materials": [],
      "dueDate": "2024-08-23T23:59:59.000-07:00",
      "points": null,
      "originLMS": "canvas"
    },
    {
      "id": "180715",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180715",
      "title": "Day 5 Extended CW: Command Line Practice #2",
      "description": "<p><span>Printable documents (if you want): <a id=\"2315580\" class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Link\" href=\"https://mvla.instructure.com/courses/8995/files/2842855?verifier=KSAVjDVqfit9iw8QUvYCzt1cLw621RqmmTzlwvxB&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"true\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842855\" data-api-returntype=\"File\">Using the Command Line (Mac).pdf</a> &nbsp;<a id=\"2315603\" class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Link\" href=\"https://mvla.instructure.com/courses/8995/files/2842343?verifier=UOKT0JnKBmGptbsReK0tJEztqyDxyHgMnciDCmNf&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"true\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842343\" data-api-returntype=\"File\">Using the Command Line (Windows).pdf</a><span class=\"instructure_file_holder link_holder instructure_file_link_holder\"><a class=\"file_download_btn\" style=\"text-decoration: none;\" role=\"button\" href=\"https://mvla.instructure.com/courses/8995/file_contents/course%20files/Uploaded%20Media/Using%20the%20Command%20Line%20(Windows).pdf?canvas_download=1\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/3437/files/1167490\" data-api-returntype=\"File\"> </a></span></span></p>\n<p><strong>1) Download the 3 .java files</strong> (they should end up in your home directory's Downloads folder).</p>\n<p><span>Downloads: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Test.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842291?verifier=cCBHTKIGt3BxJVT3Ol9I0kRirwXh1OJZQfQNB5q4&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842291\" data-api-returntype=\"File\">Test.java</a> &nbsp; <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Test2.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842293?verifier=A2CoseIRMmNHRl1JcThmZAB67DcrR3CdJ69Lpjns&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842293\" data-api-returntype=\"File\">Test2.java</a> &nbsp;<a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"HelloWorld.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842295?verifier=o9D5p5yH4lkSAcjb2nFSotsl7yThdQ73Wzfb2mDD&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842295\" data-api-returntype=\"File\">HelloWorld.java</a>&nbsp;<br></span></p>\n<p><strong>2) Watch the video </strong>of the basic commands walkthrough.&nbsp; This is the same as Steps 1 - 8 on the inside part of the packet from today.&nbsp; Follow along with the steps.&nbsp; You can also refer to the slides as you go if you want.&nbsp; <strong>Note, for folks who still haven't gotten the Java JDK fully installed, the \"javac\" and \"java\" portions on steps 7 and 8 won't work properly.&nbsp; That's OK, I'll take a look at them next class!</strong></p>\n<table style=\"border-collapse: collapse; width: 100%;\" border=\"1\">\n<tbody>\n<tr>\n<td style=\"width: 50%;\">\n<p><span><strong><span style=\"color: #ba372a;\">For Mac</span></strong>:</span></p>\n<p><span style=\"background-color: #fbeeb8;\">Command Line #2 <a class=\"external\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1CBRYHbU_0InAXWiZZ_pWoCbl7vQjc1euLpbp4JK7nbI/edit?usp=sharing\" target=\"_blank\"><span>Slides</span></a></span></p>\n<p><a href=\"https://www.youtube.com/watch?v=OfRaleuhysE\" target=\"_blank\">https://www.youtube.com/watch?v=OfRaleuhysE</a></p>\n</td>\n<td style=\"width: 50%;\">\n<p><strong><span style=\"color: #236fa1;\">For Windows</span></strong>:</p>\n<p><span style=\"background-color: #fbeeb8;\">Command Line #2 <a class=\"external\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1-8NaoDETC4T7gBLo6CZObyqgI9hpoRp9ZlUN3j4Uysw/edit?usp=sharing\" target=\"_blank\"><span>Slides</span></a></span></p>\n<p><a href=\"https://www.youtube.com/watch?v=6vOp5IUc8OA\" target=\"_blank\">https://www.youtube.com/watch?v=6vOp5IUc8OA</a></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p><strong>3) Take a screenshot of your command line prompt executing the commands on step 6 (remove files), step 7 (javac) and step 8 (java) </strong>in the packet/video.&nbsp; Again, for a few folks your javac and java won't work, but just type them anyway.</p>\n<p>4) Submit screenshot to Canvas.</p>",
      "materials": [],
      "dueDate": "2024-08-23T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180811",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180811",
      "title": "HW #3: HelloWorld.java",
      "description": "<p><span style=\"color: #e03e2d;\"><strong><span style=\"text-decoration: underline;\">Watch the video, answer the Canvas Studio questions</span> embedded in the quiz</strong></span>, <span style=\"text-decoration: underline;\"><span style=\"color: #236fa1; text-decoration: underline;\"><strong>then submit the completed HelloWorld.java </strong></span></span>to this assignment.</p>\n<p><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_embedding_id%3D174-4QDgHjKH7tzApurIXRkMgA\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" loading=\"lazy\"></iframe></p>",
      "materials": [],
      "dueDate": "2024-08-23T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180740",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180740",
      "title": "Day 6 Extended CW: Command Line Practice #4",
      "description": "<p>a) Download the 3 practice files:</p>\n<p><span><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Hello.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842300?verifier=fj5yXLgZTcTjGmFdyGZzfsjEWVfQKPjvOWm07KCA&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842300\" data-api-returntype=\"File\">Hello.java</a> &nbsp;&nbsp; <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Hey.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842304?verifier=19xNbFTih1S94EFPJRBoI9p0BE4u8IR6e8WZ0FtQ&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842304\" data-api-returntype=\"File\">Hey.java</a> &nbsp; <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Hi.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842307?verifier=yrDCziV6IraA4bJKyZ8SiqdIjEugrCmm2YNxwtlb&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842307\" data-api-returntype=\"File\">Hi.java</a> &nbsp; <br></span></p>\n<p><span>b) Follow the instructions (you can just look at the slides for instructions or watch the video introductions)</span></p>\n<table style=\"border-collapse: collapse; width: 100%;\" border=\"1\">\n<tbody>\n<tr>\n<td style=\"width: 50%;\">\n<p>Mac:<span style=\"background-color: #fbeeb8;\"> Instructions as <a style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1T0D6z1J25J3xtcGXBKWPnL9rGa5AIRNY7htlpNK7Y5o/edit#slide=id.g8a92b2fb57_17_12\" target=\"_blank\">Slides</a></span></p>\n<p>Video Instructions (~1.5 minutes): <a class=\"\" href=\"https://youtu.be/KB_7E_jAhtg\" data-ytt-failcnt=\"2\"><span>https://youtu.be/KB_7E_jAhtg</span></a></p>\n</td>\n<td style=\"width: 50%;\">\n<p>Windows: <span style=\"background-color: #fbeeb8;\">Instructions as <a style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1UDLTf9ygHVlaFbDhnbSnxdIM8kb1jEHLVaQIniWdfZo/edit#slide=id.g8a92b2fb57_17_12\" target=\"_blank\">Slides</a></span></p>\n<p>Video Instructions (~1.5 minutes): <a class=\"\" href=\"https://youtu.be/3PEhfRf6ED8\" data-ytt-failcnt=\"2\"><span>https://youtu.be/3PEhfRf6ED8</span></a></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p><span>c) Complete the You Try as specified in part (b) above.&nbsp; Take a <strong>screenshot</strong> of your command prompt as you execute step d in the instructions, as shown below (<em>but try not to just copy my command, understand it yourself</em>). <strong><span style=\"text-decoration: underline;\">Submit to this assignment for 2 points:</span></strong></span></p>\n<p><span>&nbsp;<img src=\"https://mvla.instructure.com/courses/8995/files/2842298/preview?verifier=jM3tmC7Bkekb5xn9xfRMx7E2geKrCqyQCiLI3gEt\" alt=\"Example.png\" width=\"313\" height=\"112\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842298\" data-api-returntype=\"File\" loading=\"lazy\"><br></span></p>\n<p><span>d) If stuck, you can refer to the solution videos:</span></p>\n<table style=\"border-collapse: collapse; width: 100%;\" border=\"1\">\n<tbody>\n<tr>\n<td style=\"width: 50%;\">\n<p>Mac Solutions Walkthrough: <a class=\"\" href=\"https://youtu.be/zaZwQMgkaok\" data-ytt-failcnt=\"2\"><span>http s://youtu.be/zaZwQMgkaok</span></a></p>\n<p><span style=\"background-color: #fbeeb8;\">Command Line #4 <a class=\"instructure_file_link inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1T0D6z1J25J3xtcGXBKWPnL9rGa5AIRNY7htlpNK7Y5o/edit#slide=id.p\" target=\"_blank\">Slides</a></span></p>\n</td>\n<td style=\"width: 50%;\">\n<p>Windows Solutions Walkthrough: <a class=\"\" href=\"https://youtu.be/sDuG1wEUzaQ\" data-ytt-failcnt=\"2\"><span>https://youtu.be/sDuG1wEUzaQ</span></a></p>\n<p><span style=\"background-color: #fbeeb8;\">Command Line #4 <a class=\"instructure_file_link inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1UDLTf9ygHVlaFbDhnbSnxdIM8kb1jEHLVaQIniWdfZo/edit#slide=id.p\" target=\"_blank\">Slides</a></span></p>\n</td>\n</tr>\n</tbody>\n</table>",
      "materials": [],
      "dueDate": "2024-08-26T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "187055",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/187055",
      "title": "HW #4: Declaration and Assignment Test",
      "description": "<p>a) Download <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"DeclarationAndAssignmentTest.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842296?verifier=ECgYoFksnEsx88rJEPbIjBy20hXJmbiRrpfhEK6Z&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842296\" data-api-returntype=\"File\">DeclarationAndAssignmentTest.java</a>&nbsp;</p>\n<p>b) Watch, answer embedded quiz questions:</p>\n<p>c) Submit updated DeclarationAndAssignmentTest.java to this Canvas assignment</p>\n<p>d) Youtube link in case something goes wrong with the Canvas Quiz: <a href=\"https://www.youtube.com/watch?v=L9yJhrjQcFE\" target=\"_blank\">https://www.youtube.com/watch?v=L9yJhrjQcFE</a></p>\n<p><iframe class=\"lti-embed\" style=\"width: 800px; height: 880px;\" title=\"DeclarationAndAssignmentTest\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_embedding_id%3D183-hYZ2mScQroOIK0Xtw0ml2g\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *; clipboard-write *; display-capture *\" data-studio-resizable=\"false\" data-studio-tray-enabled=\"false\" data-studio-convertible-to-link=\"true\" loading=\"lazy\"></iframe></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>",
      "materials": [],
      "dueDate": "2024-08-26T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180743",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180743",
      "title": "Day 7 Extended CW: OperatorTest",
      "description": "<p><span class=\"NjE5zd\">Download <span class=\"instructure_file_holder link_holder instructure_file_link_holder\"><a class=\"file_preview_link\" title=\"OperatorTest.java\" href=\"https://mvla.instructure.com/courses/1789/files/184429/download?wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/1789/files/184429\" data-api-returntype=\"File\" aria-expanded=\"false\" aria-controls=\"preview_2\">OperatorTest.java</a><a class=\"file_download_btn\" style=\"text-decoration: none;\" role=\"button\" href=\"https://mvla.instructure.com/courses/1789/files/184429/download?download_frd=1\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/1789/files/184429\" data-api-returntype=\"File\"> <img style=\"width: 16px; height: 16px;\" role=\"presentation\" src=\"https://mvla.instructure.com/images/svg-icons/svg_icon_download.svg\" alt=\"\" loading=\"lazy\"> </a></span>watch the video, fill out the code, answer the embedded questions.</span></p>\n<p><strong><span class=\"NjE5zd\">Submit the modified OperatorTest.java to Canvas for 2 points.</span></strong></p>\n<p><span class=\"NjE5zd\"><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_embedding_id%3D194-ulSde_e8VmA9ULr6VgFA_Q\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" loading=\"lazy\"></iframe></span></p>",
      "materials": [],
      "dueDate": "2024-08-28T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180817",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180817",
      "title": "HW #5: Interest.java",
      "description": "<p><span style=\"background-color: #fbeeb8;\"><a class=\"instructure_file_link inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1hMA_4O3YB4rrDP-3SSuTj1JkfIDFcGv-x6XLB3qYDqk/edit?usp=sharing\" target=\"_blank\">Slides</a></span></p>\n<p>1) Download, compile and run <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Interest.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842305?verifier=cXeHXyhZaKpCQein01fndaNgBSnrNl2SfNZBzzBb&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842305\" data-api-returntype=\"File\">Interest.java</a>&nbsp;</p>\n<p>2) Play around with the assignment statements. Change the numbers for the principal and interest. Recompile and run, and note the changes.</p>\n<p>3) <strong>Change the <span style=\"text-decoration: underline;\">doubles</span> to <span style=\"text-decoration: underline;\">ints</span> and then compile and run. <span style=\"text-decoration: underline;\">What happens? Why? (</span>Put comments on the top of Interest.java to answer the question)</strong></p>\n<p>4) <strong>Modify the Interest.java file so that the program will output the<span style=\"color: #e03e2d;\"> total amount of interest earned after 3 years</span> and the <span style=\"color: #e03e2d;\">value of the investment after 3 years</span> if the principal starts out at <span style=\"text-decoration: underline;\">17000</span> and the interest is<span style=\"text-decoration: underline;\"> 0.07</span>. </strong>(Hint: the answer is not 3570 and 20570--remember that you earn interest on the interest during the 2nd and 3rd years)<strong> (Put comments on the top of Interest.java to answer the question)</strong></p>\n<p>5) Submit Interest.java back to this assignment. Don't forget to add comments to answer steps #3, 4</p>",
      "materials": [],
      "dueDate": "2024-08-28T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180503",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180503",
      "title": "CW: LMC Quiz Type-Up",
      "description": "<p><span class=\"NjE5zd\">Type up and submit your person's LMC Quiz<span style=\"color: #e03e2d;\"><strong> (don't forget their name!) </strong></span>using this blank text form: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"LMC Type-Up(1).txt\" href=\"https://mvla.instructure.com/courses/8995/files/2901423?verifier=5huBKunG6hlcJGidAEILysfcSHQWtng6YlaHtsBR&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2901423\" data-api-returntype=\"File\">LMC Type-Up.txt</a><br></span></p>\n<p><span class=\"NjE5zd\"><span class=\"instructure_file_holder link_holder\"><span style=\"text-decoration: underline; color: #843fa1;\"><strong>DON'T FORGET THEIR NAME!!!</strong></span><br></span></span></p>\n<p><span class=\"NjE5zd\"><span class=\"instructure_file_holder link_holder\">You can add their comments if you want.</span></span></p>\n<p><span class=\"NjE5zd\"><span class=\"instructure_file_holder link_holder\">If you can't read what they wrote, you can raise your hand.</span></span></p>\n<p><span class=\"NjE5zd\"><span class=\"instructure_file_holder link_holder\">Submit the text file here so I can grade them more quickly, thanks!</span></span></p>",
      "materials": [],
      "dueDate": "2024-08-30T23:59:59.000-07:00",
      "points": 1,
      "originLMS": "canvas"
    },
    {
      "id": "180819",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180819",
      "title": "HW #6: Subroutine Tester",
      "description": "<p>Fill in the subroutines for #1 - 5 in <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"SubroutineTester.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842297?verifier=07fDCHHplSBzK05tHBLCaue89lEokXeoSlD9kdYa&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842297\" data-api-returntype=\"File\">SubroutineTester.java</a> . &nbsp;Test them with various inputs and ensure they work. &nbsp;</p>\n<p>Don't hardcode your solutions, rather, use variables.&nbsp;</p>\n<p>Optional helper video: <a href=\"https://youtu.be/mPAkyGiCNAw\" target=\"_blank\">https://youtu.be/mPAkyGiCNAw</a></p>\n<p>Submit your completed SubroutineTester.java back to this Canvas assignment.</p>\n<p>&nbsp;</p>",
      "materials": [],
      "dueDate": "2024-08-30T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180748",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180748",
      "title": "Day 9 Ext CW Part 1: Intro to Formatted Output",
      "description": "<p>Download <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"FormatTesterDemo.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842302?verifier=77XWZbTip9dVFXPTRKl3dudcI4XJBRqUP5iCHJ7B&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842302\" data-api-returntype=\"File\">FormatTesterDemo.java</a>&nbsp;</p>\n<p>Watch the following 2 videos on formatting Java output on the console with printf.</p>\n<p><span style=\"color: #e03e2d;\"><strong>Submit FormatTesterDemo.java after watching the 2 videos.</strong></span></p>\n<p>Accompanying slides 2.4 <span style=\"background-color: #fbeeb8;\">Slides <a class=\"instructure_file_link inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/15wMCp-ySsgcODGdr-XCdUV0BzeFlrnq_zxVeZKcXWak/edit?usp=sharing\" target=\"_blank\">here</a></span></p>\n<p>a) 2.4 notes part 1A Introducing Java Formatting(~10 min)</p>\n<p><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_launch_type%3Dembed%26custom_arc_media_id%3Ddd7a4c14-2413-472e-9edc-ee83af220ddf-1442\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" loading=\"lazy\"></iframe></p>\n<p><span style=\"background-color: #ffffff;\">&nbsp;b) 2.4 notes part 1B Filling out FormatTesterDemo.java(~10 min)</span></p>\n<p><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_launch_type%3Dembed%26custom_arc_media_id%3D2c4974f0-e41f-4dbf-8e46-fc894dcc3375-1443\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" loading=\"lazy\"></iframe></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>",
      "materials": [],
      "dueDate": "2024-09-04T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180749",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180749",
      "title": "Day 9 Ext CW Part 2: FormatTesterClasswork",
      "description": "<p><span>a) Download <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"FormatTesterClasswork.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842309?verifier=kyeUou5cdtyTGqhXZ8MBe2XLpNYAkDmcx3J5x7dw&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842309\" data-api-returntype=\"File\">FormatTesterClasswork.java</a>&nbsp;<br></span></p>\n<p><span>b) Watch Intro <a href=\"https://www.youtube.com/watch?v=gKK90qH9B_0\" target=\"_blank\">https://www.youtube.com/watch?v=gKK90qH9B_0</a> <br></span></p>\n<p><span>c) Take 10 minutes to work on the formatting problems given. 2.4 <span style=\"background-color: #fbeeb8;\">Slides <a class=\"instructure_file_link inline_disabled external\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/15wMCp-ySsgcODGdr-XCdUV0BzeFlrnq_zxVeZKcXWak/edit?usp=sharing\" target=\"_blank\">here</a></span></span></p>\n<p><span><img src=\"https://mvla.instructure.com/courses/8995/files/2842439/preview?verifier=VfWjHZeAv1GkubHOkS2BoG6C9GAfz9jHSCkGXpIt\" alt=\"Formatting.png\" width=\"393\" height=\"141\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842439\" data-api-returntype=\"File\" loading=\"lazy\"></span></p>\n<p><span>d) Afterwards, check your answers: <a href=\"https://www.youtube.com/watch?v=Q6w9Lmz0z10\" target=\"_blank\">https://www.youtube.com/watch?v=Q6w9Lmz0z10</a> <br></span></p>\n<p><span style=\"color: #e03e2d;\"><strong>Submit FormatTesterClasswork.java after completing it</strong></span></p>\n<p>&nbsp;</p>",
      "materials": [],
      "dueDate": "2024-09-04T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180820",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180820",
      "title": "HW #7:  Codingbat (Warmup-1: startHi - intMax)",
      "description": "<p><span class=\"NjE5zd\" style=\"color: #e03e2d;\">** Remember, as we discussed, while Canvas says assignments are due at Midnight, assume it is <strong>actually due at the start of class</strong> (it is just too much work to set the times for 4 different sections day after day)**</span></p>\n<p><span class=\"NjE5zd\">Do the following exercises at <a href=\"https://codingbat.com/java/Warmup-1\" target=\"_blank\">https://codingbat.com/java/Warmup-1</a> (they start halfway down the page)<br></span></p>\n<p><strong><span class=\"NjE5zd\">startHi, icyHot, in1020, hasTeen, loneTeen, delDel, mixStart, startOz, intMax </span></strong></p>\n<p><strong><span class=\"NjE5zd\"><img src=\"https://mvla.instructure.com/courses/8995/files/2842410/preview?verifier=sw2vqetrahHxWEVLOE3G7QeoU030ANcVtEkmPDoY\" alt=\"Untitled.png\" width=\"593\" height=\"242\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842410\" data-api-returntype=\"File\" loading=\"lazy\"></span></strong></p>\n<p><span class=\"NjE5zd\">If you have worked on a problem for ~10 min, you may look at the solution and paste it in. But you should be trying and failing several times before you do this. And once you do so, make sure you understand HOW it is working. Alter things and see if you can come up with an alternate solution. DON'T just copy the solutions section right away, no learning will take place. </span></p>\n<p><span class=\"NjE5zd\"><span><em>Spend at most 1 hr total.&nbsp; On each problem, take 10 minutes and if you are stuck, you may look at the solution.&nbsp; Spend 5 minutes understanding it before moving on.&nbsp; This way, you should finish at least 4 problems in 1 hr.&nbsp; <br></em></span></span></p>\n<p><strong><span class=\"NjE5zd\">6) You don't have to submit anything to Canvas, as long as you are *****logged in****** to codingbat. </span></strong></p>\n<p><span class=\"NjE5zd\">Optional: You can use this updated <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"CodingBatTester2.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842344?verifier=jNueqiKhCmzmoAhqhdIbiWWHFo0y70eN688Hb484&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842344\" data-api-returntype=\"File\">CodingBatTester2.java</a> &nbsp; if you want to insert System.out.println debugging statements in your code.&nbsp; Then, when you figure it out you can paste into Codingbat.<br></span></p>",
      "materials": [],
      "dueDate": "2024-09-04T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180553",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180553",
      "title": "Day 10 Extended Classwork: Details of Expressions",
      "description": "<p><strong><span style=\"color: #169179;\">// *** 2 parts to this!</span></strong></p>\n<p>&nbsp;</p>\n<p><strong><span style=\"color: #169179;\">// **Part 0, nothing is collected.&nbsp; Watch the video --&nbsp; some of these concepts will appear on our Chapter 2 Test!</span></strong></p>\n<p><span>0) Watch 2.5 notes (Details of Expressions): <span style=\"background-color: #fbeeb8;\">(<a class=\"instructure_file_link inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/17qlJS0D7IySaosF8a_b9C_EquJezSb6zU_QYa3iRJQ0/edit?usp=sharing\" target=\"_blank\">Slides</a>)</span> <span style=\"background-color: #f8cac6;\">(<a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"2.5 notes.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842671?verifier=iAxVXguwbqV55odNS2nOv0kIMxommLLQN6msnsGY&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842671\" data-api-returntype=\"File\">Notes</a>)</span> <a href=\"https://youtu.be/Xkza3Tj6CHc\" target=\"_blank\">https://youtu.be/Xkza3Tj6CHc </a>&nbsp; &nbsp;</span></p>\n<p>&nbsp;</p>\n<p><strong><span style=\"color: #169179;\">// **Part 1, download, watch, answer the quiz questions.&nbsp; You do not have to submit RandomStuff.java.</span></strong></p>\n<p><span>1) Download <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"RandomStuff.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842669?verifier=DZSIEpVgWsIievKtsOqcvTo3IhUnxvh1lozXmoz3&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842669\" data-api-returntype=\"File\">RandomStuff.java</a> , watch the video, answer the quiz questions regarding the 2.5 notes video:<br></span></p>\n<p><span><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_embedding_id%3D202-a5HCGQbA5ST9H0Ns88b0yw\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" loading=\"lazy\"></iframe></span></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>",
      "materials": [],
      "dueDate": "2024-09-06T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180561",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180561",
      "title": "Day 12: Chapter 2 Review (*Submit Magpie2 here*)",
      "description": "<p><span class=\"NjE5zd\"><strong><span style=\"color: #e03e2d;\">Our Chapter 2 Test will be on&nbsp; Friday.&nbsp; Today, and Wed will be review days.&nbsp; <br></span></strong></span></p>\n<p><span class=\"NjE5zd\"><strong><span style=\"color: #e03e2d;\">The test will be ~45 minutes, partially on paper and partially on the computer.&nbsp; It will be \"open note\", in that you can look at previous assignments and programs during the computer portion of the test.&nbsp; More details below on item (3).&nbsp; </span></strong></span></p>\n<p>&nbsp;</p>\n<p><span class=\"NjE5zd\">Agenda:</span></p>\n<p><span class=\"NjE5zd\">0) Work on Magpie, parts 3b, 3d, and 3e.&nbsp;&nbsp;</span></p>\n<ul>\n<li><span class=\"NjE5zd\"><span>Discuss If...if...if vs If...else if...else <span style=\"background-color: #fbeeb8;\"><a class=\"inline_disabled\" href=\"https://docs.google.com/presentation/d/1hQbYXZ8QD7yjSx9ud8aS_-Hitzj-0Pqrpz9ON-u2mus/edit#slide=id.p\" target=\"_blank\">Slides</a></span></span></span></li>\n<li><span class=\"NjE5zd\"><span>Discuss Java String API (Application Programming Interface): <a href=\"https://docs.oracle.com/javase/7/docs/api/java/lang/String.html\" target=\"_blank\">https://docs.oracle.com/javase/7/docs/api/java/lang/String.html</a></span></span></li>\n<li><span class=\"NjE5zd\"><span><a href=\"https://docs.oracle.com/javase/7/docs/api/java/lang/String.html\" target=\"_blank\"></a></span></span><span class=\"NjE5zd\">Run <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"StringExplorer.java\" href=\"https://mvla.instructure.com/courses/8995/files/2921319?verifier=4YzqYh1x7ZfmPshp15IxHL5PYUXAigktxa11ozOr&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2921319\" data-api-returntype=\"File\">StringExplorer.java</a> to verify indexOf() and trim() behavioer</span></li>\n</ul>\n<p><span class=\"NjE5zd\"><strong><span style=\"color: #e03e2d;\">Turn in Magpie2.java to this Canvas assignment for 2 pts.</span></strong></span></p>\n<p><span><span class=\"instructure_file_holder link_holder instructure_file_link_holder\"><a class=\"inline_disabled\" title=\"Magpie2.zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842318?verifier=lvJqZjsCRdDQDm7Ns1JQXQ0kStqcH9kPcpcCNEnv&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842318\" data-api-returntype=\"File\">Magpie2.zip</a><a class=\"file_download_btn\" style=\"text-decoration: none;\" role=\"button\" href=\"https://mvla.instructure.com/courses/8995/files/2842318/download?verifier=lvJqZjsCRdDQDm7Ns1JQXQ0kStqcH9kPcpcCNEnv\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842318\" data-api-returntype=\"File\"> <img style=\"width: 16px; height: 16px;\" role=\"presentation\" src=\"https://mvla.instructure.com/images/svg-icons/svg_icon_download.svg\" alt=\"\" loading=\"lazy\"></a></span>&nbsp; <br></span></p>\n<p><span><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Magpie Lab Student Guide.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842308?verifier=lgjhQIW4Crfx6PmkdKJnJbFyPegLHWAk2EObmWZf&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842308\" data-api-returntype=\"File\">Magpie Lab Student Guide.pdf</a> <br></span></p>\n<p>&nbsp;</p>\n<p><span>1) <span class=\"NjE5zd\">HW Self review of Circle.java&nbsp;</span></span></p>\n<p><span><span class=\"NjE5zd\">a) Enter your score in this Google form: </span><span style=\"background-color: #eccafa;\"><a style=\"background-color: #eccafa;\" href=\"https://goo.gl/forms/2nZ4HZ2wweOXsPpJ2\" target=\"_blank\">https://goo.gl/forms/2nZ4HZ2wweOXsPpJ2</a> </span></span></p>\n<p><span><span class=\"NjE5zd\">b) Discuss Circle.java order of execution, and variable scope (calling subroutines) -<span style=\"background-color: #fbeeb8;\"> <a class=\"instructure_file_link inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1l49ax5Dgwv2OdX2fNipMIhtxzXtZC1BziPqkFtgBPl4/edit?usp=sharing\" target=\"_blank\">Slides</a></span>. <a class=\"instructure_file_link inline_disabled\" href=\"https://youtu.be/jCb6lrjq5tg\" target=\"_blank\">https://youtu.be/jCb6lrjq5tg</a></span></span></p>\n<p>&nbsp;</p>\n<p>2) Introduce <span>Chapter 2 Larger Programming Assignment: <a title=\"Chapter 2 Webcat\" href=\"https://mvla.instructure.com/courses/8995/assignments/180515\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/assignments/180515\" data-api-returntype=\"Assignment\">Chapter 2 Webcat</a></span></p>\n<p><span>Note, for legacy reasons I will call them \"Webcat\", even though we will no longer use the Webcat service to submit/test our code.&nbsp; These count as 35 test points, even though you complete them at home, on your own time, and can submit over and over. </span></p>\n<p><strong><span>&nbsp;</span></strong></p>\n<p>3) Talk about <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Ch 2 Test outline-1.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842679?verifier=jVXDjtHLM2FsGb0bEO9DWPMHO8Vh30MUnBoughog&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842679\" data-api-returntype=\"File\"><span style=\"background-color: #bfedd2;\">Ch 2 Test outline.pdf</span></a> and <a title=\"Day 10: Optional Ch 2 Test Practice Problems\" href=\"https://mvla.instructure.com/courses/8995/assignments/180827\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/assignments/180827\" data-api-returntype=\"Assignment\">Optional Ch 2 Test Practice Problems</a></p>\n<p>&nbsp;</p>\n<p>4) Work time (suggested order)</p>\n<p>a) <a title=\"Day 10: Optional Ch 2 Test Practice Problems\" href=\"https://mvla.instructure.com/courses/8995/assignments/180827\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/assignments/180827\" data-api-returntype=\"Assignment\">Optional Ch 2 Test Practice Problems</a> &nbsp; <strong>// Test will be Fri</strong>, worth 100 test points</p>\n<p>b) <span><a title=\"Chapter 2 Webcat\" href=\"https://mvla.instructure.com/courses/8995/assignments/180515\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/assignments/180515\" data-api-returntype=\"Assignment\">Chapter 2 Webcat</a></span> // Webcat is worth 35 test points.&nbsp; <strong>Due Monday at 11 pm.</strong> Submit when all tests pass, that way you know you will get 100%.</p>\n<p>c) <a title=\"HW #8: Codingbat (Last 24 problems from String-1 nonStart - withoutX2)\" href=\"https://mvla.instructure.com/courses/8995/assignments/180822\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/assignments/180822\" data-api-returntype=\"Assignment\">HW #8: Codingbat (Last 24 problems from String-1 nonStart - withoutX2)</a> &nbsp;// <strong>Due Friday.&nbsp;</strong> Worth 12 HW points total</p>\n<p>&nbsp;</p>\n<p><span>HW:&nbsp;</span></p>\n<p>- Optional (but very good practice): &nbsp;<a title=\"Day 10: Optional Ch 2 Test Practice Problems\" href=\"https://mvla.instructure.com/courses/8995/assignments/180827\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/assignments/180827\" data-api-returntype=\"Assignment\">Optional Ch 2 Test Practice Problems</a>&nbsp;</p>\n<p>- If you want to do more practice for the Ch 2 Test, I would try to re-do Circle.java from scratch and make sure you can define, call, and output the results of a subroutine.</p>\n<p><span>- &nbsp;<a title=\"Chapter 2 Webcat\" href=\"https://mvla.instructure.com/courses/8995/assignments/180515\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/assignments/180515\" data-api-returntype=\"Assignment\">Chapter 2 Webcat</a> (due Monday night at 11 pm).&nbsp; After that you have 1 week to get a maximum of 89%.&nbsp; After that you have 1 more week to get a maximum of 78%, then 1 week for 67% and so on.&nbsp; &nbsp;</span></p>\n<p><span>- Ongoing: <a title=\"HW #8: Codingbat (Last 24 problems from String-1 nonStart - withoutX2)\" href=\"https://mvla.instructure.com/courses/8995/assignments/180822\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/assignments/180822\" data-api-returntype=\"Assignment\">HW #8: Codingbat (Last 24 problems from String-1 nonStart - withoutX2)</a></span></p>",
      "materials": [],
      "dueDate": "2024-09-09T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180824",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180824",
      "title": "HW #9 Circle.java ",
      "description": "<p><span>Create a program from scratch called Circle.java. You can copy/paste \"public static void main(String[] args)\" or just type it by hand.<br></span></p>\n<p><span><strong><span style=\"color: #236fa1;\">Your program should have three subroutines -- main plus two helper functions.&nbsp;</span></strong> <strong>The second and third subroutines must be called in the main subroutine</strong>. You may use TextIO functions in your code, or you may use Scanner.</span></p>\n<p><span>1) A <strong>main</strong> subroutine that <strong>asks the user for the radius of a circle</strong> and then <strong>reports back the circumference and area of the circle. </strong></span></p>\n<p><span>2) A <strong>subroutine <em>(call it what you want, should be descriptive of what it does)</em></strong><em> </em>that <strong>takes in a radius</strong> as the parameter and <strong>returns the circumference of the circle</strong>. Think about what type would be best for both the parameter being passed in and the value being returned back (int? String? double? boolean? char?).</span></p>\n<p><span>3) Another <strong>subroutine <em>(call it what you want, should be descriptive of what it does)</em><em> </em></strong> that <strong>takes in a radius</strong> and <strong>returns the area</strong> of the circle. </span></p>\n<p>&nbsp;</p>\n<p><span style=\"color: #e03e2d;\">Submit Circle.java when you are done (I don't need TextIO.java).&nbsp;</span><em></em></p>",
      "materials": [],
      "dueDate": "2024-09-09T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180513",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180513",
      "title": "Chapter 2 Test (Optional Electronic Submission)",
      "description": "<p><span>First 15 minutes: Look at problems, but you must brainstorm code / pseudocode on paper only.</span></p>\n<p>You can just finish your work on paper and submit the paper (don't worry about the 'missing' Canvas assignment).</p>\n<p>&nbsp;</p>\n<p>Or, optionally, download the code for the 2 problems here:&nbsp;</p>\n<p>You can type up and test out your code in the remaining time.</p>\n<p><a id=\"2315713\" class=\"instructure_file_link inline_disabled\" title=\"Link\" href=\"https://mvla.instructure.com/courses/8995/files/2842405?verifier=4SUvoPlI0q5CbP99hqLKLtXvgFGN6cFCnv129GJ9&amp;wrap=1\" target=\"_blank\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842405\" data-api-returntype=\"File\">DistanceFinder.java</a></p>\n<p><a id=\"2315714\" class=\"instructure_file_link inline_disabled\" title=\"Link\" href=\"https://mvla.instructure.com/courses/8995/files/2842690?verifier=hLGZOOSYiZYDE5ZxEgyRmjKg4UJTMzvaPri6Jy6C&amp;wrap=1\" target=\"_blank\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842690\" data-api-returntype=\"File\">WordPatternChecker.java</a></p>\n<p><a id=\"2315705\" class=\"instructure_file_link inline_disabled\" title=\"Link\" href=\"https://mvla.instructure.com/courses/8995/files/2842673?verifier=RSHVo4GgShGeOASlWaPNryb6z1usYdQDd05HBWWm&amp;wrap=1\" target=\"_blank\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842673\" data-api-returntype=\"File\">TextIO.java</a></p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842688/preview?verifier=XAdfiw7nyrueM6ApxryRsTZQ0s9jTBxYXYKSIOfH\" alt=\"ch2example2.png\" width=\"375\" height=\"279\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842688\" data-api-returntype=\"File\" loading=\"lazy\"></p>\n<p>&nbsp;</p>\n<p><strong>Submit to this Canvas assignment if you want me to grade your electronic copy.</strong></p>\n<p><strong><span style=\"color: #169179;\">* Don't freak out if it doesn't compile/work perfectly!&nbsp; I give lots of partial credit*&nbsp; &nbsp; :)</span></strong></p>",
      "materials": [],
      "dueDate": "2024-09-13T10:06:00.000-07:00",
      "points": 100,
      "originLMS": "canvas"
    },
    {
      "id": "180822",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180822",
      "title": "HW #8: Codingbat (String-1 nonStart - withoutX2) ",
      "description": "<p><span class=\"NjE5zd\" style=\"color: #e03e2d;\">** Remember, as we discussed, while Canvas says assignments are due at Midnight, assume it is <strong>actually due at the start of class</strong> (it is just too much work to set the times for 4 different sections day after day)**</span></p>\n<p><span class=\"NjE5zd\">You don't have to submit anything to Canvas, as long as you are *****logged in****** to codingbat. </span></p>\n<p><span class=\"NjE5zd\"><span>HW #8: Codingbat String-1 (</span><a class=\"external\" href=\"http://codingbat.com/java/String-1\" target=\"_blank\"><span>http://codingbat.com/java/String-1</span></a><span>: nonStart through middleTwo)</span></span><span class=\"NjE5zd\"><span>.</span></span></p>\n<p><span>Do as many as you can do in a reasonable amount of time...don't spend 10 hours on it and don't copy off of the Internet. I'd rather have you take an hour and do 2 of them than copy them all.</span></p>\n<p><span><img src=\"https://mvla.instructure.com/courses/8995/files/2916635/preview?verifier=9ZltvkyuMbgNTC1J5qABvN4cKmNHDSfmhTGBDyID\" alt=\"image.png\" width=\"726\" height=\"545\" loading=\"lazy\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2916635\" data-api-returntype=\"File\"><br></span></p>\n<p>&nbsp;</p>",
      "materials": [],
      "dueDate": "2024-09-13T23:59:59.000-07:00",
      "points": 12,
      "originLMS": "canvas"
    },
    {
      "id": "180515",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180515",
      "title": "Chapter 2 Webcat",
      "description": "<p><span style=\"color: #843fa1;\"><span style=\"color: #000000;\">*** Download, and finish writing the subroutines in the</span> <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Functions.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842675?verifier=KkTC2np5re2QQL8x0HwMgBZMOTx8ZL0LBwgo0aqD&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842675\" data-api-returntype=\"File\"><span style=\"background-color: #bfedd2;\">Functions.java</span></a> <span style=\"color: #000000;\">file. *** </span><br></span></p>\n<p><span style=\"color: #843fa1;\"><span style=\"color: #000000;\">*** Here is the test file:</span> <span style=\"background-color: #f8cac6;\"><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" style=\"background-color: #f8cac6;\" title=\"FunctionsTester.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842676?verifier=4iAPlwg9I1yhSuB7TRij1lzpvDHosqCbQF9BXCs5&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842676\" data-api-returntype=\"File\">FunctionsTester.java</a></span> <span style=\"color: #000000;\">***</span></span></p>\n<p>&nbsp;</p>\n<p><span style=\"text-decoration: underline;\"><span style=\"color: #843fa1; text-decoration: underline;\"><strong>When your <span style=\"background-color: #bfedd2;\">Functions.java</span> file passes all 10 tests in <span style=\"background-color: #f8cac6;\">FunctionsTester.java<span style=\"background-color: #ffffff;\"> (not just the main() method in Functions.java)</span></span>, you can submit.&nbsp; </strong></span></span></p>\n<p><span style=\"color: #843fa1;\"><strong>You may submit as many times as you would like until you pass all of the tests and get 100% (no penalty for repeated submissions up to the due date).</strong></span></p>\n<p>You should use main() to write your own tests (beyond the ones tested in FunctionsTester.java). For example, in main() you could try:<br><strong>double slope1 = slope(1, 1, 3, 4); <span style=\"color: #169179;\">// calls 'slope' method with (1,1) (3,4) as the coordinate parameters.</span></strong><br><strong>System.out.println(slope1); <span style=\"color: #169179;\">// make sure the output is 1.5.</span>&nbsp;</strong></p>\n<p>&nbsp;</p>\n<p><span class=\"NjE5zd\" style=\"background-color: #ffffff;\"><em>Here are some hints:</em><span class=\"instructure_file_holder link_holder\"> <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Misc notes on the Webcat(3).pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842672?verifier=Q2jl8nPWV2hELGkgQ5zLbphJmnWfsh37PMQ4yMiV&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842672\" data-api-returntype=\"File\">Misc notes on the Webcat.pdf</a>&nbsp;</span></span></p>\n<p>If you submit after the due date (Monday at <span style=\"text-decoration: underline;\"><strong>11pm</strong></span>), you will receive an 11% penalty for each week late.&nbsp; So, up to a week late, you can turn in for 89% credit.&nbsp; For up to two weeks late, you can turn in for 78% credit, three weeks late, 67% credit, etc.</p>\n<p><strong>Your submissions will be run through a plagiarism detector, so please do not look at anyone else's code while doing this assignment. You can ask others for help, but be careful to only get small hints. </strong>You need to try a bunch of things until you get it right on your own. That's the only way you'll get better!</p>",
      "materials": [],
      "dueDate": "2024-09-16T23:00:00.000-07:00",
      "points": 35,
      "originLMS": "canvas"
    },
    {
      "id": "180565",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180565",
      "title": "Day 14 Extended Classwork: 3.1 Introduction to Loops",
      "description": "<p><span><span class=\"NjE5zd\">3.1 Loops Introduction<br></span></span></p>\n<p><span><span class=\"NjE5zd\">a) Optionally, you can look at the&nbsp; <span style=\"background-color: #fbeeb8;\">(<a class=\"instructure_file_link inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1I3_ms6AJft9fIq0uiG8pVEfIOHixsxjRqv5UWYb5NKc/edit#slide=id.p\" target=\"_blank\">Slides</a></span>) and (<span style=\"background-color: #f8cac6;\"><a class=\"instructure_file_link inline_disabled\" style=\"background-color: #f8cac6;\" href=\"https://drive.google.com/file/d/0B3ADdwxJkf48WEVSbXJNVHRDVEU/view\" target=\"_blank\">Notes</a></span>) &nbsp;<br></span></span></p>\n<p><span><span class=\"NjE5zd\">b) Watch the video:&nbsp; <a href=\"https://www.youtube.com/watch?v=_4zcaTUCS4Q\" target=\"_blank\">https://www.youtube.com/watch?v=_4zcaTUCS4Q</a><br></span></span></p>\n<p><span><span class=\"NjE5zd\">c) Log in, can type in <a class=\"instructure_file_link inline_disabled\" href=\"https://codingbat.com/prob/p165666\" target=\"_blank\">stringBits</a> from <a href=\"https://codingbat.com/java/Warmup-2\" target=\"_blank\">https://codingbat.com/java/Warmup-2</a></span></span></p>\n<p><span><span class=\"NjE5zd\">d) You try: Work on <a class=\"instructure_file_link inline_disabled\" href=\"https://codingbat.com/prob/p142270\" target=\"_blank\">stringTimes</a></span></span></p>\n<p><span><span class=\"NjE5zd\"><span style=\"color: #e03e2d;\"><strong>e) For submission, copy your code for stringTimes from Codingbat, and paste it into this Canvas assignment's text box. </strong></span><br></span></span></p>",
      "materials": [],
      "dueDate": "2024-09-16T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180568",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180568",
      "title": "Day 15 Extended Classwork: 3.2 - Pseudocode, last2",
      "description": "<p>a) Watch: <iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_launch_type%3Dembed%26custom_arc_media_id%3Df5d098dc-a060-49c0-bfa0-a88bb327ccec-1669\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" loading=\"lazy\"></iframe></p>\n<p>&nbsp;</p>\n<p>b) After watching the video, click the \"Submit Assignment\" button.&nbsp; Type into the text box your best idea of <strong>why</strong> last2 <em><strong>STILL</strong></em> wasn't working at the end (even after all the fixes):</p>\n<p>c) Optionally, since it is part of a HW, you can login and type into CodingBat, Warmup-2: <a class=\"instructure_file_link inline_disabled\" href=\"https://codingbat.com/prob/p178318\" target=\"_blank\">last2</a></p>",
      "materials": [],
      "dueDate": "2024-09-18T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180768",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180768",
      "title": "HW #10:  Warmup-2: (stringTimes - stringSplosion)",
      "description": "<p><span class=\"NjE5zd\">You don't have to submit anything to Canvas, as long as you are *****logged in****** to codingbat. </span></p>\n<p><span>Finish the first 6 in <a href=\"https://codingbat.com/java/Warmup-2\" target=\"_blank\">https://codingbat.com/java/Warmup-2</a> <br></span></p>\n<p><span><img src=\"https://mvla.instructure.com/courses/8995/files/2842411/preview?verifier=RqVjTxlc1K81IhztDKGFSOiYhGPDUm9BxG3Bx27s\" alt=\"Untitled 7.png\" width=\"554\" height=\"182\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842411\" data-api-returntype=\"File\" loading=\"lazy\"></span></p>\n<p><span>Do as many as you can do in a reasonable amount of time...don't spend 10 hours on it and don't copy off of the Internet. <br></span></p>",
      "materials": [],
      "dueDate": "2024-09-18T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180770",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180770",
      "title": "HW #11  WU-2: last2,stringMatch,stringX,altPairs ",
      "description": "<p><span class=\"NjE5zd\">You don't have to submit anything to Canvas, as long as you are *****logged in****** to codingbat. </span></p>\n<p>Finish&nbsp; <span class=\"NjE5zd\"><a class=\"instructure_file_link inline_disabled\" href=\"https://codingbat.com/prob/p178318\" target=\"_blank\">last2</a>, <a class=\"instructure_file_link inline_disabled\" href=\"https://codingbat.com/prob/p198640\" target=\"_blank\">stringMatch</a>, <a class=\"instructure_file_link inline_disabled\" href=\"https://codingbat.com/prob/p171260\" target=\"_blank\">stringX</a>, <a class=\"instructure_file_link inline_disabled\" href=\"https://codingbat.com/prob/p121596\" target=\"_blank\">altPairs</a> in <a href=\"https://codingbat.com/java/Warmup-2\" target=\"_blank\">https://codingbat.com/java/Warmup-2</a>&nbsp;</span></p>\n<p><span class=\"NjE5zd\"><img src=\"https://mvla.instructure.com/courses/8995/files/2842691/preview?verifier=BZ4QQC2ImL7Di0WA9sD60isvA2yZnLmmRD4JzPHh\" alt=\"Codingbat last2 stringmatch stringx altPairs.png\" width=\"654\" height=\"306\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842691\" data-api-returntype=\"File\" loading=\"lazy\"></span></p>\n<p><span>Do as many as you can do in a reasonable amount of time...don't spend 10 hours on it and don't copy off of the Internet. <br></span></p>",
      "materials": [],
      "dueDate": "2024-09-20T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180772",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180772",
      "title": "HW #12:  3N + 1 Enhanced",
      "description": "<p><span style=\"background-color: #fbeeb8;\"><a class=\"instructure_file_link inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1pEkV-r7z468EvxciMIbjzEDiC4zlt8XEhM7SC2r3gRQ/edit\" target=\"_blank\">ThreeN1Enhanced.java Slides</a></span></p>\n<p>Create a program ThreeN1Enhanced.java, that prompts the user for an integer (let's call it 'x' where x is an integer from 1 to 100,000) and figures out (1) which number from 1 to x &nbsp;generates the longest &nbsp;3n+1 sequence, and (2) how long that sequence is.&nbsp;</p>\n<p>So, the user may input 100000, and then your program would search for which number generates the longest sequence for that range. Or they may input 100, and then your program only checks from 1 to 100. Or they may input 50, and it would check which number has the longest sequence from 1 to 50.&nbsp;</p>\n<p>&nbsp;</p>\n<p>For example, the number <span style=\"color: #e03e2d;\">10 </span>only generates a sequence that is only 7 numbers long: <span style=\"color: #e03e2d;\">10, 5, 16, 8, 4, 2, 1.</span><br>Whereas, the number <span style=\"color: #236fa1;\">9</span> would generate 20 numbers: <span style=\"color: #236fa1;\">9, 28, 14, 7, 22, 11, 34, 17, 52, 26, 13, 40, 20, 10, 5, 16, 8, 4, 2, 1</span>.</p>\n<p>&nbsp;</p>\n<p>So if you enter in \"10\" for input, it would check sequences for 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, find the max sequence, and output</p>\n<p><strong>\"Longest sequence possible from 1-10 generated by number: <span style=\"text-decoration: underline;\">9</span>. Length of sequence: <span style=\"text-decoration: underline;\">20 </span>terms.\"&nbsp;&nbsp;<em> (or <span style=\"text-decoration: underline;\">19</span> terms, depending on if you count the first #)</em><br></strong></p>\n<p>If there is a tie, you can just output one of them. (Which one is output would depend on your implementation).</p>\n<p>&nbsp;</p>\n<p>Submit <strong>ThreeN1Enhanced.java</strong>.</p>",
      "materials": [],
      "dueDate": "2024-09-23T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180774",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180774",
      "title": "HW #13:  DivisorCounter.java",
      "description": "<p><span style=\"background-color: #fbeeb8;\"><a class=\"instructure_file_link inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1PTtU110mecwNemAKPpQ0_-yNBK3qvSgwwWzZjJ-vuB4/edit?usp=sharing\" target=\"_blank\">DivisorCounter Slides</a></span></p>\n<p><span>Write a program called DivisorCounter.java that: </span></p>\n<p><span>1) Prompts the user for an integer </span></p>\n<p><span>2) Figures out which integer(s) between 1 and the inputted number has the greatest amount of divisors </span></p>\n<p><span>3) Prints out the resulting integer along with its number of divisors </span></p>\n<p><span>As an example, suppose the user entered 20, the result would be something like this:</span></p>\n<p><span style=\"color: #236fa1;\"> \"The number(s) between <strong>1</strong> and <strong>20</strong> with the most divisors are: <strong>12 18 20</strong>. They each have <strong>6</strong> divisors.\"</span></p>\n<p>&nbsp;</p>\n<p><span>One way to do this is to (a) loop over all the numbers to find the highest amount of divisors and then (b) loop over them again to print out the numbers with that many divisors. You may choose which type of loop (while/for) to use.&nbsp;</span></p>\n<p>&nbsp;</p>",
      "materials": [],
      "dueDate": "2024-09-25T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180776",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180776",
      "title": "HW #14:  Rock Paper Scissors",
      "description": "<p>- <a id=\"1750248\" class=\"instructure_file_link inline_disabled\" href=\"https://mvla.instructure.com/courses/8995/files/2842673?verifier=RSHVo4GgShGeOASlWaPNryb6z1usYdQDd05HBWWm&amp;wrap=1\" target=\"_blank\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842673\" data-api-returntype=\"File\"><span>TextIO.java</span></a></p>\n<p>- <span>Completely Optional: If you want to use ASCII art Strings representing the rock, paper, scissors instead of a String like \"rock\", you can copy/use the variables given in the attached file. <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"RockPaperScissorsASCII.txt\" href=\"https://mvla.instructure.com/courses/8995/files/2842448?verifier=wv7YBTJaKao22UWXIzMI1sdS7qhQDYPnrAhkdAfB&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842448\" data-api-returntype=\"File\">RockPaperScissorsASCII.txt </a></span></p>\n<p><span>- Video explanation of HW <a href=\"https://youtu.be/tMSCJmgievw\" target=\"_blank\">https://youtu.be/tMSCJmgievw</a></span> &nbsp; <strong>(Game demo at 2:00 mark of video)</strong></p>\n<p>&nbsp;</p>\n<p><span>Make a Rock, Paper, Scissors program with the following specifications:</span></p>\n<p><span> -- Name is RockPaperScissors.java </span></p>\n<p><span>-- The computer plays against the human user for a <strong>best out of 3 rock, paper, scissors, game</strong> (Option to enhance if finished early: you can start out asking the player what the necessary score to win should be, then play that number of rounds for extra customization). </span></p>\n<p><span>-- In each of the 3 rounds, the <strong>program prompts the user for her/his move and then shows the computer's move. </strong></span></p>\n<p><span>-- The <strong>score should be printed out after each round. </strong></span></p>\n<p><span>-- The <strong>winner (human or computer) should be printed out as soon as there is a winner </strong></span><span>(a 3rd round might not be necessary)</span></p>\n<p><span> -- <strong>A switch statement should be used in the code</strong>.</span></p>",
      "materials": [],
      "dueDate": "2024-09-27T23:59:59.000-07:00",
      "points": 5,
      "originLMS": "canvas"
    },
    {
      "id": "180590",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180590",
      "title": "Day 20 Extended Classwork: Introduction to Arrays",
      "description": "<p>a) Watch 3.8 notes on arrays (<span style=\"background-color: #f8cac6;\"><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" style=\"background-color: #f8cac6;\" title=\"3.8 notes(1).pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842703?verifier=9f0YpRtfLHHsnZ8XJCiW2aGSTD1ob61A1uLndgyN&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842703\" data-api-returntype=\"File\">3.8 notes.pdf</a></span>): <a href=\"https://www.youtube.com/watch?v=Ghb9IngawYk&amp;feature=youtu.be\" target=\"_blank\">https://www.youtube.com/watch?v=Ghb9IngawYk&amp;feature=youtu.be</a>&nbsp;</p>\n<p>b) Download <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"ArrayDemo.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842441?verifier=YzAG2Wb1QbA6aE6FSn2HcKDqrmQfaiThQZoEMiG9&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842441\" data-api-returntype=\"File\">ArrayDemo.java</a>&nbsp;</p>\n<p>c) Watch the ArrayDemo video, type in code: <a href=\"https://youtu.be/ycFJ8tNbLSk\" target=\"_blank\">https://youtu.be/ycFJ8tNbLSk</a></p>\n<p>d) Submit completed ArrayDemo to this assignment.</p>",
      "materials": [],
      "dueDate": "2024-09-30T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180518",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180518",
      "title": "*Chapter 3 Test",
      "description": "<p><span>2 parts:<br></span></p>\n<p><span>1) Multiple Choice: &nbsp;</span><span><a title=\"Ch 3 Test M.C. \" href=\"https://mvla.instructure.com/courses/8995/quizzes/18431?wrap=1\" data-course-type=\"quizzes\" data-published=\"false\">Ch 3 Test M.C. </a></span></p>\n<p>&nbsp;</p>\n<p><span>2) Performance Task:</span></p>\n<p><span>a) Download</span> <a id=\"2315787\" class=\"instructure_file_link inline_disabled\" title=\"Link\" href=\"https://mvla.instructure.com/courses/8995/files/2842721?verifier=C7m6Rjw3uwudKZaiLUCTLDiuDedJpP8GM5uxwKG2&amp;wrap=1\" target=\"_blank\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842721\" data-api-returntype=\"File\">Hangman.java</a> <span>(If you need it: <a id=\"2315705\" class=\"instructure_file_link inline_disabled\" title=\"Link\" href=\"https://mvla.instructure.com/courses/8995/files/2842673?verifier=RSHVo4GgShGeOASlWaPNryb6z1usYdQDd05HBWWm&amp;wrap=1\" target=\"_blank\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842673\" data-api-returntype=\"File\">TextIO.java</a>)&nbsp; </span></p>\n<p><span>b) Here is <span style=\"background-color: #f8cac6;\"><span class=\"instructure_file_holder link_holder instructure_file_link_holder\"><a id=\"2315750\" class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Link\" href=\"https://mvla.instructure.com/courses/8995/files/2842466?verifier=ccUy0qc2y5WouGSHd79k00QvFWrsMwDSkOcFBGMs&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"true\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842466\" data-api-returntype=\"File\">Hangman sample output.pdf</a></span></span></span></p>\n<p><span>c) Fill in the missing methods in Hangman.java, test it, and submit.</span></p>\n<p>&nbsp;</p>\n<p><strong><span style=\"color: #169179;\">* Don't freak out if it doesn't compile/work perfectly!&nbsp; I give lots of partial credit*&nbsp; &nbsp; :)</span></strong></p>",
      "materials": [],
      "dueDate": "2024-10-04T10:06:00.000-07:00",
      "points": 100,
      "originLMS": "canvas"
    },
    {
      "id": "180494",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180494",
      "title": "Ch 3 Test M.C. ",
      "description": "",
      "materials": [],
      "dueDate": "2024-10-04T10:06:00.000-07:00",
      "points": 3,
      "originLMS": "canvas"
    },
    {
      "id": "180520",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180520",
      "title": "Chapter 3 Webcat - Loan Calculator",
      "description": "<p>&nbsp;For reference, here is a review of the formats you will use: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"2.4 Formatted output review.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842700?verifier=rjASd15QWuX8uCnpxPFuCEjo5XPAnEWrq4bukvmK&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842700\" data-api-returntype=\"File\"><span style=\"background-color: #fbeeb8;\">2.4 Formatted output review.pdf</span></a><span style=\"background-color: #fbeeb8;\">&nbsp;</span></p>\n<p>0)&nbsp;<span><span style=\"color: #000000;\">Here is the test file</span><span class=\"instructure_file_holder link_holder\"><span style=\"color: #000000;\">:</span> <span style=\"background-color: #f8cac6;\"><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" style=\"background-color: #f8cac6;\" title=\"LoanCalculatorTest.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842726?verifier=6pJLuH4pgxf4eqMHvZVPyegZGT7UCGTs4DLHd6ie&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842726\" data-api-returntype=\"File\">LoanCalculatorTest.java</a>&nbsp;</span><br></span></span></p>\n<p>Note that the linked file is a JUnit test, and it takes a tiny bit of work to get it working on Eclipse:<span>&nbsp;</span><span><strong>Right click on project --&gt; \"Build Path\" --&gt; \"Configure Build Path\" --&gt; \"Libraries\" --&gt; Classpath (NOT Modulepath) --&gt; \"Add Library\" --&gt; \"Junit 4 or 5\"&nbsp;</strong></span></p>\n<p><span><strong><img src=\"https://mvla.instructure.com/courses/8995/files/2842317/preview?verifier=dCasSgkhxCb3t7MAH7hAM1pzLXGpI5xDRqtyS0v0\" alt=\"Screen Shot 2021-09-24 at 9.58.08 AM.png\" width=\"701\" height=\"65\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842317\" data-api-returntype=\"File\" loading=\"lazy\"></strong></span></p>\n<p>&nbsp;</p>\n<p><strong>1) ***<span style=\"text-decoration: underline;\">Read the assignment</span>***:</strong> <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Ch03WebCATAssignment.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842698?verifier=mirGZ9PEl5Ecl0eNXdbxt9uYz3WKCNb4Vj0u4bgp&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842698\" data-api-returntype=\"File\"><span style=\"background-color: #c2e0f4;\">Ch03WebCATAssignment.pdf</span></a><span style=\"background-color: #c2e0f4;\">&nbsp;</span></p>\n<p>&nbsp;</p>\n<p>2) Watch video intro: <a href=\"https://www.youtube.com/watch?v=qZi-326pIWY&amp;feature=youtu.be\" target=\"_blank\">https://www.youtube.com/watch?v=qZi-326pIWY&amp;feature=youtu.be</a></p>\n<p>Simple Loan Calculator loan (<span style=\"background-color: #fbeeb8;\"><a class=\"instructure_file_link inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1C4858zMutaId0zTyXOgaQTzcchKKM5FRJhf-AE9YURY/edit#slide=id.g8678992c70_0_5\" target=\"_blank\">Slides</a></span>)</p>\n<p>&nbsp;</p>\n<p>3) Write the LoanCalculator.java file from scratch.</p>\n<p>&nbsp;</p>\n<p><span style=\"color: #169179;\"><strong>- You may submit as many times as you would like until you pass all of the tests and get 100% (no penalty for repeated submissions up to the due date).</strong></span> If you submit after the due date, you will receive a penalty of 11% per week later.&nbsp;</p>\n<p><strong>- Your submissions will be run through a plagiarism detector</strong>, so please do not look at anyone else's code while doing this assignment. You can ask others for help, but be careful to only get small hints. You need to try a bunch of things until you get it right on your own. That's the only way you'll get better!</p>",
      "materials": [],
      "dueDate": "2024-10-04T23:00:00.000-07:00",
      "points": 8,
      "originLMS": "canvas"
    },
    {
      "id": "180601",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180601",
      "title": "Day 23 Extended Classwork: GUI",
      "description": "<p>1) 3.9 Introduction to Graphical User Interfaces (GUI) using Java Swing.&nbsp; <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"3.9 notes.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842723?verifier=bkJN1weOEeNvH4opqsbjsamdSVGQdIhUPYMOZD4e&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842723\" data-api-returntype=\"File\"><span style=\"background-color: #f8cac6;\">3.9 notes.pdf </span></a></p>\n<p><span style=\"background-color: #ffffff;\">a) Download starter code: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"MultiplicationTable.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842433?verifier=O4CcQGQRLumDHWxnpaQ8nfLuNHDZ2KjYRqdaWGmK&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842433\" data-api-returntype=\"File\">MultiplicationTable.java</a>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"SimpleAnimationStarter.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842467?verifier=R1qSW5U2MBqPiMf1AVtPTd4e5J5SdMBr9tqK11BZ&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842467\" data-api-returntype=\"File\"> SimpleAnimationStarter.java</a></span></p>\n<p><span style=\"background-color: #ffffff;\">b) Reference the worksheet: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Model of GUI.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842722?verifier=7srvt9Hh9QjjrwI5K9FCuifZgyYdlp18Tx4lFrRH&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842722\" data-api-returntype=\"File\">Model of GUI.pdf</a> </span></p>\n<p><span style=\"background-color: #ffffff;\">c) Watch videos fill out (i) MultiplicationTable and (ii) SimpleAnimationStarter.&nbsp;</span></p>\n<p><span style=\"color: #000000;\"><span style=\"background-color: #ffffff;\">1. Multiplication Table (~6 min) <a href=\"https://youtu.be/sWV6HOdgyuI\" target=\"_blank\">https://youtu.be/sWV6HOdgyuI</a></span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"background-color: #ffffff;\">2. Creating outline of checkerboard (~16 min) <a href=\"https://youtu.be/x9qx8E9Qw9o\" target=\"_blank\">https://youtu.be/x9qx8E9Qw9o</a>&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"background-color: #ffffff;\">3. Coloring and Animating the checkerboard (~6 min)&nbsp; <a href=\"https://youtu.be/-RoeGNVNucY\" target=\"_blank\">https://youtu.be/-RoeGNVNucY</a>&nbsp;</span></span></p>\n<p>&nbsp;</p>\n<p><strong><span style=\"background-color: #ffffff;\">d) Submit MultiplicationTable.java and SimpleAnimationStarter.java when finished.</span></strong></p>\n<p>&nbsp;</p>",
      "materials": [],
      "dueDate": "2024-10-07T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180610",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180610",
      "title": "Day 24 Extended CW: Subroutines as Black Boxes",
      "description": "<p>Here are the 4.1, 4.2 notes:&nbsp; (<a class=\"instructure_file_link inline_disabled\" href=\"https://docs.google.com/presentation/d/1NLdWc319YGphRWBr4d0yUXTcQuixLKdyOciNSOMXQOc/edit\" target=\"_blank\"><span style=\"background-color: #fbeeb8;\">Slides</span></a>)&nbsp;&nbsp;</p>\n<p>a) Download <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"GuessingGame.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842732?verifier=D3oF2BXLsDimySa4zmN9jE9heYHYra9Bng5U5eyo&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842732\" data-api-returntype=\"File\">GuessingGame.java</a>&nbsp;</p>\n<p>b) Watch, fill in, answer quiz questions: 4.1 Practice creating subroutines: Refactor GuessingGame.java (~22 min.)</p>\n<p>c) Watch , fill in, answer quiz questions: 4.2&nbsp; Explore access (public/private/package) (~6 min.).&nbsp; <span style=\"color: #e03e2d;\"><strong>Submit the finished GuessingGame to this post for 2 pts.</strong></span></p>\n<p><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_embedding_id%3D269---oTDDD-91u6c-fSj1HIqg\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" data-mce-fragment=\"1\" loading=\"lazy\"></iframe></p>\n<p><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_embedding_id%3D270-VvxoX15cD0FULxmNYECqDQ\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" data-mce-fragment=\"1\" loading=\"lazy\"></iframe></p>",
      "materials": [],
      "dueDate": "2024-10-09T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180618",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180618",
      "title": "Day 25 Extended Classwork #2: APIs and Javadoc",
      "description": "<p><span>0) Watch 4.5, 4.6 notes, fill in quiz questions :APIs&nbsp; </span><span>Javadoc notes: (<a class=\"instructure_file_link inline_disabled\" href=\"https://docs.google.com/presentation/d/1yCAm99tQUAvsb_YaEwBvXPEKUI_xqPsq1XMEfkW3Eno/edit\" target=\"_blank\"><span style=\"background-color: #fbeeb8;\">Slides</span></a>)&nbsp;&nbsp;</span></p>\n<p><span style=\"color: #e03e2d;\"><strong>Nothing to submit, just do the Canvas quiz questions for 2 pts.</strong></span></p>\n<p><span><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_embedding_id%3D279-v0W8BmAisAKmJqh6RiFd6g\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" loading=\"lazy\"></iframe></span></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>",
      "materials": [],
      "dueDate": "2024-10-09T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180617",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180617",
      "title": "Day 25 Extended CW: 4.3 Developing, Refactoring Subroutines",
      "description": "<p>4.3 notes: <span>Refactoring to include subroutines:&nbsp; <span style=\"background-color: #fbeeb8;\">(</span></span><span style=\"background-color: #fbeeb8;\"><a style=\"background-color: #fbeeb8;\" href=\"http://bit.ly/2PtjawO\" target=\"_blank\">Slides)</a></span></p>\n<p><span style=\"color: #e03e2d;\"><strong><span style=\"background-color: #ffffff;\">After watching the 2 videos, submit the refactored CountMaxDivisors to this post for 2 points.</span></strong></span></p>\n<p><span>a) Download <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"CountMaxDivisors.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842495?verifier=50FmShuRXCzKxeG410hZ4G9k0gcyo0iBWd26uhXh&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842495\" data-api-returntype=\"File\">CountMaxDivisors.java</a>&nbsp; </span></p>\n<p><span>b) Watch 4.3 notes (~8 min.): <a href=\"https://www.youtube.com/watch?v=kHJlVNLIJSs\" target=\"_blank\">https://www.youtube.com/watch?v=kHJlVNLIJSs</a> <br></span></p>\n<p><span>c) Watch, fill in refactor of CountDivisors (~18 min.): <a href=\"https://youtu.be/6m5KS00Bm8o\" target=\"_blank\">https://youtu.be/6m5KS00Bm8o</a></span></p>",
      "materials": [],
      "dueDate": "2024-10-09T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180628",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180628",
      "title": "Day 27: Refactor RockPaperScissors *Submit here*",
      "description": "<p><span>0) Discuss <span style=\"background-color: #bfedd2;\"><a class=\"inline_disabled\" style=\"background-color: #bfedd2;\" href=\"https://docs.google.com/spreadsheets/d/1sjNz31_HetN0pTWh6HjnH-YpKVfRujGYhwIEQNg04JU/edit?usp=sharing\" target=\"_blank\">Ch 2 Test Rubric</a>.</span> Discuss makeup policy.&nbsp;</span></p>\n<p>Discuss <span style=\"background-color: #fbeeb8;\"><a class=\"inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1KsZHFcKnyVHu2LvQNSWdfEpzarjB9fpNXiY9St0J54A/edit?usp=sharing\" target=\"_blank\">APCS Integrity Policy</a></span>.&nbsp; What kind of help can I get?&nbsp; What kind of help can I give?&nbsp; What counts as \"copying?\"</p>\n<p>&nbsp;</p>\n<p><span>1) Statistics.java<br></span></p>\n<p><span>a) Go over Statistics, discuss defining and calling subroutines to accomplish a task instead of repeating yourself: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"StatisticsExample.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842482?verifier=OgJhfVM0U208osaB1Pb3VEcUftL4d76MakGCQ0pk&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842482\" data-api-returntype=\"File\">StatisticsExample.java</a>&nbsp;<br></span></p>\n<p><span>b) Self review Statistics. If you are not done, try to finish today and then complete the self review. Please be honest (i.e. don't copy the example).&nbsp; Run the StatisticsTester, fill in <span style=\"background-color: #eccafa;\"><a style=\"background-color: #eccafa;\" href=\"https://goo.gl/forms/1DbYRyI07Dluho9g1\">https://goo.gl/forms/1DbYRyI07Dluho9g1</a></span>&nbsp;</span></p>\n<p>&nbsp;</p>\n<p>2) With your new <a class=\"inline_disabled\" href=\"https://docs.google.com/presentation/d/1Y9k5dzhNHae8zzP3v7XM-s-0iB8YK0NIblKyxjMnw3I/edit#slide=id.g2fa46b22df0_0_20\" target=\"_blank\">partner</a>, <span>Separating out subroutines practice (Practice for Ch 4 test at the end of next week).&nbsp;&nbsp; <span style=\"background-color: #fbeeb8;\"><a class=\"inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1F0ayzwTHjEd1dB_o0FFrC_fSHb6mf0ATNupVxXE9SAA/edit?usp=sharing\" target=\"_blank\">4.3 RockPaperScissors refactor slides</a></span></span></p>\n<p><span>a) Download <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"RockPaperScissorsRefactor.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842735?verifier=Nwp7XUmTJfZ5lqZck4vKhBHvLKTmZawzJFzwQnu1&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842735\" data-api-returntype=\"File\">RockPaperScissorsRefactor.java</a>&nbsp; (<a id=\"2842673\" class=\"instructure_file_link inline_disabled\" title=\"Link\" href=\"https://mvla.instructure.com/courses/8995/files/2842673?verifier=RSHVo4GgShGeOASlWaPNryb6z1usYdQDd05HBWWm&amp;wrap=1\" target=\"_blank\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842673\" data-api-returntype=\"File\">TextIO.java</a>)<a class=\"instructure_file_link instructure_scribd_file\" title=\"RockPaperScissors.java\" href=\"https://mvla.instructure.com/courses/8995/file_contents/course%20files/Uploaded%20Media/RockPaperScissors.java?canvas_download=1&amp;canvas_qs_wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/3437/files/1167644\" data-api-returntype=\"File\"></a></span></p>\n<p><span>b) Create at least 2 <strong>meaningful</strong> subroutines.&nbsp; Consider what the input parameters should be, and what type.&nbsp; &nbsp;Consider what the return type should be.&nbsp; Your subroutine should ideally accomplish one clear task <em>(i.e. not doing too little, not doing too much).&nbsp; </em>If the job of the subroutine is to print out results, it's OK to System.out inside the subroutine!<br></span></p>\n<p><span>c)<span style=\"color: #e03e2d;\"> <strong>Submit your refactored RockPaperScissorsRefactor.java to this Canvas assignment.</strong></span></span></p>\n<p>d) Work on <a title=\"HW #15:  Array-2 (*updated: finish as many as you can*)\" href=\"https://mvla.instructure.com/courses/8995/assignments/180779\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/assignments/180779\" data-api-returntype=\"Assignment\">HW #15, Codingbat Array-2</a> if you finish early.</p>\n<p>-----------------------------------------------</p>\n<p>3) Lightning review: 4.5 APIs <span><a class=\"instructure_file_link inline_disabled external\" href=\"https://docs.google.com/presentation/d/1yCAm99tQUAvsb_YaEwBvXPEKUI_xqPsq1XMEfkW3Eno/edit#slide=id.g447db6b688_0_198\" target=\"_blank\"><span style=\"background-color: #fbeeb8;\">Slides</span></a></span></p>\n<p>&nbsp;</p>\n<p>4) <span>Introduce Mosaic API <br></span></p>\n<p><span>a) Download, unzip (Mac, double-click, Windows, right-click \"Extract all\"): &nbsp;<a class=\"instructure_file_link inline_disabled\" title=\"Mosaic Files-2.zip\" href=\"https://mvla.instructure.com/courses/8995/files/2992695?verifier=8r06Ycfu76vO5oasEFF18N8pEzMsVIwV1Nk7I01s&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2992695\" data-api-returntype=\"File\">Mosaic Files.zip</a><br></span></p>\n<p><span>b) Generate API using Javadoc in Eclipse for Statistics and Mosaic https://youtu.be/KECaDroXUF8&nbsp;&nbsp;</span></p>\n<p><span>c) If part b failed, use this .pdf version instead: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Mosaic API-3.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2992696?verifier=6Wa5fAsPGxutxoxlRdRR3kzUcyzXhLTHzwv9bTiT&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2992696\" data-api-returntype=\"File\">Mosaic API.pdf</a><br></span></p>\n<p>&nbsp;</p>\n<p><span>5) Demo use of Mosaic API: </span><span>MosaicExperimenter</span></p>\n<p><span>a) Watch, create MosaicExperimenter.java file, fill in code:&nbsp; <a href=\"https://youtu.be/cBeKdgzq0vI\" target=\"_blank\">https://youtu.be/cBeKdgzq0vI</a>&nbsp;</span></p>\n<p><span>b) Description of Ch 4 Webcat replacement (MosaicCreator): <a id=\"2315770\" class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Link\" href=\"https://mvla.instructure.com/courses/8995/files/2842736?verifier=nkjcXdOIZL17PBxk6GtiKPIQGGRVj7ZkB6Twotgj&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"true\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842736\" data-api-returntype=\"File\">MosaicCreatorDescription.pdf</a></span></p>\n<p>&nbsp;</p>\n<p><span>HW:</span></p>\n<p><span>- <a title=\"Chapter 4 Programming Assignment - Mosaic\" href=\"https://mvla.instructure.com/courses/8995/assignments/180522\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/assignments/180522\" data-api-returntype=\"Assignment\">MosaicCreator</a> (Ch 4 Webcat replacement).&nbsp; Will be due at the end of next week.&nbsp; <br></span></p>\n<p><span><a title=\"HW #15:  Array-2 (*updated: finish as many as you can*)\" href=\"https://mvla.instructure.com/courses/8995/assignments/180779\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/assignments/180779\" data-api-returntype=\"Assignment\">HW #15, Codingbat Array-2</a>: Try to finish as many as you can by the end of Ch 4.&nbsp; &nbsp;<span>Finish all remaining problems, or as many as you can&nbsp; in Array-2...if you can't finish them all, just do as many as you reasonably can. </span></span></p>\n<p><span><span><img src=\"https://mvla.instructure.com/courses/8995/files/2842493/preview?verifier=nNhcSsn78SAt10xBiqBonxTZ9ovaJN0iyyTvrjWv\" alt=\"Untitled 9-2.png\" width=\"395\" height=\"205\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842493\" data-api-returntype=\"File\" loading=\"lazy\"></span></span></p>",
      "materials": [],
      "dueDate": "2024-10-16T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180781",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180781",
      "title": "HW #16:  Statistics.java",
      "description": "<p><span class=\"NjE5zd\">1) Add to the Statistics class methods <strong>3 overloaded methods</strong> called <strong>calculateMedian()</strong> that take in a <strong>int[], double[] and String[]</strong> as parameters, and return the median. </span></p>\n<p><span style=\"color: #169179;\"><em><strong><span class=\"NjE5zd\">**Hint: if you import java.util.Arrays, you can call the static method Arrays.sort() to make your life easier. Note that sort() is void, so you don't have to save any returned array, simply calling it will sort the array you pass in. You can reference the <a class=\"inline_disabled\" href=\"https://docs.google.com/presentation/d/1oPpMPhRSFSYO2Xj2yg2roCQ4ThTkGQ-O28cfGGW6rY0/edit#slide=id.p\" target=\"_blank\"><span style=\"background-color: #fbeeb8;\">4.3 Slides</span></a> to see an example </span></strong></em></span></p>\n<p>&nbsp;</p>\n<p><span class=\"NjE5zd\">2) Add to the Statistics class methods <strong>3 overloaded methods</strong> called <strong>calculateStdDev()</strong> that take in a <strong>int[], double[] and String[] </strong>as parameters, and return the standard deviation, calculated by hand in your methods. </span></p>\n<p><em><strong><span class=\"NjE5zd\" style=\"color: #e03e2d;\">** Try to use your methods from the original Statistics.java to avoid repeating code!! </span></strong></em></p>\n<p><span class=\"NjE5zd\">**Hint: here's a quick review of how: </span><a href=\"https://www.mathsisfun.com/data/standard-deviation-formulas.html\" target=\"_blank\">https://www.mathsisfun.com/data/standard-deviation-formulas.html</a><span class=\"NjE5zd\">.</span><span class=\"NjE5zd\"> You can use the formula for a population (divide by n) OR a sample (divide by n - 1), I don't care</span></p>\n<p><span class=\"NjE5zd\">**Here is a calculator for standard deviation: <a href=\"https://www.mathsisfun.com/data/standard-deviation-calculator.html\" target=\"_blank\">https://www.mathsisfun.com/data/standard-deviation-calculator.html</a> </span></p>\n<p>&nbsp;</p>\n<p><span class=\"NjE5zd\">3) Test your overloaded methods by calling them from <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"StatisticsTester.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842734?verifier=cnh6KAkGFUE6kWIWBxxgT4RUDVaeeh1EbtKhZUze&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842734\" data-api-returntype=\"File\">StatisticsTester.java</a> (you can add your own tests, or even create your own tester file). <br></span></p>\n<p>&nbsp;</p>\n<p><span class=\"NjE5zd\">4) Submit only your Statistics.java file.&nbsp;</span></p>",
      "materials": [],
      "dueDate": "2024-10-16T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180523",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180523",
      "title": "Chapter 4 Test",
      "description": "<p><strong>Task 1: </strong>Refactor <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"SequenceCalculator.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842460?verifier=JHnj2QkjQOEYZOKEhYhOPklM2G4FocFnKcTrwm9u&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842460\" data-api-returntype=\"File\">SequenceCalculator.java</a>.&nbsp; Download, and refactor to include 2 meaningful subroutines.</p>\n<p>- TextIO if you need it: <a id=\"1750248\" class=\"instructure_file_link inline_disabled\" href=\"https://mvla.instructure.com/courses/8995/files/2842673?verifier=RSHVo4GgShGeOASlWaPNryb6z1usYdQDd05HBWWm&amp;wrap=1\" target=\"_blank\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842673\" data-api-returntype=\"File\">TextIO.java</a></p>\n<p>- A \"meaningful\" subroutine accomplishes some specific task (which <em>could</em> include System.outting if that is the <span style=\"text-decoration: underline;\">purpose</span> of the subroutine).&nbsp;&nbsp;</p>\n<p>- Don't make the subroutine so short that it is trivial (e.g. printing \"Welcome\") and don't make it too long as to replace the entire original main.</p>\n<p>- Test to make sure it still works properly.</p>\n<p>- Here is an explanation for you to check output: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Explanation of 3 Sequences.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842743?verifier=tcJgKiZFY2uDGTbVaNInjjoPbY7TT9b2EB4QxY6J&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842743\" data-api-returntype=\"File\"><span style=\"background-color: #f8cac6;\">Explanation of 3 Sequences.pdf</span></a></p>\n<p>&nbsp;</p>\n<p><strong>Task 2: </strong>On paper (please write legibly)</p>\n<p><span>- You may refer to the </span><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"String API-1.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842312?verifier=EhbQmatr7MJJC6Huy0DqFIVBRvd2joi9zfwKTfoG&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842312\" data-api-returntype=\"File\"><span style=\"background-color: #f8cac6;\"><span class=\"instructure_file_holder link_holder\">String API.pdf</span></span></a></p>\n<p>- If a line is too long to fit on one line you can move to the next line as long as it is clear what you are doing.&nbsp;&nbsp;</p>\n<p>&nbsp;</p>\n<p><span style=\"color: #e03e2d;\">Submit your refactored SequenceCalculator (<span style=\"text-decoration: underline;\"><strong>NOT the original!</strong></span>) to this Canvas assignment and submit your Task 2 paper up at the front.&nbsp; <br></span></p>",
      "materials": [],
      "dueDate": "2024-10-25T10:02:00.000-07:00",
      "points": 100,
      "originLMS": "canvas"
    },
    {
      "id": "180522",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180522",
      "title": "Chapter 4 Programming Assignment - MosaicCreator",
      "description": "<p>0) Here is the original files if you missed it: <span style=\"background-color: #f8cac6;\"><a class=\"instructure_file_link inline_disabled\" title=\"Mosaic Files.zip\" href=\"https://mvla.instructure.com/courses/8995/files/2992687?verifier=htIGwIAGW42nkGInGarRL0Oy3eWkgQ5DnvV2WW7a&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2992687\" data-api-returntype=\"File\">mosaicfiles.zip</a></span></p>\n<p>1) Read the assignment:<span style=\"background-color: #f8cac6;\"><a id=\"2315770\" class=\"instructure_file_link instructure_scribd_file inline_disabled\" href=\"https://mvla.instructure.com/courses/8995/files/2842736?verifier=nkjcXdOIZL17PBxk6GtiKPIQGGRVj7ZkB6Twotgj&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"true\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842736\" data-api-returntype=\"File\"> MosaicCreatorDescription.pdf</a> &nbsp;</span></p>\n<p>&nbsp;</p>\n<p>2) Watch video intro: <a href=\"https://youtu.be/Fs0K1iMAfFs\" target=\"_blank\">https://youtu.be/Fs0K1iMAfFs</a></p>\n<p>For reference:<span style=\"background-color: #f8cac6;\"> <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Mosaic API-1.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2992688?verifier=86SxHZStEQrOyHvoHBmWv4vUbRfMINN3HdqnNocn&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2992688\" data-api-returntype=\"File\">Mosaic API.pdf</a></span></p>\n<p>&nbsp;</p>\n<p>3) Write the MosaicCreator.java file from scratch.&nbsp; <span><span class=\"instructure_file_holder link_holder\"><a class=\"file_preview_link\" title=\"Preview the document\" href=\"https://mvla.instructure.com/courses/8995/files/2842726/download?verifier=6pJLuH4pgxf4eqMHvZVPyegZGT7UCGTs4DLHd6ie&amp;wrap=1\" aria-hidden=\"true\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842726\" data-api-returntype=\"File\"></a></span></span></p>\n<p>Hints/Other requirements:<br><span style=\"color: #000000; background-color: #f8cac6;\">-- You should use most of the subroutines in the Mosaic class inside of your MosaicCreator class....<strong>LOOK at the API</strong></span><br><span style=\"color: #000000; background-color: #f8cac6;\">-- You must use at least **<strong>2 meaningful subroutines</strong>** in your MosaicCreator</span><br><span style=\"color: #000000; background-color: #f8cac6;\">-- To compare primitive types (int, char, etc), we use ==, but for <strong>objects</strong> (String, java.awt.Color, etc) we use <strong>.equals()</strong></span></p>\n<div class=\"page\" title=\"Page 1\">\n<div class=\"layoutArea\">\n<div class=\"column\">\n<p><span style=\"color: #000000; background-color: #f8cac6;\">-- <strong>Test your code </strong>to make sure it can handle too many inputs, too few inputs, basically that it matches all of the specifications outlined above. </span></p>\n<p>&nbsp;</p>\n</div>\n</div>\n</div>\n<p>Here’s a link to an example of how the program should run:<br><a href=\"http://youtu.be/fknJ1xvrWgc\" target=\"_blank\">http://youtu.be/fknJ1xvrWgc</a>&nbsp;</p>\n<p>&nbsp;</p>\n<p>- There is no tester this time, you submit it and I will only grade it <span style=\"text-decoration: underline;\"><strong>once</strong></span> (on the due date).&nbsp; So again (see above)<span style=\"color: #e03e2d;\"><strong> test your code yourself </strong></span>to see if it fulfills all the requirements.&nbsp;</p>\n<p><strong>- Your submissions will be run through a plagiarism detector</strong>, so please do not look at anyone else's code while doing this assignment. You can ask others for help, but be careful to only get small hints. You need to try a bunch of things until you get it right on your own. That's the only way you'll get better!</p>\n<p>&nbsp;</p>",
      "materials": [],
      "dueDate": "2024-10-25T23:00:00.000-07:00",
      "points": 35,
      "originLMS": "canvas"
    },
    {
      "id": "180638",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180638",
      "title": "Day 30 Extended Classwork: Classes and Objects",
      "description": "<p><strong><span style=\"color: #e03e2d;\">- Your points from this Extended classwork are from </span></strong></p>\n<p><strong><span style=\"color: #e03e2d;\">(a) <span style=\"text-decoration: underline;\">me verifying you have watched the videos on Canvas Studio</span> and </span></strong></p>\n<p><strong><span style=\"color: #e03e2d;\">(b) <span style=\"text-decoration: underline;\">submitting a picture of the last page of the completed notes for this section</span> (you picked up the paper in class).&nbsp; </span></strong></p>\n<p><strong><span style=\"color: #e03e2d;\">Here is the electronic copy: &nbsp;<a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"5.1 Classes Objects in Memory(1).pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842729?verifier=HI2qNWqsx1gIpFnWih2KYt1FP5QSxjFYHgXZDqnR&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842729\" data-api-returntype=\"File\"><span style=\"background-color: #bfedd2;\">5.1 Classes Objects in Memory.pdf</span></a><br></span></strong></p>\n<p><strong><span style=\"color: #236fa1;\">- Some folks say the Canvas studio videos don't work.&nbsp; Try logging out/in or using a different browser, but if it keeps failing you can watch the Youtube version of the video that didn't work for you.</span></strong></p>\n<p>1. 5 1 Intro &nbsp; Why Classes and Student example https://youtu.be/ZB0DNHVQOAE&nbsp;</p>\n<p>2. 5 1 Classes and Objects https://youtu.be/C69hNVrEbuk</p>\n<p>3. 5.1 Fish Code Example https://youtu.be/awvB5l8RVr4</p>\n<p>4. 5.1 Drawing Pictures in Memory https://youtu.be/JiRceQPxRIw</p>\n<p>1) Intro: Why do we need classes (object-oriented advantages):</p>\n<p><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_embedding_id%3D286-t5otERs5tg2Ea8ak1WMOYA\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" loading=\"lazy\"></iframe></p>\n<p>&nbsp;</p>\n<p><span>2) 5.1 notes Classes and Objects&nbsp; &nbsp;(<span style=\"background-color: #fbeeb8;\"><a class=\"instructure_file_link inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1L54l9aSdPIhbpCTBqZEksn8K0d48yZJwYTgjQtgTrBA/edit#slide=id.p1\" target=\"_blank\">Slides</a></span>)</span></p>\n<p>I<span>nstance vs. static variables and methods, pointers</span>:&nbsp;</p>\n<p><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_embedding_id%3D287-bC7pIFpFvbHEpa6nrORs1w\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" loading=\"lazy\"></iframe></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>3) Fish example: (Code if you want to follow along in debugger -&nbsp; &nbsp; <span style=\"background-color: #f8cac6;\">&nbsp;<a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Fish.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842504?verifier=1yIF1YbFW9enz9FsGCMeoG8dTl0OpIEwCxzYup8k&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842504\" data-api-returntype=\"File\">Fish.java</a></span>&nbsp; &nbsp; &nbsp; &nbsp;<a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Pond.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842508?verifier=qfCHUGWSzaqTLvjs6mrqxFLqiqKNuwx8joNLzEmY&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842508\" data-api-returntype=\"File\"><span style=\"background-color: #f8cac6;\">Pond.java</span></a>&nbsp; )</p>\n<p><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_embedding_id%3D288-RzTBOf4CxS4huxcizU3FTg\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" loading=\"lazy\"></iframe></p>\n<p>&nbsp;</p>\n<p><span>4) Drawing objects in memory <br></span></p>\n<p><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_embedding_id%3D290-A7-XQGO2bERsi_1TFZskrQ\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" loading=\"lazy\"></iframe></p>",
      "materials": [],
      "dueDate": "2024-10-28T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180779",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180779",
      "title": "HW #15:  Array-2 (*updated: finish the whole set, or as many as you can*)",
      "description": "<p><span><em><strong>Update #2: </strong></em>Try to finish as many as you can by the end of next week. &nbsp; Finish all remaining problems, or as many as you can &nbsp;in Array-2...if you can't finish them all, just do as many as you reasonably can. </span></p>\n<p><span><img src=\"https://mvla.instructure.com/courses/8995/files/2842727/preview?verifier=CX17JdwhCTo7Tg1w3WgeGFYSWDFyvcy1ZqZkGMJy\" alt=\"Untitled 9-1.png\" width=\"440\" height=\"245\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842727\" data-api-returntype=\"File\" loading=\"lazy\"></span></p>\n<p>&nbsp;</p>\n<p><em><strong>Update #1: </strong></em>Finish the first half (only the first half!) of Array-2, new ones underlined in green. (Or as many as you can, I won't check this week).&nbsp; countEvens though has12.&nbsp;</p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842477/preview?verifier=smWRm4jWUmKdYgg5LFZJF1zVrGgOJ9VMjE1k4X7q\" alt=\"Untitled 7-1.png\" width=\"443\" height=\"253\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842477\" data-api-returntype=\"File\" loading=\"lazy\"></p>\n<p>&nbsp;</p>\n<p><em><strong>Original:</strong></em></p>\n<p><span><img src=\"https://mvla.instructure.com/courses/8995/files/2842400/preview?verifier=N7i6bRWECE0d5cFxIQ5ux0t1nXKVU0Y6VeZB6DY0\" alt=\"Untitled 5.png\" width=\"459\" height=\"297\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842400\" data-api-returntype=\"File\" loading=\"lazy\"></span></p>\n<p><span>Do as many as you can do in a reasonable amount of time...don't spend 10 hours on it and don't copy off of the Internet. <br></span></p>\n<p>&nbsp;</p>\n<p><span>If you get stuck, you can copy/paste into Eclipse (Here's an example file: <a class=\"instructure_file_link instructure_scribd_file\" title=\"FizzBuzzTester.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842731/download?verifier=iDichFQbGR5nz8RX7hnM03J9Pa4cCIJpxVXF8v9c&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842731\" data-api-returntype=\"File\">FizzBuzzTester.java</a>)&nbsp; and run it in the debugger (see example video): <a href=\"https://youtu.be/MDUk8HQslQA\" target=\"_blank\">https://youtu.be/MDUk8HQslQA</a> </span></p>\n<p>&nbsp;</p>",
      "materials": [],
      "dueDate": "2024-10-28T23:59:59.000-07:00",
      "points": 16,
      "originLMS": "canvas"
    },
    {
      "id": "180783",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180783",
      "title": "HW #17: Car and CarInventory drawings",
      "description": "<p>Based on the <a title=\"Day 28 Extended Classwork: Introduction to Classes and Objects\" href=\"https://mvla.instructure.com/courses/8995/assignments/180638\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/assignments/180638\" data-api-returntype=\"Assignment\">Extended Classwork</a> examples, and the <a id=\"108855\" class=\"instructure_file_link instructure_scribd_file\" href=\"https://mvla.instructure.com/courses/8995/files/2842796/download?verifier=URlRRbZVC94XZ23lFAJIAMGzSpjr4jPyFWgu2ea6&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"true\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842796\" data-api-returntype=\"File\">textbook</a> (reference pages 191 and 195 if you want),</p>\n<p>a) Using the paper you picked up in class (or you can download <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"5.1 homework-1.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/3002247?verifier=35S9y7s8XnzH5jAk2LhL5OQWGGq15rjBa4H2DPUi&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/3002247\" data-api-returntype=\"File\">5.1 homework-1.pdf</a>), complete the drawings.&nbsp;</p>\n<p>b) Submit a picture of your HW</p>\n<p>&nbsp;</p>\n<p>Again, here are some example sketches from the original classwork (see the last 2 pages): <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"5.1 CW Student drawingsv2 solutions(2).pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842744?verifier=Ee8rKGHRrtSpK9hmasUY7UODqn4LWuElAKGeAOuB&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842744\" data-api-returntype=\"File\">5.1 CW Student drawingsv2 solutions.pdf</a></p>\n<p>&nbsp;</p>",
      "materials": [],
      "dueDate": "2024-10-30T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180653",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180653",
      "title": "Day 33: Obj-Oriented Practice -- Circle + OlympicCircles / Die + YahtzeeDice.  *Submit High Score here*",
      "description": "<p><span>Come to the GenAI Club meeting at lunch on Monday (11/4) to hear from guest speaker Andy Narayanan. Mr. Narayanan, a product executive with 20+ years in big tech and AI startups, has co-developed generative AI products with millions of users. Join us in room 708 to hear a talk from him and a Q&amp;A afterwards.</span></p>\n<p>&nbsp;</p>\n<p><span>0) Reflect on Student, Runner.&nbsp; Have s1 = s2 = s3;</span></p>\n<p><span>Reflect on Circle, Olympic Circles.&nbsp; Add toString() to Circle.&nbsp;&nbsp;</span></p>\n<p><span><img src=\"https://mvla.instructure.com/courses/8995/files/3021291/preview?verifier=MZSqL4jCvtllwcBl8pNsv6fQ8U3QOiPY3F3HtXsN\" alt=\"image.png\" width=\"565\" height=\"216\" loading=\"lazy\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/3021291\" data-api-returntype=\"File\"></span></p>\n<p>&nbsp;</p>\n<p><span>1) Create a Die class to model a single die.&nbsp; Think about attributes (variables) a Die 'has' and behaviors or actions (methods) a Die can 'do.' </span></p>\n<p>&nbsp;</p>\n<p>2) Yahtzee</p>\n<p>a) Watch the 4 minute rule explanation and game walkthrough: <a class=\"external youtubed\" href=\"https://www.youtube.com/watch?v=XeJdf0E3YTE\" target=\"_blank\"><span>https://www.youtube.com/watch?v=XeJdf0E3YTE</span><span class=\"external_link_icon\" style=\"display: inline-block; text-indent: initial;\" role=\"presentation\"> </span></a></p>\n<p>b) *Seriously* read the rules for the game \"Yahtzee\": <a class=\"external\" href=\"https://cardgames.io/yahtzee/#rules\" target=\"_blank\"><span>https://cardgames.io/yahtzee/#rules</span><span class=\"external_link_icon\" style=\"display: inline-block; text-indent: initial;\" role=\"presentation\"> </span></a></p>\n<p>c) <span>Play Yahtzee all the way through at least 2 times: <span style=\"background-color: #bfedd2;\"><a class=\"external\" style=\"background-color: #bfedd2;\" href=\"https://cardgames.io/yahtzee/\" target=\"_blank\">https://cardgames.io/yahtzee/<span class=\"external_link_icon\" style=\"display: inline-block; text-indent: initial;\" role=\"presentation\"> </span></a>.&nbsp;</span> <span style=\"color: #e03e2d;\"><strong>Submit a screenshot of your best score to today's Canvas assignment</strong></span><br></span></p>\n<p><span>Remember,&nbsp; you get <strong>3 rolls per turn </strong>to get a certain score type&nbsp;and <strong>you can \"hold\" certain dice that you want to keep </strong>that might help you get that certain score.&nbsp; <strong>To <span style=\"text-decoration: underline;\">\"hold\" dice for the next roll on the online version, just click on the die.</span>&nbsp;</strong></span></p>\n<p><span>Try to beat Bill!&nbsp; </span></p>\n<p>&nbsp;</p>\n<p><span>HW:&nbsp;</span></p>\n<p><span>- If you haven't yet, play Yahtzee all the way through at least 2 times: <a class=\"external\" href=\"https://cardgames.io/yahtzee/\" target=\"_blank\">https://cardgames.io/yahtzee/</a>, submit screenshot of your best score to today's Canvas assignment</span></p>\n<p><span>- Finish any late HW or projects (Mosaic, etc.) you need to finish.&nbsp;</span></p>",
      "materials": [],
      "dueDate": "2024-11-01T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180786",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180786",
      "title": "HW #18: YahtzeeDice (Done as CW)",
      "description": "<p><span class=\"NjE5zd\"><span style=\"color: #000000;\"><strong>Download</strong>: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"DieTester.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842719?verifier=4BwpOWJizAeteHDqOZDoBIAeCWvJ71PYt5Ppmsrz&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842719\" data-api-returntype=\"File\">DieTester.java</a>&nbsp; &nbsp;(to test your YahtzeeDice class if you don't want to write your own)</span></span></p>\n<p>&nbsp;</p>\n<p><span class=\"NjE5zd\">Write a YahtzeeDice class (to familiarize yourself, you can play the game at </span><a href=\"https://cardgames.io/yahtzee/\" target=\"_blank\">https://cardgames.io/yahtzee/</a><span class=\"NjE5zd\">).</span></p>\n<p><span class=\"NjE5zd\">The class should be similar to the PairOfDice class except that it will contain 5 dice instead of 2. </span></p>\n<p><span class=\"NjE5zd\">You might want to think of it as a QuintetOfDice class. </span></p>\n<p><span class=\"NjE5zd\">It should only have <span style=\"color: #169179;\">one instance variable:</span> dice, </span><span class=\"NjE5zd\">of type Die[]. </span></p>\n<p><span class=\"NjE5zd\">The class should have the following constructors and subroutines: </span></p>\n<p><span style=\"color: #169179;\"><strong><span class=\"NjE5zd\">// Constructors </span></strong></span></p>\n<p><span class=\"NjE5zd\">public YahtzeeDice() <span style=\"color: #169179;\">//constructs a YahtzeeDice object containing 5 default Die objects in the dice array. </span></span></p>\n<p><span class=\"NjE5zd\">public YahtzeeDice(int numSides) <span style=\"color: #169179;\">//constructs a Yahtzee object containing 5 Die objects with the given number of sides </span></span></p>\n<p>&nbsp;</p>\n<p><span style=\"color: #169179;\"><strong><span class=\"NjE5zd\">// Subroutines </span></strong></span></p>\n<p><span class=\"NjE5zd\">public int roll() <span style=\"color: #169179;\">//rolls all 5 dice and returns the total of the dice </span></span></p>\n<p><span class=\"NjE5zd\">public Die[] getDice() <span style=\"color: #169179;\">//returns the dice array </span></span></p>\n<p><span class=\"NjE5zd\">public int[] getDiceValues() <span style=\"color: #169179;\">//returns an int[] containing the values of the 5 dice </span></span></p>\n<p><span class=\"NjE5zd\">public String toString() <span style=\"color: #169179;\">//returns a String representation of the object </span></span></p>\n<p>&nbsp;</p>\n<p><span class=\"NjE5zd\">The class should not make any explicit reference to a specific entry in the dice array. (You shouldn't have dice[0], dice[1], dice[2], dice[3], or dice[4] anywhere in your code.) Every subroutine should use loops to access the entries in the array (such as with dice[i]). Use the Die class we created and make sure it is in the same folder as YahtzeeDice.</span></p>",
      "materials": [],
      "dueDate": "2024-11-04T23:59:59.000-08:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180657",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180657",
      "title": "Day 34 Extended Classwork: Inheritance",
      "description": "<p><span>5.5 Part I (Inheritance) (</span><span style=\"background-color: #fbeeb8;\"><a style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1JZhJkIBGDJGUYBvupJOZvEbADwSAUzy7ENOZWyIhllU/edit?usp=sharing\"><span>Slides</span></a></span>)</p>\n<p>Watch the video, answer the quiz questions.&nbsp; If you want to see the textbook's explanation: it's <a class=\"instructure_file_link inline_disabled\" href=\"http://math.hws.edu/eck/cs124/javanotes7/c5/s5.html\" target=\"_blank\">here</a></p>\n<p>If Canvas studio temporarily isn't working, here is the original Youtube URL: https://youtu.be/k8lxumZ9uHE</p>\n<p><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_embedding_id%3D307-nwERTblAX9wGnFbhZ2Zudg\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" loading=\"lazy\"></iframe></p>",
      "materials": [],
      "dueDate": "2024-11-06T23:59:59.000-08:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180661",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180661",
      "title": "Day 35 Ext Classwork: Abstract Classes, Methods",
      "description": "<p><span>5.5 Part II (Abstract Classes, Abstract Methods, and YahtzeeGame application) (</span><span style=\"background-color: #fbeeb8;\"><a style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1BtoQgC0zqWPB_WkX9qYN8xrnzhV3Kizjeu7DUYzDOeA/edit?usp=sharing\" target=\"_blank\"><span>Slides</span></a></span>)</p>\n<p>Watch the video, answer the quiz questions.&nbsp; If you want to see the textbook's explanation: it's <a class=\"instructure_file_link inline_disabled\" href=\"http://math.hws.edu/eck/cs124/javanotes7/c5/s5.html\" target=\"_blank\">here</a></p>\n<p>If Canvas studio temporarily isn't working, here is the original Youtube URL: https://youtu.be/3vm9kUdIgWw</p>\n<p><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_embedding_id%3D313-hDkRq7TF2pxqE1Z1AG_uyg\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" loading=\"lazy\"></iframe></p>",
      "materials": [],
      "dueDate": "2024-11-08T23:59:59.000-08:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180665",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180665",
      "title": "Day 36 Extended Classwork (Part 1): this and super",
      "description": "<p><span>5.6 this and super (</span><span style=\"background-color: #fbeeb8;\"><a style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1QB9QBcTxv2sUUw3vx1DBE4QKPP0Se1m-fz__Us1_3LM/edit?usp=sharing\" target=\"_blank\"><span>Slides</span></a></span>)&nbsp; (<a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"5.6 notesv2(3).pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842521?verifier=lldqMv1f1OstZUPJKSEJcUCoa7ntVTY12bt5wLas&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842521\" data-api-returntype=\"File\"><span style=\"background-color: #eccafa;\">.pdf Notes</span></a>)</p>\n<p>1) Download and unzip (Windows right-click \"Extract all\"): <a class=\"instructure_file_link inline_disabled\" title=\"Vehicle Example of this and super(2).zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842458?verifier=9I9jiOzBovAZyOeC4CxixJ6sgTpmHHdbxQOtCtnn&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842458\" data-api-returntype=\"File\">Vehicle Example of this and super.zip</a></p>\n<p>2) Watch the video, answer the quiz questions.&nbsp; <strong><span style=\"color: #e03e2d;\">Submit the updated Car.java after finishing.</span></strong> &nbsp; If you want to see the textbook's explanation: it's <a class=\"instructure_file_link inline_disabled\" href=\"http://math.hws.edu/eck/cs124/javanotes7/c5/s6.html\" target=\"_blank\">here</a></p>\n<p>If Canvas studio temporarily isn't working, here is the original Youtube URL: https://youtu.be/E-5vauKmpuE</p>\n<p><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_embedding_id%3D316-t8HF7DPsX1w2ViaOHovHUg\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" loading=\"lazy\"></iframe></p>\n<p>&nbsp;</p>",
      "materials": [],
      "dueDate": "2024-11-13T23:59:59.000-08:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180666",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180666",
      "title": "Day 36 Extended Classwork (Part 2): Interfaces",
      "description": "<p><span>5.7 Interfaces (</span><span style=\"background-color: #fbeeb8;\"><a style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1QhJFZHjQAiGF_524ZTl4O4nK15K60MZ0EzBLBqmAWP0/edit?usp=sharing\" target=\"_blank\"><span>Slides</span></a></span>)&nbsp; (<a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"5.7 notes(1).pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842720?verifier=dnD2XYxnnUzbSyDPaYp3Zeu0F5vbdIjSG1tK3jFE&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842720\" data-api-returntype=\"File\"><span style=\"background-color: #eccafa;\">5.7 notes.pdf</span></a>)</p>\n<p>1) Download and unzip (Windows right-click \"Extract all\"): <a class=\"instructure_file_link inline_disabled\" title=\"Drawable Interface example(1).zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842532?verifier=XEao1jBRzLE3SK7QiojJulWfR0iANHEXMVyIbVgc&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842532\" data-api-returntype=\"File\">Drawable Interface example.zip</a></p>\n<p>Watch the video, answer the quiz questions.&nbsp; <strong><span style=\"color: #e03e2d;\">Submit the interface Drawable.java after finishing.&nbsp;</span></strong> If you want to see the textbook's explanation: it's <a class=\"instructure_file_link inline_disabled\" href=\"http://math.hws.edu/eck/cs124/javanotes7/c5/s7.html\" target=\"_blank\">here</a></p>\n<p>If Canvas studio temporarily isn't working, here is the original Youtube URL: https://youtu.be/jLW82LAV3rg</p>\n<p><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_embedding_id%3D317-YqBF9QdGYMRf7wMH9qLFdA\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" loading=\"lazy\"></iframe></p>\n<p>&nbsp;</p>",
      "materials": [],
      "dueDate": "2024-11-13T23:59:59.000-08:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180673",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180673",
      "title": "Day 38 Card Game - OO Practice *Submit Deck.java*",
      "description": "<div dir=\"ltr\">\n<div>\n<div><strong></strong><span><span class=\"NjE5zd\">0) Discuss <a title=\"Chapter 5 Programming Task: CreditAccount and RewardsCreditAccount\" href=\"https://mvla.instructure.com/courses/8995/assignments/180534\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/assignments/180534\" data-api-returntype=\"Assignment\">Chapter 5 Webcat: CreditAccount and RewardsCreditAccount</a>&nbsp; <a class=\"inline_disabled\" href=\"https://docs.google.com/presentation/d/1Ueg3jVEYnkbjrueOSYRzDmTJyhRNuHxJxZ6z5RYRr9Q/edit#slide=id.p\" target=\"_blank\"><span style=\"background-color: #fbeeb8;\">Slides</span></a> and Academic Integrity Policy: <a class=\"inline_disabled\" href=\"https://docs.google.com/presentation/d/1KsZHFcKnyVHu2LvQNSWdfEpzarjB9fpNXiY9St0J54A/edit#slide=id.g100eb49f35f_0_23\" target=\"_blank\"><span style=\"background-color: #fbeeb8;\">Slides</span></a></span></span></div>\n<div><span><span class=\"NjE5zd\">Due next Friday at 11 pm.</span></span></div>\n</div>\n</div>\n<p>&nbsp;</p>\n<p><span><span class=\"NjE5zd\">1) Introduce Card game (2nd example of Object-oriented design): </span><a href=\"http://www.crazyeights-cardgame.com/\" target=\"_blank\">http://www.crazyeights-cardgame.com/</a><span class=\"NjE5zd\"> (<span style=\"background-color: #fbeeb8;\"><a class=\"instructure_file_link inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1Dfd79V3BrjN0JDS5w4gXPR58S_YRpGGMYyqo9B7PuRE/edit?usp=sharing\" target=\"_blank\">Slides Part 1</a></span>) <br></span></span></p>\n<p><span><span class=\"NjE5zd\">a) Brainstorm classes in a card game <br></span></span></p>\n<p><span><span class=\"NjE5zd\">b) Download, unzip: <a class=\"instructure_file_link inline_disabled\" title=\"Card game files(13).zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842507?verifier=bfHCvmzV25MY2cVvtysI9znkB8zHNrnrhaFCNDXC&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842507\" data-api-returntype=\"File\">Card game files.zip</a>&nbsp; </span></span></p>\n<p><span><span class=\"NjE5zd\">c) Work to implement some methods in the card game, <strong><span style=\"text-decoration: underline;\"><span style=\"color: #e03e2d; text-decoration: underline;\">submit the unfinished (shuffle() missing) Deck.java to this assignment for 2 pts.&nbsp; </span></span></strong><span style=\"color: #000000;\">&nbsp; Folks making a Card game for their Sem 1 project can feel free to use these classes as-is, or modify them.&nbsp; Just don't forget to add a working shuffle()!!</span><br></span></span></p>\n<p><span><span class=\"NjE5zd\">d) Discuss encapsulation, separation of concerns in Card game: (<span style=\"background-color: #fbeeb8;\"><a class=\"instructure_file_link inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1sLz0UaYhhOc8xRnAg8snQAF8LXo8XozbWN6Peq5V49o/edit?usp=sharing\" target=\"_blank\">Slides 2</a></span>)</span></span></p>\n<p>&nbsp;</p>\n<p>(Last 35 min)</p>\n<p><span>2) Work time on YahtzeeGame.&nbsp; Example setup of YahtzeeGame, Runner, and YahtzeeDice <span style=\"background-color: #fbeeb8;\"><a class=\"inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1ZDr8OXPuIc_PoxzXHPh62gosFnENPJsMk7xXZREJsgY/edit#slide=id.g100504155cf_0_373\" target=\"_blank\">Slides</a></span>. &nbsp; Remember, there is no design grade, you will not be penalized if you don't use inheritance.&nbsp; </span></p>\n<p><span><span class=\"NjE5zd\"><strong><span style=\"color: #e03e2d;\">Goal 3: </span></strong><span style=\"color: #e03e2d;\"><em><span style=\"color: #000000;\">Implement the scoring system.&nbsp;&nbsp; Can play the game at <a href=\"https://cardgames.io/yahtzee/\" target=\"_blank\">https://cardgames.io/yahtzee/</a> to refresh your memory on scoring. </span></em></span></span></span><span><span class=\"NjE5zd\"><span style=\"color: #e03e2d;\"><em><span style=\"color: #000000;\">Example of scoring system and running completed game (Note that 'potential' scores are optional but nice to have): <a style=\"font-family: Roboto, Helvetica, Arial, sans-serif; font-size: 13px; font-style: normal; text-align: start; text-indent: 0px; white-space: normal; background-color: #ffffff;\" href=\"http://www.youtube.com/watch?v=s1voq_8qtLo\" target=\"_blank\">http://www.youtube.com/watch?v=s1voq_8qtLo</a>&nbsp;</span></em></span></span></span></p>\n<p><span><span class=\"NjE5zd\"><span style=\"background-color: #eccafa;\"><span style=\"background-color: #ffffff;\"><span style=\"color: #e03e2d;\"><span style=\"color: #000000;\"><strong><span style=\"color: #169179;\">Here is some starter code that could help save time when working on Scoring logic **there is no penalty for using the code below**</span></strong><br></span></span></span></span></span></span></p>\n<p><span><span class=\"NjE5zd\"><span style=\"background-color: #eccafa;\"><span style=\"background-color: #ffffff;\"><span style=\"color: #e03e2d;\"><span style=\"color: #000000;\"><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"ScoreCalculationInSameClassPlusTester.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842520?verifier=H6qgOT3oba8u3s2q14cGocj79rqUugPAEVgubYRo&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842520\" data-api-returntype=\"File\"><span style=\"background-color: #bfedd2;\"> <span class=\"instructure_file_holder link_holder\">ScoreCalculationInSameClassPlusTester.java</span></span></a> (if you want to just include methods in a YahtzeeGame or ScoreCard class). </span></span></span></span></span></span></p>\n<p><span><span class=\"NjE5zd\"><span style=\"background-color: #eccafa;\"><span style=\"background-color: #ffffff;\"><span style=\"color: #e03e2d;\"><span style=\"color: #000000;\"><a class=\"instructure_file_link inline_disabled\" title=\"ScoresAsDifferentClasses.zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842519?verifier=V69T6p7sxN0K3aHWtGTLB66ME7JtzVWswubodovy&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842519\" data-api-returntype=\"File\"><span style=\"background-color: #bfedd2;\">ScoresAsDifferentClasses.zip</span></a> (if you want to use inheritance to group all score objects in a single array)</span></span></span></span></span></span></p>\n<p><span style=\"background-color: #bfedd2;\"><a class=\"instructure_file_link inline_disabled\" style=\"background-color: #bfedd2;\" title=\"SmithYahtzee this super example completed code.zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842526?verifier=j2mwiAxzrvo7cpAZXm4nbc2DORZxrc0jXuMhOziv&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842526\" data-api-returntype=\"File\">SmithYahtzee this super example completed code.zip</a> </span>(can use as ideas for inheritance, as well as formatting your output)</p>\n<p>&nbsp;</p>\n<p><span class=\"NjE5zd\">c) <strong><span style=\"color: #e03e2d;\">Goal 4: </span></strong>Try to get working implementation.&nbsp; Game is <span><span style=\"background-color: #eccafa;\"><span style=\"background-color: #ffffff;\">single-player, text-based, and you don't have to implement \"bonus\" or multiple Yahtzees</span></span></span>.&nbsp;&nbsp; Displaying <span><span style=\"color: #e03e2d;\"><span style=\"color: #000000;\">'potential' scores is <span style=\"text-decoration: underline;\">optional</span> but nice to have.</span><em><span style=\"color: #000000;\"><br></span></em></span></span></span></p>\n<p><span><span class=\"NjE5zd\"><span style=\"background-color: #eccafa;\"><span style=\"background-color: #ffffff;\">Remember, the game is single-player and you don't have to implement \"bonus\" or multiple Yahtzees.&nbsp; You should block the user from choosing the same score and you should end the game after 13 rounds. <br></span></span></span></span></p>\n<p><span style=\"background-color: #eccafa;\"><a class=\"inline_disabled\" style=\"background-color: #eccafa;\" href=\"https://docs.google.com/a/mvla.net/forms/d/e/1FAIpQLSe6ENZ1jImQJ97_x1_76YaUM6OBdf9LINUtPFF5oQHBiMi6OQ/viewform?c=0&amp;w=1\" target=\"_blank\"><span class=\"NjE5zd\">Yahtzee Game rubric link</span></a></span></p>\n<p><span class=\"NjE5zd\" style=\"color: #000000;\">***Now, if your group is totally stuck, and you would like to start working on the scoring logic, I have some code below you can use.&nbsp; It already has the rolling and holding (Goal 1 and Goal 2) done.&nbsp;&nbsp; However, if you use the code below, you can get a maximum of 89% for your grade.&nbsp; </span></p>\n<p><span class=\"NjE5zd\" style=\"color: #000000;\">You can briefly look at my code for ideas without incurring the 11% penalty, but if you start using my code without understanding how it works, or copying large chunks of it (or all of it), that will be the 89% case*** </span></p>\n<p><a class=\"instructure_file_link inline_disabled\" title=\"Yahtzee Code - Goal1 and Goal2 Complete - 11% penalty if used.zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842524?verifier=mI3p2bCUIujyTKJMBol55nX8aCWRw8a90acFXfZ0&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842524\" data-api-returntype=\"File\"><span style=\"background-color: #f8cac6;\">Yahtzee Code - Goal1 and Goal2 Complete - 11% penalty if used.zip</span></a></p>\n<p>&nbsp;</p>\n<p>HW:</p>\n<p>- <a title=\"Chapter 5 Programming Task: CreditAccount and RewardsCreditAccount\" href=\"https://mvla.instructure.com/courses/8995/assignments/180534\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/assignments/180534\" data-api-returntype=\"Assignment\">Chapter 5 Webcat: CreditAccount and RewardsCreditAccount</a>&nbsp;<span class=\"NjE5zd\"><strong><span style=\"color: #169179;\"> --&gt; Due next Friday at 11 pm.&nbsp; 35 test pts. </span></strong></span></p>\n<p>- <a title=\"HW #22: YahtzeeGame\" href=\"https://mvla.instructure.com/courses/8995/assignments/180788\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/assignments/180788\" data-api-returntype=\"Assignment\">HW #19: YahtzeeGame</a> --&gt; Due next Monday at the START of class.&nbsp; Please .zip the files or folder containing the files before submission.&nbsp; Peer reviewed.&nbsp; 20 HW pts.</p>",
      "materials": [],
      "dueDate": "2024-11-15T23:59:59.000-08:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180788",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180788",
      "title": "HW #19: YahtzeeGame",
      "description": "<p><strong><span class=\"NjE5zd\">-- Should be a working implementation of Yahtzee.&nbsp; Game is <span style=\"background-color: #eccafa;\"><span style=\"background-color: #ffffff;\">single-player, text-based, and you don't have to implement \"bonus\" or multiple Yahtzees</span></span>.&nbsp;&nbsp; Displaying <span style=\"color: #e03e2d;\"><span style=\"color: #000000;\">'potential' scores is <span style=\"text-decoration: underline;\">optional</span> but nice to have.&nbsp; No \"Bonus\" or \"Multiple Yahtzee\" features necessary.</span><em></em></span></span></strong></p>\n<p><strong><span class=\"NjE5zd\"><span style=\"color: #e03e2d;\"><span style=\"color: #000000;\">Here is the rubric that will be used to grade your Yahtzee game: <span style=\"background-color: #eccafa;\"><a class=\"inline_disabled external\" style=\"background-color: #eccafa;\" href=\"https://docs.google.com/a/mvla.net/forms/d/e/1FAIpQLSe6ENZ1jImQJ97_x1_76YaUM6OBdf9LINUtPFF5oQHBiMi6OQ/viewform?c=0&amp;w=1\" target=\"_blank\"><span>Yahtzee Game rubric</span></a></span></span></span></span></strong></p>\n<p><span class=\"NjE5zd\"><span><span style=\"color: #e03e2d;\"><span style=\"color: #000000;\">-- Refer to this example of a working game<span style=\"color: #e03e2d;\"> <strong>(<span style=\"text-decoration: underline;\">note in this video, it only plays 3 rounds for brevity's sake -- your game should go all 13 rounds</span>, potentially forcing users to take '0' scores near the end).</strong></span>&nbsp;</span></span></span></span></p>\n<p><a href=\"https://www.youtube.com/watch?v=s1voq_8qtLo\" target=\"_blank\">https://www.youtube.com/watch?v=s1voq_8qtLo</a></p>\n<p><span class=\"NjE5zd\">-- Zip your Eclipse project folder containing the \"src\" and \"bin\" folders for YahtzeeGame, Die, YahtzeeDice, etc.&nbsp; Call it LastNameFirstNameYahtzeeGame.zip<br></span></p>\n<p><span class=\"NjE5zd\"><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Zipping your files.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842523?verifier=VPp1AMd8p0ACL5Tg45sJE4b5SKQjHFmGd6vHVIaQ&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842523\" data-api-returntype=\"File\"></a></span></p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842755/preview?verifier=t4BQnOnDalTQJ5sO4AZV8QkoI4QxBsX3RC3zsRtu\" alt=\"zipping.png\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842755\" data-api-returntype=\"File\" loading=\"lazy\"></p>",
      "materials": [],
      "dueDate": "2024-11-18T09:40:00.000-08:00",
      "points": 20,
      "originLMS": "canvas"
    },
    {
      "id": "180528",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180528",
      "title": "Chapter 5 Test (Code portion)",
      "description": "",
      "materials": [],
      "dueDate": "2024-11-22T10:07:00.000-08:00",
      "points": 100,
      "originLMS": "canvas"
    },
    {
      "id": "180534",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180534",
      "title": "Chapter 5 Webcat: CreditAccount",
      "description": "<p><span class=\"NjE5zd\"><span style=\"color: #000000;\"><strong>Explanation of Ch 5 Programming Task: (<a class=\"instructure_file_link inline_disabled\" href=\"https://docs.google.com/presentation/d/1Ueg3jVEYnkbjrueOSYRzDmTJyhRNuHxJxZ6z5RYRr9Q/edit?usp=sharing\" target=\"_blank\"><span style=\"background-color: #fbeeb8;\">Slides</span>)</a></strong></span></span></p>\n<p><span class=\"NjE5zd\"><span style=\"color: #000000;\"><strong>Download</strong>: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"CreditAccount.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842271?verifier=mA7FPPQ1gQ4pESRceBQKJRY9mBpWZu7ts1GUhNN0&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842271\" data-api-returntype=\"File\">CreditAccount.java</a>, <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"RewardsCreditAccount.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842754?verifier=2obAV2lnHuJIxQmqwI9kA08g0IfFEJeFEmqh7MXY&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842754\" data-api-returntype=\"File\">RewardsCreditAccount.java</a>, as well as the JUnit test: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"CreditAccountTest.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842272?verifier=ySEear4zW7VMYKSmS1tL2mIzw1A3tAAryeTGVT5k&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842272\" data-api-returntype=\"File\">CreditAccountTest.java</a>&nbsp;</span></span></p>\n<p><span class=\"NjE5zd\"><span style=\"color: #000000;\">Complete the required methods and submit (no .zip necessary, just submit the 2 files CreditAccount.java and RewardsCreditAccount.java).</span></span></p>\n<p><span class=\"NjE5zd\"><span style=\"color: #000000;\">Since you have the JUnit test, <span style=\"text-decoration: underline;\">I will only grade your submissions once</span> (like the Mosaic project).&nbsp; So make sure you are running the tests yourself before submitting.&nbsp;&nbsp; If you forgot how to add JUnit library to your Eclipse build path:</span></span></p>\n<p><span><strong>Right click on project --&gt; \"Build Path\" --&gt; \"Configure Build Path\" --&gt; \"Libraries\" --&gt; Classpath (NOT Modulepath) --&gt; \"Add Library\" --&gt; \"Junit 4 or 5\"&nbsp;</strong></span></p>\n<p><span><strong><img src=\"https://mvla.instructure.com/courses/8995/files/2842317/preview?verifier=dCasSgkhxCb3t7MAH7hAM1pzLXGpI5xDRqtyS0v0\" alt=\"Screen Shot 2021-09-24 at 9.58.08 AM.png\" width=\"701\" height=\"65\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842317\" data-api-returntype=\"File\" loading=\"lazy\"></strong></span></p>\n<p><span class=\"NjE5zd\">Complete the missing methods in CreditAccount and RewardsCreditAccount. </span></p>\n<p><span class=\"NjE5zd\">main() doesn't need to be present, but it would probably be helpful to write test code. </span></p>\n<p><span style=\"background-color: #f8cac6;\"><strong><span class=\"NjE5zd\">Your grade for this assignment will be 75% determined by passing the JUnit tests and 25% determined by the following criteria <em>(so ensure your code meets the following requirements in addition to passing all the tests)</em>: </span></strong></span></p>\n<p><strong><span class=\"NjE5zd\">1) RewardsCreditAccount appropriately inherits from CreditAccount </span></strong></p>\n<p><strong><span class=\"NjE5zd\">2) NO member \"global\" variables (static or non-static) or subroutines have been added to either of the classes </span></strong></p>\n<p><strong><span class=\"NjE5zd\">3) ALL of the instance variables are private </span></strong></p>\n<p><span class=\"NjE5zd\"><strong>4) 'super' and 'this' have been used whenever possible (but you don't have to add this.callMethod() to everything when callMethod() would suffice)</strong><br></span></p>",
      "materials": [],
      "dueDate": "2024-11-22T23:00:00.000-08:00",
      "points": 35,
      "originLMS": "canvas"
    },
    {
      "id": "180792",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180792",
      "title": "HW #20: UML Class Diagram (due Fri, try to finish by Wed)",
      "description": "<p><span class=\"NjE5zd\">Here's a video of me demonstrating how to use draw.io in case you missed it:</span><span class=\"NjE5zd\"><a href=\"https://www.youtube.com/watch?t=506&amp;v=bo8-_0thUD4&amp;feature=youtu.be\" target=\"_blank\">https://www.youtube.com/watch?t=506&amp;v=bo8-_0thUD4&amp;feature=youtu.be</a> <br></span></p>\n<p><span class=\"NjE5zd\">- The Crazy Eights card game example is about the level of detail you should include at this point.&nbsp;</span></p>\n<p><span class=\"NjE5zd\"><img src=\"https://mvla.instructure.com/courses/8995/files/2842385/preview?verifier=MrbcMFxP5Tb2y592tXUGJdFyaqWYFeROU60rz0Ud\" alt=\"Crazy 8's.png\" width=\"444\" height=\"204\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842385\" data-api-returntype=\"File\" loading=\"lazy\"></span></p>\n<p><span class=\"NjE5zd\">1) Decide on a game idea (<span style=\"text-decoration: underline;\">doesn't have to be your final idea</span>, but it would be a great idea to figure it out soon). </span></p>\n<p>&nbsp;</p>\n<p><span class=\"NjE5zd\">2) Using </span><a href=\"https://www.draw.io/\" target=\"_blank\">https://www.draw.io</a><span class=\"NjE5zd\">,</span><span class=\"NjE5zd\"> model the <strong><span style=\"text-decoration: underline;\">classes</span></strong> you think you might need for your game. </span></p>\n<p><span class=\"NjE5zd\">- Inside those classes, include some ideas for <strong><span style=\"text-decoration: underline;\">variables</span></strong> and <strong><span style=\"text-decoration: underline;\">methods</span></strong>. </span></p>\n<p><span class=\"NjE5zd\">- Use + for public and - for private (in general, your instance variables should be encapsulated, and kept private). </span></p>\n<p><span class=\"NjE5zd\">- <strong>Your class list and variables don't have to be exhaustive</strong>. E.g. the YahtzeeGame example doesn't include all 13 Score subclasses, but rather just 3 or 4 so that the reader can get the idea. You don't have to include every method and variable (toString() etc can be left out).</span></p>\n<p>&nbsp;</p>\n<p><span class=\"NjE5zd\">3) <strong>\"has-a\"</strong></span></p>\n<p><span class=\"NjE5zd\">Draw arrows to indicate that a class \"has-a\" instance of object of another class (e.g. a YahtzeeGame has-a Yahtzee Dice or a Deck has-a Card). This is simplified from UML, but for now just use the single arrow to indicate all has-a cases. </span></p>\n<p>&nbsp;</p>\n<p><span class=\"NjE5zd\">4) Inheritance \"extends\" or<strong> \"is-a\"</strong> / Interfaces <strong>\"implements\"</strong></span></p>\n<p><span class=\"NjE5zd\">- If you plan on having inheritance (only use it if it makes sense), try to add the 'extends' arrow (open arrow). </span></p>\n<p><span class=\"NjE5zd\">- If you plan on having abstract classes or methods, use <em>italics</em>. </span></p>\n<p><span class=\"NjE5zd\">- If you plan on having interfaces, use the &lt;&lt; &gt;&gt; notation.</span></p>\n<p>&nbsp;</p>\n<p><span class=\"NjE5zd\">5) Take a screenshot of it and submit it as &lt;GameName&gt;ClassDiagram.jpg This doesn't have to be your final design, but it's rather a good jumping-off point. </span></p>\n<p>&nbsp;</p>\n<p><span class=\"NjE5zd\">Some more examples:</span></p>\n<p><span class=\"NjE5zd\"><img src=\"https://mvla.instructure.com/courses/8995/files/2842402/preview?verifier=tXNBpvMCPXOoCn2LuW2CH3G032LyWATim49Ocoww\" alt=\"YahtzeeGame UML Class Diagram.jpg\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842402\" data-api-returntype=\"File\" loading=\"lazy\"></span></p>",
      "materials": [],
      "dueDate": "2024-12-06T23:59:59.000-08:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "194621",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/194621",
      "title": "Final Project Draft #1 Submission (Buggy/Incomplete OK) Copy",
      "description": "<p>- Place all relevant files into a folder.&nbsp;</p>\n<p>- Zip the folder or files:</p>\n<table style=\"border-collapse: collapse; width: 98.0234%;\" border=\"1\">\n<tbody>\n<tr>\n<td style=\"width: 49.9526%;\">\n<p>Mac: <strong>right-click, \"compress all\"</strong></p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842325/preview?verifier=GDiTlav1pCUkySL7xafFMxazoZz2KgX5gz3oVC0N\" alt=\"Mac Compress.png\" width=\"131\" height=\"87\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842325\" data-api-returntype=\"File\" loading=\"lazy\"></p>\n</td>\n<td style=\"width: 49.9511%;\">\n<p>Windows: <strong>right-click, \"Send to\" --&gt; \"Compressed Zip folder\".</strong></p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842389/preview?verifier=XXAHMB12BlDpWwzE4C16CsRKidT0cr77gzrYmS7r\" alt=\"Windows Compress.png\" width=\"230\" height=\"109\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842389\" data-api-returntype=\"File\" loading=\"lazy\"></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>- Submit the .zip file here.&nbsp;</p>",
      "materials": [],
      "dueDate": "2024-12-09T23:59:00.000-08:00",
      "points": 1,
      "originLMS": "canvas"
    },
    {
      "id": "180764",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180764",
      "title": "Final Project Progress Update #1 Submission (Buggy/Incomplete OK)",
      "description": "<p>- Place all relevant files into a folder.&nbsp;</p>\n<p>- Zip the folder or files:</p>\n<table style=\"border-collapse: collapse; width: 98.0234%;\" border=\"1\">\n<tbody>\n<tr>\n<td style=\"width: 49.9526%;\">\n<p>Mac: <strong>right-click, \"compress all\"</strong></p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842325/preview?verifier=GDiTlav1pCUkySL7xafFMxazoZz2KgX5gz3oVC0N\" alt=\"Mac Compress.png\" width=\"131\" height=\"87\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842325\" data-api-returntype=\"File\" loading=\"lazy\"></p>\n</td>\n<td style=\"width: 49.9511%;\">\n<p>Windows: <strong>right-click, \"Send to\" --&gt; \"Compressed Zip folder\".</strong></p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842389/preview?verifier=XXAHMB12BlDpWwzE4C16CsRKidT0cr77gzrYmS7r\" alt=\"Windows Compress.png\" width=\"230\" height=\"109\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842389\" data-api-returntype=\"File\" loading=\"lazy\"></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>- Submit the .zip file here.&nbsp;</p>",
      "materials": [],
      "dueDate": "2024-12-09T23:59:00.000-08:00",
      "points": 1,
      "originLMS": "canvas"
    },
    {
      "id": "194690",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/194690",
      "title": "Final Project Progress Update #2 Submission ** Playable Demo for Peer Review **",
      "description": "<p>- Place all relevant files into a folder.&nbsp;</p>\n<p>- Zip the folder or files:</p>\n<table style=\"border-collapse: collapse; width: 98.0234%;\" border=\"1\">\n<tbody>\n<tr>\n<td style=\"width: 49.9526%;\">\n<p>Mac: <strong>right-click, \"compress all\"</strong></p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842325/preview?verifier=GDiTlav1pCUkySL7xafFMxazoZz2KgX5gz3oVC0N\" alt=\"Mac Compress.png\" width=\"131\" height=\"87\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842325\" data-api-returntype=\"File\" loading=\"lazy\"></p>\n</td>\n<td style=\"width: 49.9511%;\">\n<p>Windows: <strong>right-click, \"Send to\" --&gt; \"Compressed Zip folder\".</strong></p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842389/preview?verifier=XXAHMB12BlDpWwzE4C16CsRKidT0cr77gzrYmS7r\" alt=\"Windows Compress.png\" width=\"230\" height=\"109\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842389\" data-api-returntype=\"File\" loading=\"lazy\"></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>- Submit the .zip file here.&nbsp;</p>",
      "materials": [],
      "dueDate": "2024-12-13T23:59:59.000-08:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180766",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180766",
      "title": "Final Project Draft #3 Submission (Incomplete OK, complete OK if you are done early)",
      "description": "<p>- Place all relevant files into a folder.&nbsp;</p>\n<p>- Zip the folder or files:</p>\n<table style=\"border-collapse: collapse; width: 98.0234%;\" border=\"1\">\n<tbody>\n<tr>\n<td style=\"width: 49.9526%;\">\n<p>Mac: <strong>right-click, \"compress all\"</strong></p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842325/preview?verifier=GDiTlav1pCUkySL7xafFMxazoZz2KgX5gz3oVC0N\" alt=\"Mac Compress.png\" width=\"131\" height=\"87\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842325\" data-api-returntype=\"File\" loading=\"lazy\"></p>\n</td>\n<td style=\"width: 49.9511%;\">\n<p>Windows: <strong>right-click, \"Send to\" --&gt; \"Compressed Zip folder\".</strong></p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842389/preview?verifier=XXAHMB12BlDpWwzE4C16CsRKidT0cr77gzrYmS7r\" alt=\"Windows Compress.png\" width=\"230\" height=\"109\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842389\" data-api-returntype=\"File\" loading=\"lazy\"></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>- Submit the .zip file here.&nbsp;</p>",
      "materials": [],
      "dueDate": "2024-12-16T23:59:00.000-08:00",
      "points": 1,
      "originLMS": "canvas"
    },
    {
      "id": "180838",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180838",
      "title": "Semester 1 Final Project ",
      "description": "<p>- Place all relevant files such as readme files (if applicable), information sheets (if applicable), and .java files into a folder.&nbsp; Rename as LastNameFirstNameGameName. E.g., \"SmithBrentYahtzeeGame\".</p>\n<p>- Zip the folder.</p>\n<table style=\"border-collapse: collapse; width: 98.0234%;\" border=\"1\">\n<tbody>\n<tr>\n<td style=\"width: 49.9526%;\">\n<p>Mac: right-click, \"compress all\"</p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842325/preview?verifier=GDiTlav1pCUkySL7xafFMxazoZz2KgX5gz3oVC0N\" alt=\"Mac Compress.png\" width=\"131\" height=\"87\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842325\" data-api-returntype=\"File\" loading=\"lazy\"></p>\n</td>\n<td style=\"width: 49.9511%;\">\n<p>Windows: right-click, \"Send to\" --&gt; \"Compressed Zip folder\".</p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842389/preview?verifier=XXAHMB12BlDpWwzE4C16CsRKidT0cr77gzrYmS7r\" alt=\"Windows Compress.png\" width=\"230\" height=\"109\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842389\" data-api-returntype=\"File\" loading=\"lazy\"></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p><span style=\"color: #e03e2d;\">- Do ONE LAST DOUBLE CHECK to ensure your .java files submitted are the most correct, up-to-date ones.&nbsp; <strong><span style=\"text-decoration: underline;\">You do NOT want me to grade an old, buggy version for your final grade!&nbsp; You will not get second chances to submit in January like some of you have been doing on recent tests, \"whoops, I meant to submit this one, not that one\", etc. <br></span></strong></span></p>\n<p>- Submit LastNameFirstNameGameName.zip.</p>\n<p><span style=\"color: #34495e; background-color: #f8cac6;\"><strong>- Triple check that what you submitted (unzip, load into Eclipse if you have to), are the files you want to submit.&nbsp; This is <span style=\"text-decoration: underline;\">your</span> responsibility, not mine!</strong></span></p>\n<p>- Enjoy your break!</p>\n<p>&nbsp;</p>\n<p>Due day and time of the final.</p>\n<table style=\"border-collapse: collapse; width: 98.0144%;\" border=\"1\">\n<tbody>\n<tr>\n<td style=\"width: 24.9724%;\"><span style=\"color: #169179;\"><strong>Wed 12/18</strong></span></td>\n<td style=\"width: 24.9739%;\"><span style=\"color: #169179;\"><strong>Th</strong> <strong>12/19</strong></span></td>\n<td style=\"width: 24.9724%;\"><span style=\"color: #169179;\"><strong>Fri 12/20</strong></span></td>\n</tr>\n<tr>\n<td style=\"width: 24.9724%;\">\n<p><span style=\"color: #169179;\"><strong>Period 1: 8:30 am - 10:30 am<br></strong></span></p>\n<p><span style=\"color: #169179;\"><strong>Period 6: 10:50 am - 12:50 pm<br></strong></span></p>\n<p><span style=\"color: #169179;\"><strong>Period 7: 1:37 pm - 3:37 pm<br></strong></span></p>\n</td>\n<td style=\"width: 24.9739%;\">\n<p><span style=\"color: #169179;\"><strong>Period 2: 8:30 am - 10:30 am<br></strong></span></p>\n<p><span style=\"color: #169179;\"><strong>Period 5: 10:50 am - 12:50 pm</strong></span></p>\n</td>\n<td style=\"width: 24.9724%;\">\n<p><span style=\"color: #169179;\"><strong>Period 3: 8:30 am - 10:30 am<br></strong></span></p>\n<p><span style=\"color: #169179;\"><strong>Period 4: 10:50 am - 12:50 pm</strong></span></p>\n</td>\n</tr>\n</tbody>\n</table>",
      "materials": [],
      "dueDate": "2024-12-19T09:15:00.000-08:00",
      "points": 100,
      "originLMS": "canvas"
    },
    {
      "id": "180763",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180763",
      "title": "Extended Classwork - Video Two: DrawingPanel",
      "description": "<p>1) (Optional) Skim <span style=\"background-color: #eccafa;\"><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" style=\"background-color: #eccafa;\" title=\"6.2 notes.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842554?verifier=ZsRHEGgxCGOlDPsUtLCneMtSD1yFvGBLiJjldfW8&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842554\" data-api-returntype=\"File\">6.2 notes</a></span> or <span class=\"NjE5zd\"> <a class=\"instructure_file_link inline_disabled external\" href=\"https://drive.google.com/file/d/1tvVT9-ytdNuUQJwhU0GQHK7mm5W-Xo8a/view?usp=sharing\" target=\"_blank\"><span>Chapter 6 Summary Notes</span></a></span><br>2) Download and fill in <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"DrawingPanel.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842552?verifier=FMEZ2Tr2SHFBmuIyr2gUyxjeE8bvqeYBXyA8Vuul&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842552\" data-api-returntype=\"File\">DrawingPanel.java</a> (In the video you will also create DrawingPanelMain.java from scratch). <br>3) Watch 6.2 Part 1: <a href=\"https://www.youtube.com/watch?v=rSeye4Df60I\" target=\"_blank\">https://www.youtube.com/watch?v=rSeye4Df60I</a>&nbsp; (~23 min - How to override paintComponent() to draw on a custom JPanel)<br>4) Submit completed DrawingPanel.java here for 2 points.</p>",
      "materials": [],
      "dueDate": "2025-01-08T23:59:59.000-08:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180790",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180790",
      "title": "HW #1: Plain Panel",
      "description": "<p>*** This can be done with your partner.&nbsp; As opposed to previous HW assignments, you can share the same code (as long as both people understand)! ***<br>1) Download <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"PlainPanelMain.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842804?verifier=gOzYq7i1t4AZikG76VV5wiTU5HcHgAmQm2WtG5vn&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842804\" data-api-returntype=\"File\">PlainPanelMain.java</a>&nbsp;</p>\n<p>Notice how it has a JFrame object called 'window.' Windows don't have content, so you have to add a JPanel object. Ours is going to be called PlainPanel.</p>\n<p>2) Create a class called PlainPanel that extends JPanel. Define class PlainPanel so that when added to the JFrame window, it produces a window like in this youtube video:</p>\n<p><a href=\"https://www.youtube.com/watch?v=uyN71xGWh2Y&amp;feature=youtube_gdata_player\" target=\"_blank\">https://www.youtube.com/watch?v=uyN71xGWh2Y&amp;feature=youtube_gdata_player</a></p>\n<p>3) Submit to this assignment once yours looks and runs like the video.</p>",
      "materials": [],
      "dueDate": "2025-01-08T23:59:59.000-08:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180762",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180762",
      "title": "Extended Classwork - Video Three (state)",
      "description": "<p>- First, make sure you completed <a title=\"Extended Classwork - Video Two: DrawingPanel\" href=\"https://mvla.instructure.com/courses/8995/assignments/180763\" data-course-type=\"assignments\" data-published=\"true\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/assignments/180763\" data-api-returntype=\"Assignment\">Extended Classwork - Video Two: DrawingPanel</a>&nbsp;</p>\n<p>&nbsp;</p>\n<p>- Watch video on 6.2 Part 2: Modify DrawingPanel to maintain state - <a href=\"https://www.youtube.com/watch?v=Hn6bT08nRR0\" target=\"_blank\">https://www.youtube.com/watch?v=Hn6bT08nRR0&nbsp;</a> (~27 min.)</p>\n<p>&nbsp;</p>\n<p>- After following along with the changes, submit your <span style=\"text-decoration: underline;\">updated</span> DrawingPanel.java from (<strong>that stores the state of all the rectangles in order to redraw them</strong>).</p>",
      "materials": [],
      "dueDate": "2025-01-10T23:59:00.000-08:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180805",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180805",
      "title": "HW #2: FramedPanel",
      "description": "<p>*** This can be done with your partner ***</p>\n<p>Here is a video of what it should look like: <a href=\"https://www.youtube.com/watch?v=qaRO9MKtKkQ&amp;feature=youtube_gdata_player\" target=\"_blank\">https://www.youtube.com/watch?v=qaRO9MKtKkQ&amp;feature=youtube_gdata_player</a>&nbsp;</p>\n<p>1) Create a class named FramedPanel that extends JPanel. The class should have one private member variable named color (of type Color).</p>\n<p>2) There should be a single constructor that takes a Color parameter and sets the variable color to equal the parameter.</p>\n<p>3) You should override the paintComponent method inherited from JPanel.&nbsp;</p>\n<p>4) The overridden paintComponent method should <span style=\"color: #e03e2d;\">outline the panel in a border that is the same color as the private variable color</span>. The <strong>thickness</strong> of the border should be <strong>whichever is less: 1/20 of the width of the panel or 1/20 of the height of the panel.</strong></p>\n<p>5) The central area of the panel should be white. There should be a thin black line dividing the border from the white center.</p>\n<p>6) Modify your PlainPanel code from the previous assignment (6.1) to place a red FramedPanel in the CENTER position of the PlainPanel. (You should only need to add one line of code to the PlainPanel file, and is demonstrated at the beginning of the video link above)&nbsp;</p>\n<p>7)Use the PlainPanelMain file from the previous assignment (or create your own runner class) to see what the panel looks like.</p>\n<p>8) Submit FramedPanel.java here.</p>",
      "materials": [],
      "dueDate": "2025-01-10T23:59:00.000-08:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "196753",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/196753",
      "title": "Day 3 CW: SmithPanelListener",
      "description": "<p>Submit the completed SmithPanelListener.java class here&nbsp;</p>",
      "materials": [],
      "dueDate": "2025-01-10T23:59:59.000-08:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180759",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180759",
      "title": "Extended Classwork - Video Four (Intro Listeners)",
      "description": "<p>Watch (Start at 13:26)</p>\n<p><a href=\"https://youtu.be/xQ8LaBaLOH8?t=806\" target=\"_blank\">https://youtu.be/xQ8LaBaLOH8?t=806</a></p>\n<p>- <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"6.3 notes(2).pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842771?verifier=mw4WxevP8gKZYFe8ojgdY1KCwVDIJuFWPj8OddU7&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842771\" data-api-returntype=\"File\"><span style=\"background-color: #eccafa;\">6.3 notes</span></a>&nbsp; if necessary.</p>\n<p><strong>Submit DrawingPanelListener.java for 2 pts.</strong></p>\n<p><em>(you will modify DrawingPanel.java from Video Two and Video Three, and then create DrawingPanelListener.java in the video)</em></p>\n<p>&nbsp;</p>\n<p><em><span style=\"color: #169179;\"><strong>The Oval and Drawable will be used in the upcoming HW next class. </strong></span><br></em></p>",
      "materials": [],
      "dueDate": "2025-01-15T23:59:00.000-08:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180758",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180758",
      "title": "Extended Classwork - Video Five: Dragging",
      "description": "<p>Watch: <a href=\"https://www.youtube.com/watch?v=AQpel-r3e84\" target=\"_blank\">https://www.youtube.com/watch?v=AQpel-r3e84</a></p>\n<p>Starter code continues off of <a title=\"Extended Classwork - Video Four (6.3 part 1, introduction to Listeners)\" href=\"https://mvla.instructure.com/courses/8995/assignments/180759\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/assignments/180759\" data-api-returntype=\"Assignment\">last video's 6.3, part 1</a> example (DrawingPanel, DrawingPanelMain, etc.).</p>\n<p>(Video breakdown:)<br>-- Watch the first ~13 minutes of the video lecture:&nbsp;<br>At 12:45, stop the video and see if you can figure out how to do it on your own.&nbsp;</p>\n<p>-- Once you've tried it for 15 minutes, continue the video above to see two possible implementations.<br>Method #1: Adding/deleting Rectangles (~22:00 - 29:45 on the video)<br>Method #2: Saving a reference to a Rectangle and updating it (~30:00 - 38:00 on the video)</p>\n<p>-- Prepare for next class's flipped HW by watching (~38:00 - 43:00 on the video)</p>\n<p>&nbsp;</p>\n<p><strong>Submit DraggingDrawingPanelListener.java for 2 pts.<br></strong></p>",
      "materials": [],
      "dueDate": "2025-01-15T23:59:59.000-08:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180807",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180807",
      "title": "HW #3 FramedPanelMouseListener",
      "description": "<p>Demo: <a href=\"https://www.youtube.com/watch?v=KV1dEeG0qU0\" target=\"_blank\">https://www.youtube.com/watch?v=KV1dEeG0qU0</a></p>\n<p>1) Write a class <strong>Oval</strong> <strong>that implements the Drawable interface </strong>(much like the Rectangle class).&nbsp; If you don't know about the Drawable interface, this was towards the end of the previous Extended Classwork!</p>\n<p>2) Write a class called <strong>FramedPanelMouseListener</strong> (let's make it a separate, non-nested class. Also note that we aren't turning FramedPanel itself into a listener...so note that this is the 3rd method for registering listeners we discussed). Write FramedPanelMouseListener so that it:<br>a) Implements the MouseListener interface.</p>\n<p>b) Has a member variable of type FramedPanel named framedPanel (necessary to save reference to component b/c it's non-nested)</p>\n<p>c) Has a constructor that takes a parameter of type FramedPanel and sets the member variable to be equal to that parameter. The constructor should also have a line with the syntax: \"component.addMouseListener(listener)\" to add itself as a listener.&nbsp;</p>\n<p>d) Implements a mousePressed method that adds a Drawable object to the framedPanel whenever someone clicks on the framedPanel. The Drawable object should be added at the location of the click (using x, y as the upper left is fine)<br>- A normal click should add a red Rectangle with width &amp; height = 30.&nbsp;<br><span style=\"color: #e03e2d;\">- A right (meta) click should add a red Oval with width &amp; height = 30.&nbsp;<strong> <span style=\"color: #169179;\">// Try to implement right-click, but <span style=\"text-decoration: underline;\">some machines won't do this properly</span>.&nbsp; If this is you, just <span style=\"text-decoration: underline;\">ignore</span> this one part.&nbsp; </span></strong></span><br>- A shift-click should add a blue Rectangle with width &amp; height = 30<br>- An alt-click should add a blue Oval with width &amp; height = 30.<br>- A control-click should clear all the Drawable shapes&nbsp;</p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842556/preview?verifier=SkEe6BPpwyGlo1BYCohpo4OQApHiBCaBSj08t5U5\" alt=\"HW #3 AddOn Explanation.png\" width=\"389\" height=\"191\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842556\" data-api-returntype=\"File\" loading=\"lazy\"></p>\n<p>Remember, <strong>mousePressed should merely be setting the STATE for paintComponent() to do all the drawings. </strong>Since mousePressed is in a separate file, <strong>you can also add methods to FramedPanel to be called to accomplish what you need.&nbsp;</strong></p>\n<p>Make sure to call framedPanel.repaint() at the end of this method so that the panel will be repainted with the new object added.</p>\n<p>e) Modify PlainPanel from HW #1 and HW #2 so that it constructs a FramedPanelMouseListener using the FramedPanel object that you already created in PlainPanel during HW #2 (this is shown in the beginning of the video below)</p>\n<p>f) Run PlainPanelMain to see if it runs like the video above.</p>\n<p>g) Submit FramedPanelMouseListener (only)</p>",
      "materials": [],
      "dueDate": "2025-01-15T23:59:59.000-08:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180761",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180761",
      "title": "Extended Classwork - Video Six: SimplePaint Set-up",
      "description": "<p>0) Download the starter code: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"SimplePaint.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842772?verifier=4nJd7AgymsTC83o21xZZgeNpsAV5GiBVRg71ypfi&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842772\" data-api-returntype=\"File\">SimplePaint.java</a></p>\n<p>1) Watch the video on SimplePaint: <a href=\"https://www.youtube.com/watch?v=DHhtM2hF04M\" target=\"_blank\">https://www.youtube.com/watch?v=DHhtM2hF04M</a></p>\n<p>Fill in the creation of the nested class, data structure, and methods to be set up for HW #5.</p>\n<p><span style=\"color: #e03e2d;\">Error fix: Note that in the video it says this.addMouseListener(this) twice, whereas you should actually have <strong>this.addMouse<span style=\"text-decoration: underline;\">Motion</span>Listener(this)</strong> the second time. &nbsp;</span></p>\n<p>&nbsp;</p>\n<p>Submit SimplePaint.java with the video modifications <span style=\"text-decoration: underline;\"><span style=\"color: #e03e2d; text-decoration: underline;\"><strong>(even though it doesn't fully run yet) </strong></span></span>here</p>",
      "materials": [],
      "dueDate": "2025-01-17T23:59:59.000-08:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180815",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180815",
      "title": "HW #4: RectanglePanelListener",
      "description": "<p>Demo: <a href=\"http://www.youtube.com/watch?v=MOfqM-zy2r0&amp;feature=youtube_gdata_player\" target=\"_blank\">http://www.youtube.com/watch?v=MOfqM-zy2r0&amp;feature=youtube_gdata_player</a></p>\n<p>&nbsp;</p>\n<p>0) Download <a class=\"instructure_file_link inline_disabled\" title=\"HW #4 RectanglePanelListener Starter Code.zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842575?verifier=tQiNEiUNup0wbT7dDmaa8nSqqqNvN9ztW9c7XJiJ&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842575\" data-api-returntype=\"File\">HW #4 RectanglePanelListener Starter Code.zip</a>&nbsp;</p>\n<p>1) Read the source code for these attached files and then run RectanglePanelMain to see it work. Note the addition of the containsPoint() method in 2 of the classes. Think of why we would need these methods.&nbsp;</p>\n<p>2) Modify RectanglePanelListener so that it also implements <strong>MouseMotionListener</strong>.</p>\n<p>3) Add a private member variable of type Rectangle that is named <strong>currentlyDraggingRectangle</strong> and initialize it to null. &nbsp;Again, this instance variable helps us animate the dragging by saving a reference to the Rectangle being dragged.&nbsp;</p>\n<p>4) Add two private member variables of type int that are named <strong>offsetX</strong> and <strong>offsetY</strong> (think about what these would be used for!)</p>\n<p>5) Implement the <strong>mousePressed</strong> method. If there is no rectangle that contains the point, return without doing anything.&nbsp;<br>If you find that there is a Rectangle on the spot you pressed and held on -- store a reference to that rectangle to <strong>currentlyDraggedRectangle</strong>. Also, consider how to account for the fact that you could be pressing on anywhere inside the rectangle...how are you going to redraw the Rectangle smoothly as you drag it?</p>\n<p>6) Implement the <strong>mouseDragged</strong> method. If currentlyDraggedRectangle is null, this method should return without doing anything. Otherwise change the state of the Rectangle[] with the new Rectangle. Since currentlyDraggedRectangle is a reference to the Rectangle you are dragging, you can modify its attributes, and then have it redrawn in RectanglePanel's paintComponent() with those new coordinates.</p>\n<p>7) Implement the mouseReleased and mouseExited methods to set the currentlyDraggedRectangle to null.</p>\n<p>&nbsp;</p>\n<p><span style=\"color: #e03e2d;\">Debugging</span>) If no dragging is happening, try adding <strong>System.out.println(\"mouseClicked\"); System.out.println(\"mousePressed\"); System.out.println(\"mouseDragged\"); etc to all of the Handler methods.</strong> Think about which ones are registering, and which ones aren't...and what you can do about it. &nbsp;<span style=\"text-decoration: underline;\">Did you register your listeners <em>(both of them)</em></span>? &nbsp;<span style=\"text-decoration: underline;\">Are you repainting</span>?</p>\n<p>Run RectanglePanelMain using your new version of RectanglePanelListener and make sure it works like the video above.</p>\n<p>&nbsp;</p>\n<p><strong>Submit RectanglePanelListener.java</strong></p>",
      "materials": [],
      "dueDate": "2025-01-17T23:59:59.000-08:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180816",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180816",
      "title": "HW #5: Finish SimplePaint.java",
      "description": "<p>Points to consider: <span style=\"background-color: #eccafa;\"><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"HW #5 SimplePaint Starter .pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842557?verifier=AK0xTyNA7UDBppnDdJdLEjEzcFcQM4NWpJgvpHV0&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842557\" data-api-returntype=\"File\">HW #5 SimplePaint Starter .pdf</a>&nbsp;</span></p>\n<p>Finish SimplePaint (starter code posted under <a title=\"Extended Classwork - Video Six: SimplePaint Set-up\" href=\"https://mvla.instructure.com/courses/8995/assignments/180761\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/assignments/180761\" data-api-returntype=\"Assignment\">Video Six</a>, hopefully you already watched video in Video Six to fill in the rest of the setup), so that it can:</p>\n<ul>\n<li><strong>draw lines smoothly</strong> based on dragging.</li>\n<li><span class=\"M7eMe\">allow you to <strong><span style=\"color: #e03e2d;\">change</span></strong> <strong><span style=\"color: #169179;\">colors</span></strong> and draw with that new color (with the new color highlighted appropriately)</span></li>\n<li><span class=\"M7eMe\">allow you to <strong>resize the panel without losing all the lines</strong></span></li>\n<li><span class=\"M7eMe\">allow you to <strong>clear the drawing by pushing the \"Clear\" button</strong></span></li>\n</ul>\n<p>The <span style=\"color: #2dc26b;\">//***</span> marks the spot where you must fill in lines of code. They are in the methods mouseDragged() and mousePressed()</p>\n<p><strong>Remember, the order of the Line class constructor (x1, x2, y1, y2) from the video differs from the order of the Graphics drawLine (x1, y1, x2, y2) method. &nbsp;</strong></p>\n<p>Submit SimplePaint.java</p>",
      "materials": [],
      "dueDate": "2025-01-22T11:18:00.000-08:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180760",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180760",
      "title": "Extended Classwork - Video Seven: Keyboard/Focus",
      "description": "<p><span class=\"NjE5zd\">- Here is a brief visual summary of the whole chapter: <a class=\"instructure_file_link inline_disabled external\" href=\"https://drive.google.com/file/d/1tvVT9-ytdNuUQJwhU0GQHK7mm5W-Xo8a/view?usp=sharing\" target=\"_blank\"><span>Chapter 6 Summary Notes</span></a></span></p>\n<p>- <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"6.4 notes.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842560?verifier=aug3DguOEDwQ8UUhFRpIZEJZugfGV1crHDE5uZEF&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842560\" data-api-returntype=\"File\"><span style=\"background-color: #eccafa;\">6.4 notes .pdf </span></a></p>\n<p>- You can just use your HW #4 completed code as a starting point, but otherwise here is some starter code: <a class=\"instructure_file_link inline_disabled\" title=\"Video Seven starter code.zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842563?verifier=C8KahhJeamwfG8Pr9CaAee0iC8dGGVNO41BAlE6j&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842563\" data-api-returntype=\"File\">Video Seven starter code.zip</a>&nbsp;</p>\n<p>- Watch the video on 6.4 Keyboard and Focus Listeners : <a href=\"https://www.youtube.com/watch?v=6SzP2UGT92w\" target=\"_blank\">https://www.youtube.com/watch?v=6SzP2UGT92w</a></p>\n<p>Submit completed <strong>RectanglePanelListener.java</strong> (that lets you manipulate the Rectangle objects with key types and presses).</p>\n<p>*** use <strong>javax.swing.Timer</strong> in your code, as noted in the image posted below ***</p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842566/preview?verifier=GndWumVCDNy4q3Z3ZHy5JKguPQ0w3Llcvf2u3cT9\" alt=\"Timers.png\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842566\" data-api-returntype=\"File\" loading=\"lazy\"></p>",
      "materials": [],
      "dueDate": "2025-01-22T23:59:59.000-08:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180818",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180818",
      "title": "HW #6: KeyboardAndFocusDemo",
      "description": "<p><span class=\"NjE5zd\">A few hints (<span style=\"background-color: #fbeeb8;\"><a class=\"inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1qy4J6SNbZXBlXvxBuvUpt6P8rZme5qhl6OUamwK9VMg/edit?usp=sharing\" target=\"_blank\">Slides</a></span>)</span></p>\n<p>&nbsp;</p>\n<p>0) Download: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"KeyboardAndFocusDemo.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842808?verifier=IJItTQCmVvslotclc6SpGvviu9hE96xa8BnETkzJ&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842808\" data-api-returntype=\"File\">KeyboardAndFocusDemo.java</a>&nbsp;</p>\n<p>1) Read the source code for KeyboardAndFocusDemo.java, which extends JPanel. Fill in any missing pieces of code, marked by <span style=\"color: #169179;\">//*** (Comment goes here)</span>.&nbsp;</p>\n<p>2) Create a Listener class that listens for both KeyEvents and FocusEvents. You may implement your Listener as:&nbsp;</p>\n<p>(1) the KeyboardAndFocusDemo class itself or</p>\n<p>(2) a nested class or</p>\n<p>(3) a separate class.</p>\n<p>You make your choice based on what you think would be best for this program, and what you would like to practice.</p>\n<p>3) Implement the required event-handling methods in your Listener class that modify the state of the instance variables in KeyboardAndFocusDemo, so when paintComponent() is called, it gives the user instant feedback that they have modified the color, or direction of the square. In other words,&nbsp;<br>- When the user types a <strong><span style=\"color: #236fa1;\">'b' 'B'</span> <span style=\"color: #169179;\">'g' 'G'</span> <span style=\"color: #ba372a;\">'r' 'R' </span>'k' or 'K'</strong>, the square's color should be updated.<br>- When the user pressed an arrow key up, down, left or right, the square should move 8 pixels in the appropriate direction.<br>- The program should also give visual feedback based on whether the window has focus or not (<strong><span style=\"color: #3598db;\">cyan</span></strong> or <strong><span style=\"color: #7e8c8d;\">gray</span></strong> border).&nbsp;</p>\n<p>4) ***Potential issue for Windows users: For Windows users, last year we noticed an odd behavior where even if you called requestFocusInWindow() from main(), it would not do so. If you are having this issue, one workaround is to have the JPanel request focus when you click on the panel (instead of automatically when the program starts). So, instead of in main(), you can have panel.requestFocusInWindow() inside mousePressed()</p>\n<p>5) Demo of working program: <a href=\"https://www.youtube.com/watch?v=HLBVvHx3JfM\" target=\"_blank\">https://www.youtube.com/watch?v=HLBVvHx3JfM</a></p>\n<p>6) Submit (If you have a separate Listener class, .zip them up as LastNameFirstNameKeyBoardAndFocusDemo.zip).</p>",
      "materials": [],
      "dueDate": "2025-01-22T23:59:59.000-08:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180754",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180754",
      "title": "Extended Classwork - SubKiller Part 1 (Initial Refactor)",
      "description": "<p><em><strong><span class=\"NjE5zd\">Nothing to submit yet, but you will submit later as part of HW #7, so please keep up.&nbsp;&nbsp;</span></strong></em></p>\n<p><span class=\"NjE5zd\">Video: Refactoring SubKillerOriginal to be split across several classes: </span><a href=\"https://www.youtube.com/watch?v=AJBBLr5wyrk\" target=\"_blank\">https://www.youtube.com/watch?v=AJBBLr5wyrk</a></p>\n<p><span class=\"NjE5zd\">(0:00 - 8:00)</span></p>\n<p><strong><span class=\"NjE5zd\"> a) Intro to code <em>(you can skip if you already understand the code... so start at 8:00)</em> </span></strong></p>\n<p><strong><span class=\"NjE5zd\">(8:00 - 12:00) </span></strong></p>\n<p><span class=\"NjE5zd\">b) Creating new classes (make them non-nested classes) </span></p>\n<p><span class=\"NjE5zd\">(12:00 - 13:30)</span></p>\n<p><span class=\"NjE5zd\">c) Work on SubKillerPanel (later, will need to add getters/setters for Boat, Bomb, and Sub to access) </span></p>\n<p><span class=\"NjE5zd\">(13:30 - 25:00) </span></p>\n<p><span class=\"NjE5zd\">d) Work on SubKillerListener </span></p>\n<p><span class=\"NjE5zd\">(25:00 - 28:30) </span></p>\n<p><span class=\"NjE5zd\">e) Work on Boat (need to add reference to SubKillerPanel to access width/height) </span></p>\n<p><span class=\"NjE5zd\">(28:30 - 33:45) </span></p>\n<p><span class=\"NjE5zd\">f) Work on Bomb (need to add reference to Boat bomb attaches to and to Submarine that bomb explodes) </span></p>\n<p><span class=\"NjE5zd\">(33:45 - 35:30) </span></p>\n<p><span class=\"NjE5zd\">g) Work on Submarine (need to add reference to SubKillerPanel) </span></p>\n<p><span class=\"NjE5zd\">(35:30 - 38:45) </span></p>\n<p><span class=\"NjE5zd\">h) Go back to SubKillerListener (update to use getters/setters for panel, boat, bomb) </span></p>\n<p><span class=\"NjE5zd\">(38:45 - 40:00) </span></p>\n<p><span class=\"NjE5zd\">i) Go back to SubKillerPanel (update constructors to pass references to panel, boat, bomb, so classes can talk to each other) </span></p>\n<p><span class=\"NjE5zd\">(40:00 - 42:00) </span></p>\n<p><span class=\"NjE5zd\">j) Finalize SubKillerMain (create Panel and Listener based on our new, separated design, and add focusListener)</span></p>",
      "materials": [],
      "dueDate": "2025-01-24T23:59:59.000-08:00",
      "points": null,
      "originLMS": "canvas"
    },
    {
      "id": "180755",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180755",
      "title": "Extended Classwork - SubKiller Part 2 and 3 (Adding Components + Adding Listeners/Functionality)",
      "description": "<p><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"6.5 notes(2).pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842551?verifier=Dkse7bnE1sZeBZkq2OZYBwCFAkDuVMXrGvMgy2qW&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842551\" data-api-returntype=\"File\"><span class=\"NjE5zd\"><span style=\"background-color: #eccafa;\">6.5 notes.pdf</span> </span></a></p>\n<p><span class=\"NjE5zd\"><strong>Part 2) </strong><em><strong>(note that you already watched the first 12 minutes as Video Eight, can skip the first 12 minutes and just watch the last 15 minutes). </strong></em>Watch 6.5 notes, add components to SubKiller that don't function yet (ScorePanel, JSlider, JLabel, etc) </span><a href=\"https://youtu.be/l_LSbJxv8mI?t=735\" target=\"_blank\">https://youtu.be/l_LSbJxv8mI?t=735</a><em><strong><span class=\"NjE5zd\"> <br></span></strong></em></p>\n<p>&nbsp;</p>\n<p><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"6.6 notes(3)-1.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842782?verifier=6ff0d9fA3GADMTbNxOP6dSwR1Pytkjl8f2hLYKR5&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842782\" data-api-returntype=\"File\"><span class=\"NjE5zd\" style=\"background-color: #eccafa;\">6.6 notes.pdf</span></a></p>\n<p><strong>Part 3)</strong></p>\n<p><span class=\"NjE5zd\">SubKiller, hooking up Listeners and functionality: <a href=\"https://www.youtube.com/watch?v=qvyNGD_O7uQ\" target=\"_blank\">https://www.youtube.com/watch?v=qvyNGD_O7uQ</a></span></p>",
      "materials": [],
      "dueDate": "2025-01-24T23:59:59.000-08:00",
      "points": null,
      "originLMS": "canvas"
    },
    {
      "id": "180757",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180757",
      "title": "Extended Classwork - Video Eight:(SimpleCalc, SliderDemo)",
      "description": "<p>Read or skim <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"6.5 notes(1).pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842777?verifier=BGarj3UleWhoIoAHl2HZd3H0d1FmCCLC0rL2DHF1&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842777\" data-api-returntype=\"File\"><span style=\"background-color: #eccafa;\">6.5</span></a> and <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"6.6 notes(1).pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842572?verifier=7KWqAwxSnlxb9fyB0uc5Y0IipiLPb2PslhTlx8C2&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842572\" data-api-returntype=\"File\"><span style=\"background-color: #eccafa;\">6.6</span></a> notes on components and layout managers.</p>\n<p>Download: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"SimpleCalc.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842528?verifier=CaKHk2xnnmbb04IU1gIJMX2b1npmwiIjcy73Kamm&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842528\" data-api-returntype=\"File\">SimpleCalc.java</a> and <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"SliderDemo.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842776?verifier=UFgodokUeuWZRwztVyLmKk4Oa4rdPs9CBbX88xzg&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842776\" data-api-returntype=\"File\">SliderDemo.java</a>&nbsp;</p>\n<p>Watch notes: <a href=\"https://youtu.be/1977Zg825e8\" target=\"_blank\">https://youtu.be/1977Zg825e8</a> <br>a) SimpleCalc.java: Skim code attached below (explained in video 7:45 - 11:00). &nbsp;<br>b) SliderDemo.java: Skim code attached below (explained in video 11:00 - 12:00).&nbsp;</p>\n<p>Submit SimpleCalc.java&nbsp;</p>",
      "materials": [],
      "dueDate": "2025-01-24T23:59:59.000-08:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180756",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180756",
      "title": "Extended Classwork - SubKiller Part 4 (Adding Menus)",
      "description": "<p><span class=\"NjE5zd\">- Here is a brief visual summary of the whole chapter: <a class=\"instructure_file_link inline_disabled external\" href=\"https://drive.google.com/file/d/1tvVT9-ytdNuUQJwhU0GQHK7mm5W-Xo8a/view?usp=sharing\" target=\"_blank\"><span>Chapter 6 Summary Notes</span></a></span></p>\n<p><span style=\"background-color: #eccafa;\"><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"6.7 notes(1).pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842806?verifier=AeRLfwsoj6C1L2lfC9V9ef4ZH8ptyUmGncH60Bza&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842806\" data-api-returntype=\"File\">- 6.7 notes.pdf</a>&nbsp;</span></p>\n<p>&nbsp;</p>\n<p>Watch the video on adding menus to SubKiller: <a href=\"https://youtu.be/1EuvTe_r22A\" target=\"_blank\">https://youtu.be/1EuvTe_r22A</a>&nbsp;</p>",
      "materials": [],
      "dueDate": "2025-01-27T23:59:00.000-08:00",
      "points": null,
      "originLMS": "canvas"
    },
    {
      "id": "180821",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180821",
      "title": "HW #7: Completed Enhanced SubKiller",
      "description": "<p>1) Your SubKiller program should now have<br>a) <strong>Separate (not nested) classes that talk to each other</strong> via getters/setters/references to each other set in the constructor<br>b) A <strong>ScorePanel</strong> at the bottom that keeps track of score, plus has <strong>difficulty slider</strong> that works<br>c) A <strong>Menu</strong> that allows you to quit and get info about the game</p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842780/preview?verifier=8ivwZzpQTU7Ia0mL9VjoGly6PsY5C4O8aniibFKc\" alt=\"image.png\" width=\"256\" height=\"216\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842780\" data-api-returntype=\"File\" loading=\"lazy\"></p>\n<p>2) Zip up all the SubKillerFiles (Main, Panel, Listener, Boat, Bomb, Sub, ScorePanel...).&nbsp;</p>\n<p>3) Submit to this Canvas assignment</p>",
      "materials": [],
      "dueDate": "2025-01-27T23:59:00.000-08:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180750",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180750",
      "title": "Day 10 Extended Classwork: Enhanced For Loops (for-each loops)",
      "description": "<p>0) Download <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"ForEachPractice.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842576?verifier=Qu6BvzmagekC3G3agQ34rdugsw52z7jJa0m1jOxS&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842576\" data-api-returntype=\"File\">ForEachPractice.java</a></p>\n<p>1) Skim <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"7.1 notes(1).pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842577?verifier=p4N8FbHBhHaTirGAR6L2Gcc8WTebSJ7yfj4ZcVnL&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842577\" data-api-returntype=\"File\"><span style=\"background-color: #eccafa;\">7.1 notes.pdf</span></a></p>\n<p>2) Watch<strong> </strong><a href=\"https://youtu.be/pRacrsViv6g\" target=\"_blank\">https://youtu.be/pRacrsViv6g</a><strong> </strong></p>\n<p>3) Submit updated ForEachPractice.java (you can skip the one method I say you can skip in the video) to this assignment.</p>",
      "materials": [],
      "dueDate": "2025-01-31T23:59:59.000-08:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180823",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180823",
      "title": "HW #8: Refactor SimplePaint",
      "description": "<p>0) Here is some starter code (or you can use your finished HW #5): <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"SimplePaintAns.java\" href=\"https://mvla.instructure.com/courses/8995/files/3142129?verifier=TDQYdLEj05bA8Dln3urS6daQBFvyHooXunvLwHyX&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/3142129\" data-api-returntype=\"File\">SimplePaintAns.java</a></p>\n<p>1) Rename SimplePaint to SimplePaintPanel. SimplePaintPanel should extend JPanel, but no longer implement the Listener interfaces&nbsp;</p>\n<p>2) Create a separate Listener class, SimplePaintListener, that does all of the listening and event-handling.</p>\n<p>3) The Line class can be separated out into a separate class, or left nested (whatever you think is easier).&nbsp;</p>\n<p>4) Make the SimplePaintPanel’s background black&nbsp;</p>\n<p>5) The 3 pixel wide gray border should NOT be made from 3 hand-drawn rectangles, but rather using component.setBorder(BorderFactory … )</p>\n<p>6)The hard-coded color-choosing sidebar (red rectangle, blue rectangle etc) should be replaced with easily-resizable JButtons. Don’t worry about highlighting the current color in white.</p>\n<p>7) The same colors should be available, along with a “Clear” button.</p>\n<p>8) A new ‘Custom’ button should be available that opens up a JColorChooser that allows you to choose a different color</p>\n<p>9)A menu bar with 2 different menus, “Simple Paint” and “Edit” should be available. “Simple Paint” should have a menu option “Quit” that quits, and “Edit” should have the option “Undo” that undoes the last Line drawn.&nbsp;</p>\n<p>10) SimplePaintListener should implement KeyListener’s keyPressed() method, so that the user can also type “Command-z” to Undo the previous line. This keystroke should work after we draw any line, after we change colors, and draw a line, and even after you click a new color JButton and press \"Command-Z\" without drawing a line.&nbsp;</p>\n<p>11) Add the SimplePaintPanel to the old PlainPanel class, and use PlainPanelMain to run the program. (Or you can also use a different class if you prefer). Set PlainPanel’s layout with this.setLayout() to the correct layout. You can also use extra custom JPanel objects, or regular JPanel objects as container classes as necessary to make the program look and behave like this demonstration video: <a href=\"https://www.youtube.com/watch?v=ag_pheR5-_s&amp;feature=youtu.be\" target=\"_blank\">https://www.youtube.com/watch?v=ag_pheR5-_s&amp;feature=youtu.be</a></p>\n<p>12) Zip all your files as LastNameFirstNameSimplePaintFiles.zip</p>",
      "materials": [],
      "dueDate": "2025-01-31T23:59:59.000-08:00",
      "points": 8,
      "originLMS": "canvas"
    },
    {
      "id": "180535",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180535",
      "title": "Chapter 6 Take-Home Test",
      "description": "<p>0) Sign the take-home honesty pledge paper.</p>\n<p>1) Download Starter Code: <a class=\"instructure_file_link inline_disabled\" title=\"Ch 6 Starter Code.zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842569?verifier=zaxYDFkrkJ1mPqOlTTzusYgmHry6cUiTgUxKZFSD&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842569\" data-api-returntype=\"File\">Ch 6 Starter Code.zip</a>&nbsp;</p>\n<p>2) Complete the Ch 6 Test by yourself. <span style=\"color: #e03e2d;\">It will be peer reviewed on the due date (due at <strong><span style=\"text-decoration: underline;\">beginning</span></strong> of class Mon).</span><br>a) Fill in the missing parts of the methods (indicated with comments) in the attached files.&nbsp;<br>b) Note that the CirclePainterMain file has nothing to fill in. It is used only to run the program.&nbsp;<br>c) Make sure that you can only drag circles by clicking EXACTLY inside of them.<br>d) In CirclePainterWindow.java, the line \"radiusTextField.selectAll();\" will be helpful for completing your requirements.&nbsp;<br>As for where it goes, think about which section of your code it would be most helpful in.</p>\n<p>3) Check your program&nbsp;<br>a) With this demo video: <a href=\"https://www.youtube.com/watch?v=zRJUd3xsLdg\" target=\"_blank\">https://www.youtube.com/watch?v=zRJUd3xsLdg</a> <br>b) With the rubric that will be used to grade your test: <span style=\"background-color: #eccafa; color: #3598db;\"><a class=\"instructure_file_link inline_disabled\" style=\"background-color: #eccafa; color: #3598db;\" href=\"https://goo.gl/fQjFmW\" target=\"_blank\">Chapter 6 Test Rubric</a>&nbsp;</span></p>\n<p>4) Submit all your files as a zip file with the name: \"Chapter6Test.zip\".</p>",
      "materials": [],
      "dueDate": "2025-02-03T10:15:00.000-08:00",
      "points": 100,
      "originLMS": "canvas"
    },
    {
      "id": "180552",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180552",
      "title": "Day 11 Extended CW:  Big-Oh notation and Complexity (Part 1)",
      "description": "<p><strong>Watch the Canvas Studio video, answer the quiz questions.</strong></p>\n<p>Links referenced in the video:</p>\n<p>-- Big-O Definition <span style=\"background-color: #fbeeb8;\"><a class=\"instructure_file_link inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/18oCFiNt-wx8KL7Lm3FPghI6MaRIIVI9oNEQZLHNEX-E/edit?usp=sharing\" target=\"_blank\">Slides</a></span>.&nbsp;</p>\n<p>-- Xoax.net Big-O explanation video: <a href=\"https://youtu.be/6Ol2JbwoJp0?t=54\"><span>https://youtu.be/6Ol2JbwoJp0?t=54</span></a></p>\n<p>-- ArrayList visualization:&nbsp;<span class=\"NjE5zd\"> <a class=\"external\" href=\"https://yongdanielliang.github.io/animation/web/ArrayList.html\" target=\"_blank\"><span>https://yongdanielliang.github.io/animation/web/ArrayList.html</span></a></span></p>\n<p>-- Desmos examples of Big-O definition: <a href=\"https://www.desmos.com/calculator/dcrh1wiyr0\"><span>https://www.desmos.com/calculator/dcrh1wiyr0</span></a></p>\n<p><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_embedding_id%3D371-8PhOeQ1_H3MghbGxOeSfNQ\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" loading=\"lazy\"></iframe></p>",
      "materials": [],
      "dueDate": "2025-02-03T23:59:00.000-08:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180825",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180825",
      "title": "HW #9: ArrayListPractice",
      "description": "<p>Download <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"ArrayListPractice.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842565?verifier=wNkB7bIBzQCwbg4DmUnCW821c2Z4rqWJSr3xhJoa&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842565\" data-api-returntype=\"File\">ArrayListPractice.java</a>&nbsp;</p>\n<p>Complete ArrayListPractice.java so that it passes the given tests.</p>",
      "materials": [],
      "dueDate": "2025-02-03T23:59:00.000-08:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180769",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180769",
      "title": "HW #10: Codingbat Array-3 (Improve linearIn to O(n) time, fix34)",
      "description": "<p>Go to <a href=\"https://codingbat.com/java/Array-3\" target=\"_blank\">https://codingbat.com/java/Array-3</a>.&nbsp; <strong>**Log in**. </strong><strong></strong></p>\n<p>1) Do <strong>fix34</strong> -- O(n^2) time is OK for this one</p>\n<p>2) Re-do <strong>linearIn</strong> <span style=\"color: #e03e2d;\">**so that it would run in O(n) time, not O(n^2) time.**&nbsp;</span><br>If you forgot about what O(n) and O(n^2) mean, here are the slides from our extended classwork:</p>\n<p>Part 1 Big-O Definition <span style=\"background-color: #fbeeb8;\"><a class=\"instructure_file_link inline_disabled external\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/18oCFiNt-wx8KL7Lm3FPghI6MaRIIVI9oNEQZLHNEX-E/edit?usp=sharing\" target=\"_blank\">Slides</a></span>.&nbsp; Part 2 Big-O Examples <span style=\"background-color: #fbeeb8;\"><a class=\"instructure_file_link inline_disabled external\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1BpQ4YnPZriPKMXYawV0QUaPtIF4H1koauKWbKKLhL7Q/edit?usp=sharing\" target=\"_blank\">Slides</a></span>.</p>\n<p>&nbsp;</p>\n<p>As long as you are logged in when you submit your correct versions, that is all you need to do (no Canvas submission).</p>",
      "materials": [],
      "dueDate": "2025-02-07T23:59:59.000-08:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180771",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180771",
      "title": "HW #11: Codingbat Array-3 squareUP + (seriesUp or maxMirror)",
      "description": "<p>Go to <a href=\"https://codingbat.com/java/Array-3\" target=\"_blank\">https://codingbat.com/java/Array-3</a>.&nbsp; <strong>**Log in**. </strong><strong></strong></p>\n<p><a class=\"instructure_file_link inline_disabled\" href=\"https://docs.google.com/document/d/1LjBx8r-tXaUZEk49oqQQhEm4Opbkt5_w-f-3vZN9F4g/edit\" target=\"_blank\"><span style=\"background-color: #eccafa;\">Planning worksheet</span></a></p>\n<p>If you want to test in Eclipse for the Debugger / System.out debugging: <span class=\"NjE5zd\" style=\"background-color: #ffffff;\"><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" style=\"background-color: #ffffff;\" title=\"CodingBatArray3Tester.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842779?verifier=5Kej2phcj4ZRJGQH6sCnEHxfsHnrvZmDfMoX1crU&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842779\" data-api-returntype=\"File\">CodingBatArray3Tester.java</a>&nbsp;</span></p>\n<p>- Completing all 3, squareUp + seriesUp AND maxMirror results in 1 extra credit point. &nbsp;</p>\n<p>- Please don't copy from online and paste in as your own answer. &nbsp;</p>\n<p>- Don't spend 10 hours on this, even one correct will get 2.5/4 points.</p>\n<p>- As long as you are logged in when you submit your correct versions, that is all you need to do (no Canvas submission).</p>",
      "materials": [],
      "dueDate": "2025-02-10T23:59:00.000-08:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180773",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180773",
      "title": "HW #12: Search Library",
      "description": "<p>Download <a class=\"instructure_file_link inline_disabled\" title=\"SearchHW.zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842583?verifier=LeCPTiZon7dFKiaWzVRVeuSC6UNs1n7ATRBGhK5L&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842583\" data-api-returntype=\"File\">SearchHW.zip</a>&nbsp;&nbsp;</p>\n<p>&nbsp;</p>\n<p>1) Implement the Sequential and Binary search algorithms inside SearchLibrary.java.</p>\n<p>2) You can TEST your algorithm using SingleSearchTester.java. Note that you don't have to modify this file, but you can choose to enter in your own number to search for and array to search in besides the 3 arrays given.&nbsp;</p>\n<p>3) You don't have to modify MultipleSearchTester.java. It runs a longer group of searches, in a slightly more realistic setting. It also prints out the execution time of the searches. Make sure the 2 searches find the exact same matches, and the exact same number of matches.</p>\n<p>4) You don't have to modify ArrayImporter.java.</p>\n<p>5) Make sure that the largeArray.txt and smallArray.txt files have been dragged into the PROJECT folder (not the src folder) in Eclipse. You should be able to see the file below the JRE System Library in the Package Explorer view.</p>\n<p>6) Submit SearchLibrary.java (just one file!) to Canvas</p>",
      "materials": [],
      "dueDate": "2025-02-12T23:59:00.000-08:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180569",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180569",
      "title": "Day 16 Extended Classwork: Algorithm Analysis",
      "description": "<p>1) Watch the video, answer the Canvas studio quiz questions:&nbsp; (<span style=\"background-color: #eccafa;\"><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"8.5 notes.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842778?verifier=TycNKwD0gJ5laxNoPe9QOR6Qu2EzfwOGK5uhfhuK&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842778\" data-api-returntype=\"File\">8.5 notes.pdf</a>)</span>&nbsp; &nbsp; (<span style=\"background-color: #eccafa;\"><span style=\"background-color: #fbeeb8;\"><a class=\"inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1_1px63ML4MeI9PweyGlIv-28s9eC9XeuztvIHGDwoEw/edit#slide=id.p\" target=\"_blank\">Slides</a>)</span></span> &nbsp;&nbsp;</p>\n<p><span style=\"text-decoration: underline;\"><span style=\"color: #e03e2d; text-decoration: underline;\"><strong>Also, take a picture of your completed notes (first and last pages) and submit the picture(s) to this Canvas assignment. </strong></span></span></p>\n<p><iframe style=\"width: 800px; height: 880px;\" src=\"https://mvla.instructure.com/courses/8995/external_tools/retrieve?display=borderless&amp;url=https%3A%2F%2Fmvla.instructuremedia.com%2Flti%2Flaunch%3Fcustom_arc_embedding_id%3D382-YIs0Kts5UQztAPF73pS0TQ\" width=\"800\" height=\"880\" allowfullscreen=\"allowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" allow=\"geolocation *; microphone *; camera *; midi *; encrypted-media *; autoplay *\" loading=\"lazy\"></iframe>&nbsp;</p>",
      "materials": [],
      "dueDate": "2025-02-14T23:59:59.000-08:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180775",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180775",
      "title": "HW #13: 2013 FRQ #4 - SkyView (Done as CW)",
      "description": "<p>Make a copy of the Google Doc and type up your answer (good practice for AP test where you will type in your answers, but not be able compile/run your code!): <span style=\"background-color: #c2e0f4;\"><a class=\"inline_disabled\" style=\"background-color: #c2e0f4;\" href=\"https://docs.google.com/document/d/1fUMVeqjUugpqVda8RoWqLOVtTbO0qxJbroCPO32XIpA/edit?tab=t.0\" target=\"_blank\">SkyView</a></span></p>\n<p><span style=\"background-color: #f8cac6;\"><strong>Please save as a pdf and submit to this Canvas assignment.&nbsp;</strong></span></p>\n<p>If you want to try to test the code in Eclipse after writing it, feel free to download and paste in your version: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"SkyView.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842585?verifier=iuiVPj6H4deMEuAz21Swdd6KKxi7TjsccP7oO1Nm&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842585\" data-api-returntype=\"File\">SkyView.java</a>&nbsp;&nbsp;</p>\n<p>&nbsp;</p>\n<p>Check your solution after finishing:&nbsp;</p>\n<p>a) Check the rubric + canonical solutions* <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"SkyView rubric and solutions.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842783?verifier=xIFV34VGxYo8TVKxF1WMWUIg6ZZCWDIbFqWaBxor&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842783\" data-api-returntype=\"File\">here</a>&nbsp; <br>b) Check sample student responses <a class=\"inline_disabled\" href=\"https://secure-media.collegeboard.org/digitalServices/pdf/ap/apcentral/ap13_computer_science%20a_q4.pdf\" target=\"_blank\">here</a></p>\n<p><em>*Remember, there are <span style=\"text-decoration: underline;\">many</span> possible solutions, this is just one possible solution!</em></p>\n<p>By the way, here is a link to the AP Exam Archive for all FRQs: (optional)<br><a href=\"https://apcentral.collegeboard.org/courses/ap-computer-science-a/exam/past-exam-questions\" target=\"_blank\">https://apcentral.collegeboard.org/courses/ap-computer-science-a/exam/past-exam-questions</a></p>",
      "materials": [],
      "dueDate": "2025-02-14T23:59:59.000-08:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180777",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180777",
      "title": "HW #14: FileReaderTester",
      "description": "<p><span>(</span><a href=\"https://drive.google.com/file/d/1mviVxhfrdb4_RVPm__IDTl1kH82hLhOz/view?usp=sharing\"><span><span style=\"background-color: #eccafa;\">Summary of HW Assignment</span></span></a><span>)</span></p>\n<p><span>HW Intro video (including lines of code to initialize FileReader &amp;BufferedReader): </span></p>\n<p><span><a href=\"https://youtu.be/uCM1wB8OXwU\" target=\"_blank\">https://youtu.be/uCM1wB8OXwU</a> </span></p>\n<p>0) Download <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"FileReaderTester.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842799?verifier=aPddWmYWeg6prbe1iSNsgQFRw5MrqGNVdwlCNAXk&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842799\" data-api-returntype=\"File\">FileReaderTester.java</a> and <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"dialog.txt\" href=\"https://mvla.instructure.com/courses/8995/files/2842789?verifier=LTZWPi4nihe4GUl82K3dlC3HlogieNBYXEu9h7B5&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842789\" data-api-returntype=\"File\">dialog.txt</a>&nbsp; (don't forget to move dialog.txt to the Eclipse project level).</p>\n<p>1)&nbsp; Modify FileReaderTester to handle the different errors that can occur with I/O:</p>\n<p>a) <strong>Handle the situation where the file can't be located</strong>, i.e. test 'dialog2.txt' instead of the correct 'dialog.txt'&nbsp;<br>Print: <span style=\"text-decoration: underline;\">\"Unable to open file '\" + fileName</span></p>\n<p>b) <strong>Handle if an error occurs in the middle of reading the file</strong>, such as the stream getting corrupted.&nbsp;<br>Print: <span style=\"text-decoration: underline;\">\"Error reading file '\" + fileName</span><br>(Note this corruption is simulated by randomChanceEvent(). Check bufferedReader.readLine() to see what this Exception is.)</p>\n<p>c) <strong>Use</strong> <strong>Exceptions to check for when the file is done reading</strong>. In other words, don't check for the end of the file, wait for the Exception to be thrown and print out the message<span style=\"text-decoration: underline;\"> \"...Finished reading file\"</span> if everything proceeded smoothly, with no problems.<br>** Hint: For the HW, although it is not in the BufferedReader API, as bufferedReader reaches the end of the file, the buffer will be empty. At this time, the program will error because it is trying to call readLine(), but bufferedReader is null.**</p>\n<p>d) Use the <strong>try...catch...finally syntax to ensure the resource bufferedReader is closed</strong>, no matter what (Exception or not)</p>",
      "materials": [],
      "dueDate": "2025-02-28T23:59:59.000-08:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180538",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180538",
      "title": "Chapter 7 Webcat",
      "description": "<p><span class=\"NjE5zd\"><span style=\"color: #000000;\"><strong>Download</strong>: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"SortLibrary.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842843?verifier=4wLly0VaoH0K5oJ0yk69YjGKRr0Loz2F11c4g4e1&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842843\" data-api-returntype=\"File\">SortLibrary.java</a> as well as the JUnit test (add text files to project level in Eclipse): <span style=\"background-color: #f8cac6;\"><a class=\"instructure_file_link inline_disabled\" style=\"background-color: #f8cac6;\" title=\"Ch 7 Webcat Files (add .txt files to Project level).zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842364?verifier=7fbERyNXANxZnVlzUFs5Kol4H9G3JY3BCHHHWDDp&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842364\" data-api-returntype=\"File\">JUnit Test - SortLibraryTest.java + Ch 7 Webcat Files (add .txt files to Project level).zip</a>&nbsp;</span></span></span></p>\n<p><span class=\"NjE5zd\"><span>- <a class=\"inline_disabled\" href=\"https://drive.google.com/file/d/0B3ADdwxJkf48OFpTWmpfM3pPTHc/view?resourcekey=0-mVwwD2NwKjAU0OCa8ETYjg\" target=\"_blank\">Bubble Sort</a><br>- <a class=\"inline_disabled\" href=\"https://drive.google.com/file/d/0B3ADdwxJkf48cmFyRXRBUUhuLUk/view?usp=sharing&amp;resourcekey=0-Bi8PrImW4mMsAeuzwuUB7g\" target=\"_blank\">Insertion Sort</a><br>- <a class=\"inline_disabled\" href=\"https://drive.google.com/file/d/0B3ADdwxJkf48bEdMM1IyNl9Iem8/view?usp=sharing&amp;resourcekey=0-mkxxhz2KHbKx0xrwihMKOQ\" target=\"_blank\">Selection Sort</a><br>- <a class=\"inline_disabled\" href=\"https://drive.google.com/file/d/0B3ADdwxJkf48ZTJHZTB1MXVyZGc/view?usp=sharing&amp;resourcekey=0-pd1no4Ed66YNXVyoMc4UUw\" target=\"_blank\">Merge Sort</a></span></span></p>\n<p><span class=\"NjE5zd\">I will only grade your submissions once s</span><span class=\"NjE5zd\">o make sure you are running the tests yourself before submitting.<span style=\"color: #000000;\">&nbsp;&nbsp; </span></span></p>\n<p><span class=\"NjE5zd\"><span style=\"color: #000000;\">If you forgot how to add JUnit library to your Eclipse build path:</span></span><br><img src=\"https://mvla.instructure.com/courses/8995/files/2842592/preview?verifier=3inPNLgy2cd7VGKIyBFv8OYclhvZV2yyqCog1AVA\" alt=\"Screen Shot 2023-02-17 at 1.46.29 PM.png\" width=\"563\" height=\"184\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842592\" data-api-returntype=\"File\" loading=\"lazy\"></p>\n<p><span class=\"NjE5zd\">-- Drag all the .txt files to the Project level of your Eclipse Java project before running any JUnit tests!</span></p>\n<p><span class=\"NjE5zd\">-- Modify SortLibrary to test and try different sorts.&nbsp; Remember, for mergeSort, to get 100% it has to handle non-powers of 2 (e.g. length 11, length 33 etc).&nbsp; But you can still get a 94% if it only handles power of 2 (length 8, or length 16, length 32 etc). <br></span></p>\n<p>-- Implement the bubbleSort() method &nbsp;to return total number of swaps. You might want to test it on a smaller array, where you know what the answer should be. If you test it on a very large array, the number might be so large it could overflow and look like a negative.&nbsp;</p>\n<p>-- Implement insertionSort(), selectionSort and mergeSort.&nbsp; They can be void and simply sort the array in place.</p>\n<p>-- If you use recursion for Merge Sort, you should be able to explain it (i.e. you didn't copy it from someone). I will cover a non-recursive approach</p>\n<p>-- You can also add/remove System.out statements from the JUnit tests</p>",
      "materials": [],
      "dueDate": "2025-03-03T23:00:00.000-08:00",
      "points": 35,
      "originLMS": "canvas"
    },
    {
      "id": "180780",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180780",
      "title": "HW #15: MaxSubsequenceSumTester",
      "description": "<p>Complete MaxSubsequenceSumTester methods&nbsp; <strong>maxSubsequenceSum2 -- O(n^2)</strong> time, and <strong>maxSubsequenceSum3 -- O(n)</strong> time. &nbsp;</p>\n<p><span>Completed notes&nbsp;</span> from class are posted <span><span class=\"instructure_file_holder link_holder\"><a class=\"inline_disabled external\" href=\"https://drive.google.com/file/d/1b2DyBU8YqcnLFZud0qZXNYEuxBQgvgxA/view?usp=sharing\" target=\"_blank\"><span style=\"background-color: #eccafa;\">here</span></a></span></span></p>\n<p><span><span class=\"instructure_file_holder link_holder\">Slides from class are here: <a class=\"instructure_file_link inline_disabled\" href=\"https://docs.google.com/presentation/d/15_zmhSsOLtj3ek6CJzPj8P_TnS-FEw9UXciDGOcBfOY/edit?usp=sharing\" target=\"_blank\"><span style=\"background-color: #fbeeb8;\">Slides</span></a>. </span></span></p>\n<p>&nbsp;</p>",
      "materials": [],
      "dueDate": "2025-03-03T23:59:00.000-08:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180782",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180782",
      "title": "HW #16: DiverseArrayTest",
      "description": "<p>Create a file, DiverseArrayTest.java, that will serve to perform Unit Testing for question #2 from example posted.&nbsp; (Remember the DiverseArray.java code file was included in the .zip file in the agenda).</p>\n<p>&nbsp;</p>\n<p>It should include:<br>1)a 'public void setUp() throws Exception' method (marked with annotation<strong> @Before</strong>) to set up any test arrays for each unit test. &nbsp;<strong><span style=\"color: #169179;\">*** So, maybe create some 1D arrays, 2D arrays that are diverse, non-diverse, etc that you can use in your test. &nbsp; Hardcoded arrays are fine ***</span></strong></p>\n<p><span style=\"color: #000000;\">2) a 'public void <strong>testArraySum</strong>()' method (marked with annotation<strong> @Test</strong>) to test proper functionality of the named method. &nbsp;</span></p>\n<p><span style=\"color: #000000;\">3) a 'public void <strong>testRowSums</strong>()' method (marked with annotation <strong>@Test</strong>) to test proper functionality of the named method. &nbsp;*** For this one, you probably want to call DiverseArray.rowSums and pass in a test 2D array, then compare it with a 1D array that you know represents the correct return value. &nbsp;One problem: using .equals() doesn't work for arrays. &nbsp;Instead use assertTrue(java.util.Arrays.equals(new int[]{correct, answer}, </span>DiverseArray.rowSums(twoDimensionalArray)));</p>\n<p>4) a 'public void <strong>testIsDiverseTrueCase</strong>()' method (marked with annotation <strong>@Test</strong>) to test proper functionality of the isDiverse() method</p>\n<p>5) a 'public void <strong>testIsDiverseFalseCase</strong>()' method (marked with annotation <strong>@Test</strong>) to test proper functionality of the isDiverse() method</p>\n<p>&nbsp;</p>\n<p>6) Run your JUnit tests with the attached correct implementation. <span style=\"text-decoration: underline;\">Everything should pass initially</span> since DiverseArray.java is correct.&nbsp;&nbsp;</p>\n<p>Additionally, <span style=\"text-decoration: underline;\">try to mess up various methods</span> in DiverseArray.java, and <span style=\"text-decoration: underline;\">confirm your tests catch these errors.</span></p>",
      "materials": [],
      "dueDate": "2025-03-06T23:59:00.000-08:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180785",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180785",
      "title": "HW #18 Ch 8 Quiz Review (Big O Practice) ",
      "description": "<p>Complete the <a class=\"instructure_file_link inline_disabled\" href=\"https://docs.google.com/document/d/1ev0Db0STz7oXGcyJjTPA2sCsFmQQeK9VweM5W1WT6jw/edit?usp=sharing\" target=\"_blank\">Big O Practice Worksheet</a></p>\n<p>Here is the answer key (of course do the worksheet first!!): <span style=\"background-color: #eccafa;\"><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" style=\"background-color: #eccafa;\" title=\"Big O Problem Answers.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842803?verifier=tYWFi6c2huauV283jBH97abG3dQ0H0UGM4NSjEH1&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842803\" data-api-returntype=\"File\">Key</a></span></p>\n<p><strong>Since the answer key is already posted, you don't have to submit to Canvas I will just give you 4 pts.</strong></p>",
      "materials": [],
      "dueDate": "2025-03-12T23:59:00.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180837",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180837",
      "title": "Reading HW: 8.1 - 8.2.1 on correctness, 8.3 on exceptions",
      "description": "<p>Please read 8.1 - 8.2.1 on correctness, 8.3 on exceptions in <a id=\"108855\" class=\"instructure_file_link instructure_scribd_file\" href=\"https://mvla.instructure.com/courses/8995/files/2842796?verifier=URlRRbZVC94XZ23lFAJIAMGzSpjr4jPyFWgu2ea6&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"true\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842796\" data-api-returntype=\"File\">javanotes7-linked.pdf</a> &nbsp;&nbsp;</p>\n<p>These will be covered on the Ch 8 Quiz.</p>",
      "materials": [],
      "dueDate": "2025-03-12T23:59:00.000-07:00",
      "points": null,
      "originLMS": "canvas"
    },
    {
      "id": "180787",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180787",
      "title": "HW #19: Simplified Quicksort",
      "description": "<p><span>0) As a reminder, here is the completed visualization of quicksort walkthrough from class: <span style=\"background-color: #fbeeb8;\"><span style=\"background-color: #eccafa;\"><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Quicksort walkthrough.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842802?verifier=pywGwr7OpvnLmuKzrPSTPTC4v7d0RtdvxmQJ6nH8&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842802\" data-api-returntype=\"File\">Quicksort walkthrough.pdf</a>&nbsp;&nbsp;</span></span></span></p>\n<p><span>1) Download &nbsp;<a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"SortLibrarySimplifiedQuicksort.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842805?verifier=UhDQ3HpYNwJcTmsB71ZJgSiXlxkK2ISaJhF5Ptlp&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842805\" data-api-returntype=\"File\">SortLibrarySimplifiedQuicksort.java</a>&nbsp;<br></span></p>\n<p>2) Watch the 10 minutes starter code set-up video: <a href=\"https://www.youtube.com/watch?v=EXrCMJRWpzo\" target=\"_blank\">https://www.youtube.com/watch?v=EXrCMJRWpzo</a></p>\n<p>3) Complete the recursive simplified Quicksort algorithm, test with SortLibraryForQuicksort.&nbsp;</p>\n<p><strong>It DOES NOT have to work for arrays with repeated elements (can still get 4/4 if it fails for repeated elements). </strong></p>\n<p><span style=\"color: #169179;\">(Optional bonus) +1 bonus point if you can fix the algorithm to sort arrays containing repeating elements.</span></p>\n<p><span style=\"color: #169179;\"><img src=\"https://mvla.instructure.com/courses/8995/files/2842810/preview?verifier=1dcvHn3eMUP08Yx138SCByhRNYO6J8wETmASUt1i\" alt=\"image.png\" width=\"237\" height=\"1297\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842810\" data-api-returntype=\"File\" loading=\"lazy\"></span></p>",
      "materials": [],
      "dueDate": "2025-03-12T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180784",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180784",
      "title": "HW #17: Codingbat Recursion-1 (first 15 problems)",
      "description": "<p>Complete the first 15 problems from Recursion-1 (up until array6) from <a href=\"https://codingbat.com/java/Recursion-1\" target=\"_blank\">https://codingbat.com/java/Recursion-1</a> (<strong>make sure you are logged in</strong>). Or, do as many as you can after spending a reasonable amount of time. I'd rather you do 6/15 than copy 15/15. Not checked until Wed night. If finished, you can continue doing more from Recursion-1.</p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842801/preview?verifier=zIxSRLATJ9Yqhv1HGqMm2fLn7jNOKg1M8hyUBYut\" alt=\"r1.jpg\" width=\"448\" height=\"558\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842801\" data-api-returntype=\"File\" loading=\"lazy\"></p>\n<p>&nbsp;</p>\n<p>Because we are just learning recursion, and it is a trickier topic at first, you may work with your neighbor on these in class. You may discuss the problems in a more detailed manner than normal. Example: \"I can't figure out what the parameter should be when I call the method recursively\" \"Well, how are you going to move closer to the solution?\" ....\"Why is this getting a stack overflow error?\" \"you forgot your base case...when do you think it should stop?\"...but not a direct, line-by-line copying.</p>\n<p>&nbsp;</p>\n<p>However, you still may NOT copy directly off the internet.</p>\n<p>&nbsp;</p>\n<p>At home, try to work on your own as much as possible. This is the only way you will truly learn this interesting, confusing, challenging, and helpful concept. You may discuss with others within the grounds outlined above.&nbsp;</p>",
      "materials": [],
      "dueDate": "2025-03-14T23:59:59.000-07:00",
      "points": 5,
      "originLMS": "canvas"
    },
    {
      "id": "180791",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180791",
      "title": "HW #20: Recursive Mergesort",
      "description": "<p>Download: <a class=\"instructure_file_link instructure_scribd_file\" title=\"SortLibraryForMergeSort.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842811?verifier=wCRwwM1DzUj4gIR1g0cbZzbkC8TDJUnOVI9tGVQN&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842811\" data-api-returntype=\"File\">SortLibraryForMergeSort.java</a>&nbsp;&nbsp;</p>\n<p>Complete the recursive mergeSort algorithm. Note that the work of handling the non-powers of 2 is done inside merge(), which we already went over, and is provided.&nbsp;</p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842603/preview?verifier=hOOFEFUevifUrMViQ2wHXjmIFrc9VBPLgYXHcMIR\" alt=\"Screen Shot 2023-03-14 at 1.43.02 PM.png\" width=\"365\" height=\"254\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842603\" data-api-returntype=\"File\" loading=\"lazy\"></p>\n<p>Feel free to adjust any parameters you need to make recursion work. I'll include a mergeSort(int[] nums) runner.</p>\n<p>Again, refer to quickSort() if you want ideas for implementing a recursive algorithm, but think about what has to change. What does mergeSort() do differently? For one, you don't have a pivot...how might the order of your calls change?&nbsp;</p>\n<p>If you ALREADY did a recursive merge sort for your Ch 7 Webcat, AND it represented your OWN work (i.e. you can explain how it works as some of you have already done over email), feel free to just copy/paste your working version for this homework. &nbsp;No sense re-doing what you've already done correctly.</p>",
      "materials": [],
      "dueDate": "2025-03-14T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180795",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180795",
      "title": "HW #21: Print Reversed",
      "description": "<p>-- Finish printReversed() (both versions) in LinkedListOfStrings.&nbsp;</p>\n<p><br>-- With the given LinkedListTester main, both versions should output something like</p>\n<p><strong>\"The Abercrombie Guy's friend, The Bad Guy, The Abercrombie Guy, Abel, Dawn, Carol, Bart, Abe\" (no \" --&gt; \" needed, spaces or comma or newline OK)</strong></p>\n<p><strong>-- Note it should <em>just System.out the reversed order, not return a String.&nbsp;</em></strong></p>\n<p><strong><em><img src=\"https://mvla.instructure.com/courses/8995/files/2842604/preview?verifier=gLbsw0ogRu27O2SMl9Ft6zHWMMFag4nSeO0ONnFy\" alt=\"1-1.png\" width=\"512\" height=\"127\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842604\" data-api-returntype=\"File\" loading=\"lazy\"> <br></em></strong></p>\n<p><strong><em><img src=\"https://mvla.instructure.com/courses/8995/files/2842488/preview?verifier=oqht07GtNsvJTCXouzmMneBWS2ECjVytmbZgCFN8\" alt=\"image.png\" width=\"487\" height=\"237\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842488\" data-api-returntype=\"File\" loading=\"lazy\"></em></strong></p>",
      "materials": [],
      "dueDate": "2025-03-17T23:59:00.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180626",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180626",
      "title": "Day 28 Extended Classwork: Implement push(), pop() in Stack / enqueue(), dequeue() in Queue",
      "description": "<p><span>9.3: Stacks and Queues&nbsp; <span style=\"color: #169179;\"><strong>// Bonus: Some of the concepts here also help you with your Linked List Ch 9 Webcat!</strong></span><br></span></p>\n<p><span>a)<em><strong> [Skip if you were here - as we covered in class] </strong></em>Part 1: Understanding Stacks, Queues, and ADTs (<span style=\"background-color: #fbeeb8;\"><a class=\"inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1B_WrLzE81GyT8vnHTQLo1epXnaWh0kWFaB2B1r1eKt0/edit?usp=sharing\" target=\"_blank\">Slides</a></span>)</span></p>\n<p><a href=\"https://www.youtube.com/watch?v=0mnIttIQBck&amp;t=331s\"><span>https://www.youtube.com/watch?v=0mnIttIQBck&amp;t=331s</span></a><span> (9 min)</span></p>\n<p>&nbsp;</p>\n<p><span>b) Download and unzip:&nbsp; <a class=\"instructure_file_link inline_disabled\" title=\"9.3 Stacks and Queues.zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842485?verifier=k3eCzuhoc3swF8gXliSc7lxp8z2xfh9axsumQ2In&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842485\" data-api-returntype=\"File\">9.3 Stacks and Queues.zip</a>&nbsp;&nbsp;<br></span></p>\n<p>&nbsp;</p>\n<p><span>c) Examining and Implementing behaviors of a Stack (push, pop) and Queue (enqueue and dequeue) (<span style=\"background-color: #fbeeb8;\"><a class=\"inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/15PiKAskkSYzjyV_7Wp5oKX27ifhdWSDP2ZtzdGODxq4/edit?usp=sharing\" target=\"_blank\">Slides</a></span>)<br></span></p>\n<p><a href=\"https://www.youtube.com/watch?v=F17X2O6gX1Q&amp;t=192s\"><span>https://www.youtube.com/watch?v=F17X2O6gX1Q&amp;t=192s</span></a><span> (22 min)</span></p>\n<p>&nbsp;</p>\n<p><strong><span style=\"color: #e03e2d;\">d) Submit QueueUsingLinkedList.java (with completed enqueue and dequeue) for 2 pts to this assignment</span></strong></p>",
      "materials": [],
      "dueDate": "2025-03-20T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180629",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180629",
      "title": "Day 30 Extended Classwork: Review Binary Trees, Insert in order to Linked List ",
      "description": "<p><span>a) Worksheet: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Ordered LLOfStrings + BinaryTree paper planning.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842797?verifier=FlhqDUWftU2OLKShhISE0g4wy2kypx6yBu8ekryb&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842797\" data-api-returntype=\"File\">Ordered LLOfStrings + BinaryTree paper planning.pdf</a>&nbsp;&nbsp;</span></p>\n<p><span>b) Download Code (New 9.4 Eclipse Java project recommended).&nbsp; Note we will not use all of these files yet (we will finish next time we meet): <a class=\"instructure_file_link inline_disabled\" title=\"OrderedLinkedListAndBinaryTreeStuff.zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842598?verifier=aCetrpvfK8YBfEL4sou0m6pFwXan79KwjqM6bBNg&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842598\" data-api-returntype=\"File\">OrderedLinkedListAndBinaryTreeStuff.zip</a>&nbsp;&nbsp;</span></p>\n<p><span>c) <a class=\"inline_disabled\" href=\"https://docs.google.com/presentation/d/1cquFGR0MfdMmv3ZRQ850I3br28mIe5NpdY-34Tzwo3U/edit?usp=sharing\" target=\"_blank\"><span style=\"background-color: #fbeeb8;\">Slides</span></a></span></p>\n<p><span>d) Visualization: <a href=\"https://www.cs.usfca.edu/~galles/visualization/BST.html\" target=\"_blank\">https://www.cs.usfca.edu/~galles/visualization/BST.html</a> </span></p>\n<p><span>e) Video<br></span></p>\n<ul>\n<li><span>Part 1: Recap, Pre-, In-, Post- order prints</span></li>\n<li><span>Part 2: Insert in Order to Linked List </span></li>\n<li><span><a href=\"https://www.youtube.com/watch?v=2Bhf_hIyA90\" target=\"_blank\">https://www.youtube.com/watch?v=2Bhf_hIyA90</a> <br></span></li>\n</ul>\n<p>&nbsp;</p>\n<p><strong><span style=\"color: #e03e2d;\">d) Submit completed OrderedLinkedListOfStrings.java for 2 pts to this assignment. <br></span></strong></p>",
      "materials": [],
      "dueDate": "2025-03-26T23:59:00.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180796",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180796",
      "title": "HW #22: Codingbat, Recursion-2 (groupSum + 1 more)",
      "description": "<p>Complete <strong>groupSum, plus one more (any of them is fine)</strong> from <a href=\"https://codingbat.com/java/Recursion-2\" target=\"_blank\">https://codingbat.com/java/Recursion-2</a>&nbsp; (hint will be given later). <br>+1 Bonus point for getting another 2 problems -- any 2 problems -- from Recursion-2.&nbsp;</p>\n<p>So, a total of 2 completed is a perfect 4/4.</p>\n<p>A total of 4 completed is a bonus point, 5/4.</p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842609/preview?verifier=bjqFeSoCVZTtE0jkYTduviQYzfhksvteuVcavjP0\" alt=\"image.png\" width=\"539\" height=\"135\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842609\" data-api-returntype=\"File\" loading=\"lazy\"></p>",
      "materials": [],
      "dueDate": "2025-03-26T23:59:00.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180542",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180542",
      "title": "Chapter 9 Webcat 1: LinkedListOfStrings",
      "description": "<p><span style=\"text-decoration: underline;\"><span style=\"color: #e03e2d; text-decoration: underline;\"><strong>** JUnit test file (Use this one for your final testing, NOT the BasicLinkedListTester we used the first day.&nbsp; Of course you can still use that for informal tests): </strong></span></span><span style=\"background-color: #fbeeb8;\"><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"LinkedListOfStringsTest.java\" href=\"https://mvla.instructure.com/courses/8995/files/3221644?verifier=LoIF7WDf09xSxLW1OPudtp6zpswFPcLVIqHaKT10&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/3221644\" data-api-returntype=\"File\">LinkedListOfStringsTest.java</a>&nbsp;</span> ** Note that this JUnit violates some of our principles of testing one thing per unit test.&nbsp; Sorry!&nbsp; This is for grading purposes!&nbsp;</p>\n<p><span style=\"background-color: #eccafa;\"><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" style=\"background-color: #eccafa;\" title=\"Ch 9 Webcat1 Description.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842792?verifier=DtNDavg4O8wOp2qCyE0nnPA2zH1LMKplL6KHXf7R&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842792\" data-api-returntype=\"File\">Ch 9 Webcat1 Description.pdf</a>&nbsp;</span></p>\n<p><span>Ch 9 Webcat setup:&nbsp;</span><a href=\"https://youtu.be/gx3T34Xflok\"><span>https://youtu.be/gx3T34Xflok</span></a></p>\n<p>&nbsp;</p>\n<p>(Was posted earlier, but here is the file again: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"LinkedListOfStrings-1.java\" href=\"https://mvla.instructure.com/courses/8995/files/3221706?verifier=yJLmDqszrqA84NcMTryaNxGqkZqRiSGOYv5UAeid&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/3221706\" data-api-returntype=\"File\">LinkedListOfStrings.java</a>).&nbsp;</p>\n<p><span style=\"text-decoration: underline;\"><strong>Implement all the blank methods (don't forget to keep track of nodeCount as well) in LinkedListOfStrings.java</strong></span></p>",
      "materials": [],
      "dueDate": "2025-03-28T23:00:00.000-07:00",
      "points": 35,
      "originLMS": "canvas"
    },
    {
      "id": "180798",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180798",
      "title": "HW #24: BinarySearchTree",
      "description": "<p>a) Introduction <a class=\"inline_disabled\" href=\"https://docs.google.com/presentation/d/1Z9EfWBjUosR0-_lq-tuBekGRe9Er53GHB82Yw7SAsDQ/edit?usp=sharing\" target=\"_blank\"><span style=\"background-color: #fbeeb8;\">Slides</span></a></p>\n<p>b) Introduction video: <a href=\"https://youtu.be/PjSey-stiDs\" target=\"_blank\">https://youtu.be/PjSey-stiDs</a></p>\n<p>c) Download, unzip: <a class=\"instructure_file_link inline_disabled\" title=\"BST_HW.zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842607?verifier=8oAidssr4PtOnfd7oE18mqsqNdqf2qnbFPt06KUt&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842607\" data-api-returntype=\"File\">BST_HW.zip</a>&nbsp;&nbsp;</p>\n<p>d) In <strong>BinarySearchTree.java</strong>,&nbsp; complete the uncompleted methods put(), getFrequency(), and the recursive printRange(). Remember<br>'size' represents the number of unique nodes -- which is the size of the tree. 'totalWordCount' is the total number of words passed in through the text file.</p>\n<p>e) Test with <strong>WordFrequencyTestAnalyzer.java</strong>. Try different searchWords, and different start and end Strings for printRange().&nbsp;<br>For Eclipse, just pass in the file name in the argument: e.g. new File(\"quote.txt\");</p>\n<p>Command line users, uncomment the lines in the beginning, if you want to pass in the file name in the arguments when you run the program,&nbsp;e.g. \"java WordFrequencyTestAnalyzer quote.txt\"</p>",
      "materials": [],
      "dueDate": "2025-03-28T23:59:59.000-07:00",
      "points": 6,
      "originLMS": "canvas"
    },
    {
      "id": "180543",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180543",
      "title": "Chapter 9 Webcat 2: PersonDatabase",
      "description": "<p>a) Read: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Ch 9 Webcat 2 description v2(1).pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842844?verifier=E2p5ENWXdpbxegC1BklSxhCQ6htbRnBhPhGGTQZ0&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842844\" data-api-returntype=\"File\">Ch 9 Webcat 2 description v2.pdf</a>&nbsp;</p>\n<p>b) Download, unzip: <a class=\"instructure_file_link inline_disabled\" title=\"Starter Code Ch 9 Webcat 2.zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842608?verifier=qMuQqFXVu2O0TfEakE2zFYFWYnqvqHluJVLjBcgw&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842608\" data-api-returntype=\"File\">Starter Code Ch 9 Webcat 2.zip</a>&nbsp;&nbsp;</p>\n<p>c) Here is the JUnit test file:<span style=\"background-color: #bfedd2;\"> <a id=\"2159214\" class=\"instructure_file_link inline_disabled\" style=\"background-color: #bfedd2;\" title=\"Link\" href=\"https://mvla.instructure.com/courses/8995/files/2842817?verifier=kqN9vzqZZRu4FH0TPhJnt4ofnTZoRpVbPVLFsMzx&amp;wrap=1\" target=\"_blank\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842817\" data-api-returntype=\"File\">PersonDatabaseTest.java</a></span></p>\n<p>d) Fill in the missing methods in PersonDatabase.java and submit after testing.</p>",
      "materials": [],
      "dueDate": "2025-04-04T23:00:00.000-07:00",
      "points": 35,
      "originLMS": "canvas"
    },
    {
      "id": "180797",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180797",
      "title": "HW #23: Codingbat, Recursion-1 (Finish the last 15, or as many as you can )",
      "description": "<p>Do as many as you can <a href=\"https://codingbat.com/java/Recursion-1\" target=\"_blank\">https://codingbat.com/java/Recursion-1</a> , while taking a reasonable amount of time. Make sure you are logged in.&nbsp; <strong><br></strong></p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842274/preview?verifier=qdWGDjsw7BqXYr91QvZPd1KXnZRYBCzr8ZkA7Zx4\" alt=\"image.png\" width=\"454\" height=\"587\" loading=\"lazy\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842274\" data-api-returntype=\"File\"></p>\n<p><span style=\"background-color: #f8cac6;\"><em><strong>I'd rather have you only complete half by the due date, than copy all of them (and learn nothing).</strong></em></span></p>",
      "materials": [],
      "dueDate": "2025-04-04T23:59:00.000-07:00",
      "points": 10,
      "originLMS": "canvas"
    },
    {
      "id": "180801",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180801",
      "title": "HW #26: M.C. Practice Day 1 (Ch 1 - 5)",
      "description": "<p>Please complete both multiple choice sets of questions on the same sheet of paper, scan, and submit.&nbsp;</p>\n<p>Since you will have 90 minutes to do 40 questions, each question should take on average 2.25 minutes.</p>\n<p>- Ch 1 - 3 Questions: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Day 1 - Basics of Operations and Loops.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842819?verifier=MCmluQLLc8K00cNOoHW7oeQJCjIe66a75GfH9sBm&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842819\" data-api-returntype=\"File\">Basics of Operations and Loops.pdf</a> &nbsp; (should take ~18 min)</p>\n<p>- Ch 5 Questions: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Day 2 - Object Oriented Programming.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842821?verifier=SuLvnRrfamyIQiRP0j9frwFaVbZQbNr90GJkgBjv&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842821\" data-api-returntype=\"File\">Object Oriented Programming.pdf</a> &nbsp; (should take ~18 min)</p>",
      "materials": [],
      "dueDate": "2025-04-16T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180802",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180802",
      "title": "HW #27: M.C. Practice Day 2 (Ch 7 - 9) ",
      "description": "<p>Please complete both (1) the multiple choice sets of questions; and (2) the Free Response Question on the same sheet of paper, scan, and submit.&nbsp;</p>\n<p>- Ch 7, 9 M.C. Questions: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Day 3 - 2DArrays, ArrayList, Recursion.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842826?verifier=uQj58OL1o5NRAxMcEFh7ez5dKNxhaNDLLZrVTPgB&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842826\" data-api-returntype=\"File\">Day 3 - 2DArrays, ArrayList, Recursion.pdf</a>&nbsp; &nbsp; (should take ~18 min)</p>\n<p>- <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"FRQ Questions - 2006Q1.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842831?verifier=MCvPaxV7Zl6vPVizMMYtjmf0jk6kEGByUSDfpjxs&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842831\" data-api-returntype=\"File\">FRQ Question - 2006Q1.pdf</a>&nbsp; (should take ~ 90/4 = 22.5 min)</p>\n<p>&nbsp;</p>\n<p><span style=\"background-color: #eccafa;\">Solutions</span></p>\n<p>- Solutions as <span style=\"background-color: #fbeeb8;\"><a class=\"inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1NZ7CTrAwTnAr-bMwDd0RW3gjjxYN_1E7NvyF1J-kD3U/edit?usp=sharing\" target=\"_blank\">Slides</a></span></p>\n<p>- <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Day 3 - 2DArrays, ArrayList, Recursion Solutions.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842824?verifier=lsAVI5dECc1jQMhLdCkGOx9TQhUEgcS68wd6nTmr&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842824\" data-api-returntype=\"File\">Day 3 - 2DArrays, ArrayList, Recursion Solutions.pdf</a>&nbsp;&nbsp;</p>\n<p>- <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"FRQ Solutions - 2006Q1.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842825?verifier=kIWmb3oQ44mjW7eyCdWuNmkssBl1rKBBsXkut5BE&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842825\" data-api-returntype=\"File\">FRQ Solutions - 2006Q1.pdf</a>&nbsp;&nbsp;</p>",
      "materials": [],
      "dueDate": "2025-04-18T23:59:00.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180803",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180803",
      "title": "HW #28: 2014 Multiple Choice Practice Test (25 Q's)",
      "description": "<p>Complete the test, should take 2.25*25 = 56.25 min.&nbsp;</p>\n<p><strong>Feel free to mark up the paper with scratch work.&nbsp; Sketch out variables, objects in memory, recursive calls!</strong></p>\n<p>&nbsp;</p>\n<p><strong>Write your answers on a single sheet of paper.&nbsp; Take picture of the paper showing your work and answers, submit the picture.</strong></p>\n<p>- <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"2014 AP CS Course Description MC Sample Questions.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842833?verifier=jjcWJKTcB27U9Y6YXqaSkyju9HmD58m2VtQPB9L7&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842833\" data-api-returntype=\"File\">2014 AP CS Course Description MC Sample Questions.pdf</a>&nbsp;&nbsp;</p>\n<p>&nbsp;</p>\n<p>- Solutions are on last page, more detailed solutions here: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"2014 AP Sample Multiple Choice Solutions.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842832?verifier=OPNci8z15j5LaJ1YqfsTML1PDNlFlkHHm6QJtDZc&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842832\" data-api-returntype=\"File\">2014 AP Sample Multiple Choice Solutions.pdf</a>&nbsp;&nbsp;</p>",
      "materials": [],
      "dueDate": "2025-04-21T23:59:00.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180800",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180800",
      "title": "HW #25: Codingbat, AP-1 (wordsWithoutList - commonTwo -- all except first six)",
      "description": "<p>Sign in to <a href=\"https://codingbat.com/java\" target=\"_blank\">https://codingbat.com/java</a> and complete wordsWithoutList - commonTwo. (i.e. skip first 6 in set). Worth 8 points.</p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842628/preview?verifier=UToQDX9Zq2jGiO7F1vcBH39MDy7wcu1JDpUFQcTJ\" alt=\"Untitled.png\" width=\"633\" height=\"294\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842628\" data-api-returntype=\"File\" loading=\"lazy\"></p>",
      "materials": [],
      "dueDate": "2025-04-23T23:59:00.000-07:00",
      "points": 8,
      "originLMS": "canvas"
    },
    {
      "id": "180804",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180804",
      "title": "HW #29: 2 FRQ's (2006 #2, 2014 #3)",
      "description": "<p>Please complete the FRQs on the same sheet of paper, scan, and submit.&nbsp; Note the first question uses an interface, however it is used similarly to a superclass and thus is still good practice for something you might see on the AP test.</p>\n<p>- <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"FRQ Questions - 2006Q2 2014Q3.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842834?verifier=SjWJeISNJHScBOcEjdWI8C4fRU25TfHW2Mo0i4sk&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842834\" data-api-returntype=\"File\">FRQ Questions - 2006Q2 2014Q3.pdf</a></p>",
      "materials": [],
      "dueDate": "2025-04-23T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180541",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180541",
      "title": "Chapter 9 Test Type-Up (#3 + Extra Credit only -- add your/their name to comments!)__",
      "description": "<p><span style=\"color: #e03e2d;\"><span style=\"text-decoration: underline;\"><strong>Type YOUR NAME AND THEIR NAME in the comments at the top</strong></span></span></p>\n<p>1) Download starter type-up code: &nbsp;<a class=\"instructure_file_link inline_disabled\" title=\"Ch 9 Test Materials-3.zip\" href=\"https://mvla.instructure.com/courses/8995/files/3281215?verifier=EFQ8NqKzXGTzLPDbsEnjB7gYfFoiAwWG4mThRhfD&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/3281215\" data-api-returntype=\"File\">Ch 9 Test Materials-3.zip</a> Add to Eclipse in a Java project</p>\n<p>2) Type up question #3 + any extra credit on the back ONLY (skip #1, #2, #4).<span style=\"color: #e03e2d;\"> <span style=\"text-decoration: underline;\"><strong>Type YOUR NAME AND THEIR NAME in the comments at the top</strong></span></span></p>\n<p>3) If you had any issues with readability or anything else, you can add a comment in the code.</p>\n<p>4) Submit here.&nbsp;&nbsp;<strong> Those that submit blank files will not get credit...it takes SO LONG to grade these by hand and I appreciate your consideration.&nbsp; I'll double check this after submission.&nbsp; </strong></p>\n<p><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Test type up.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842841?verifier=lOFQws7neeWhmYfijP9rwbrKtBnFRDNIdb83TmBB&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842841\" data-api-returntype=\"File\">Test type up.pdf</a></p>\n<p><img src=\"https://mvla.instructure.com/courses/8995/files/2842840/preview?verifier=dUIbhiqmcqSHN4HbrE1QQSBGMGQGyn81u4CIJq4o\" alt=\"image.png\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842840\" data-api-returntype=\"File\" loading=\"lazy\"></p>",
      "materials": [],
      "dueDate": "2025-04-25T23:59:59.000-07:00",
      "points": 1,
      "originLMS": "canvas"
    },
    {
      "id": "180502",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180502",
      "title": "CW: 2015 Full Multiple Choice Exam",
      "description": "<p><strong>Sign into Classlink first --&gt; Gradecam</strong></p>\n<p><strong><img src=\"https://mvla.instructure.com/courses/8995/files/3276661/preview?verifier=MZxMvpCi6epyI7UyVIhES6paHmOoyd8yLt9TDIlI\" alt=\"image.png\" width=\"439\" height=\"147\" loading=\"lazy\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/3276661\" data-api-returntype=\"File\"></strong></p>\n<p>Questions:</p>\n<p>Go to <span>&nbsp;<span style=\"background-color: #bfedd2;\"><a style=\"background-color: #bfedd2;\" href=\"https://app.gradecam.com/sportal?launchContext=assignment-680699b682ae45d867918e5f\" target=\"_blank\">https://app.gradecam.com/sportal?launchContext=assignment-680699b682ae45d867918e5f</a> </span></span></p>\n<p>&nbsp;</p>\n<p>Download, use: <span style=\"background-color: #c2e0f4;\"><a style=\"background-color: #c2e0f4;\" href=\"https://apstudents.collegeboard.org/ap/pdf/ap-computer-science-a-java-quick-reference_0.pdf\" target=\"_blank\">https://apstudents.collegeboard.org/ap/pdf/ap-computer-science-a-java-quick-reference_0.pdf</a>&nbsp;</span></p>\n<p>This is not collected.&nbsp; If you didn't finish in class and want to keep going, see the attached PDF above.</p>\n<p>Afterwards, for annotated solutions, check here: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"2015 M.C. Exam Worked-Out Solutions(1).pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842842?verifier=Xu8zInxcVVxeuYwQ5zIn08xGYNArVyna9yYVGPUY&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842842\" data-api-returntype=\"File\">2015 M.C. Exam Worked-Out Solutions.pdf</a>&nbsp;&nbsp;</p>",
      "materials": [],
      "dueDate": "2025-04-25T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180808",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180808",
      "title": "HW #30 Finish CW: 2015 M.C. + 1 FRQ (2015 #3)",
      "description": "<p>1) Please finish the 2015 M.C. at <span>&nbsp;<span style=\"background-color: #bfedd2;\"><a style=\"background-color: #bfedd2;\" href=\"https://app.gradecam.com/sportal?launchContext=assignment-680699b682ae45d867918e5f\" target=\"_blank\">https://app.gradecam.com/sportal?launchContext=assignment-680699b682ae45d867918e5f</a></span></span> // <strong>~30 min</strong></p>\n<p><strong>(Just submit this part to Grade Cam)</strong></p>\n<p>&nbsp;</p>\n<p>2) Finish the FRQs on a sheet of paper, take a picture and <strong>submit this part to this Canvas assignment:</strong> <span style=\"background-color: #bfedd2;\"><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" style=\"background-color: #bfedd2;\" title=\"FRQ2015Q3 (SparseArray).pdf\" href=\"https://mvla.instructure.com/courses/8995/files/3275477?verifier=g53oLg8tJ00Q8Cmtz8SzncczWMzObhQW6L0ldW35&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/3275477\" data-api-returntype=\"File\">FRQ2015Q3 (SparseArray).pdf</a></span></p>\n<p>(1 FRQs should take max of <strong>22.5 min)</strong></p>\n<p>- <span style=\"background-color: #eccafa;\">Solutions</span>: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"FRQ Solutions - 2015Q3.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/3275474?verifier=mhI8KxNIFyenxl3x564KkxLKBamLzRjvcEurCKZ6&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/3275474\" data-api-returntype=\"File\">FRQ Solutions - 2015Q3.pdf</a></p>",
      "materials": [],
      "dueDate": "2025-04-25T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180809",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180809",
      "title": "HW #31: 2016 FRQ #1-4",
      "description": "<p>Make a copy of the Google Doc and type up your answer (good practice for AP test where you will type in your answers, but not be able compile/run your code!): <span style=\"background-color: #c2e0f4;\"><a class=\"inline_disabled\" style=\"background-color: #c2e0f4;\" href=\"https://docs.google.com/document/d/1Nsihee7xUhLOJI1yDNFukgsC8atUZ1gvXMeu0CKFz60/edit?tab=t.0\" target=\"_blank\">2016 FRQ #1-4 (Make a copy)</a></span></p>\n<p><span style=\"background-color: #f8cac6;\"><strong>Please save as a pdf and submit to this Canvas assignment.&nbsp;</strong></span></p>\n<p><span style=\"font-family: inherit; font-size: 1rem;\">Should take 90 min.&nbsp; 22.5 min/question.</span></p>\n<p><span><br>2016 Questions PDF link: <a href=\"https://secure-media.collegeboard.org/digitalServices/pdf/ap/ap16_frq_computer_science_a.pdf\" target=\"_blank\">https://secure-media.collegeboard.org/digitalServices/pdf/ap/ap16_frq_computer_science_a.pdf</a><br><br>#1 Solutions: <a href=\"https://secure-media.collegeboard.org/digitalServices/pdf/ap/apcentral/ap16_compsci_a_q1.pdf\" target=\"_blank\">https://secure-media.collegeboard.org/digitalServices/pdf/ap/apcentral/ap16_compsci_a_q1.pdf</a><br>#2 Solutions: <a href=\"https://secure-media.collegeboard.org/digitalServices/pdf/ap/apcentral/ap16_compsci_a_q2.pdf\" target=\"_blank\">https://secure-media.collegeboard.org/digitalServices/pdf/ap/apcentral/ap16_compsci_a_q2.pdf</a><br>#3 Solutions: <a href=\"https://secure-media.collegeboard.org/digitalServices/pdf/ap/apcentral/ap16_compsci_a_q3.pdf\" target=\"_blank\">https://secure-media.collegeboard.org/digitalServices/pdf/ap/apcentral/ap16_compsci_a_q3.pdf</a><br>#4 Solutions: <a href=\"https://secure-media.collegeboard.org/digitalServices/pdf/ap/apcentral/ap16_compsci_a_q4.pdf\" target=\"_blank\">https://secure-media.collegeboard.org/digitalServices/pdf/ap/apcentral/ap16_compsci_a_q4.pdf</a></span></p>",
      "materials": [],
      "dueDate": "2025-04-28T23:59:00.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "203998",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/203998",
      "title": "HW #32: FRQ 2015 #2, 2012 #4",
      "description": "<p>Make a copy of the Google Doc and type up your answer (good practice for AP test where you will type in your answers, but not be able compile/run your code!): <span style=\"background-color: #c2e0f4;\"><a class=\"inline_disabled\" style=\"background-color: #c2e0f4;\" href=\"https://docs.google.com/document/d/1hX5WL3vKQMk7tk7YB2do_XiT_iZHPTcAh3FGUM39SBU/edit?tab=t.0\" target=\"_blank\">FRQ 2015 #2, 2012 #4</a></span></p>\n<p><span style=\"background-color: #f8cac6;\"><strong>Please save as a pdf and submit to this Canvas assignment.&nbsp;</strong></span></p>\n<p><span style=\"font-family: inherit; font-size: 1rem;\">Should take 45 min.&nbsp; 22.5 min/question.</span></p>",
      "materials": [],
      "dueDate": "2025-04-30T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180685",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180685",
      "title": "Day 41 Extended Classwork: Observer Pattern (Design Pattern #2) ",
      "description": "<p><span>Observer Pattern<br></span></p>\n<p><span>a) Notes: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Observer Pattern Worksheet.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842814?verifier=vPr9pL8wi72HBwzpOyYXrpIYvYFy1HvGAjqKzwMi&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842814\" data-api-returntype=\"File\">Observer Pattern Worksheet.pdf</a>&nbsp;&nbsp;<br></span></p>\n<p><span>b) Code: <a class=\"instructure_file_link inline_disabled\" title=\"Observer pattern Weather Station starter.zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842611?verifier=Q33aVifbPOYfT6KjOrp4Nyuh2Fk8ad2qDdThRQgn&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842611\" data-api-returntype=\"File\">Observer pattern Weather Station starter.zip</a>&nbsp; &nbsp;&nbsp; (Download, unzip, add to Eclipse)<br></span></p>\n<p><span>c) <span style=\"background-color: #fbeeb8;\"><a class=\"inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1k1pRrKjDY7KZ2mMMxZhoM7S_gGmzkfs_AmzSZv1R3tA/edit?usp=sharing\" target=\"_blank\">Slides</a></span></span></p>\n<p><span>d) Watch the video, fill out the notes and code: </span><span><a href=\"https://youtu.be/4u1D2MMSlM8\" target=\"_blank\">https://youtu.be/4u1D2MMSlM8</a></span></p>\n<p><span>e) Submit completed <strong>WeatherStation.java</strong> (only) that uses the Observer pattern to easily add new observers like HeatIndexDisplay, to this assignment.</span></p>",
      "materials": [],
      "dueDate": "2025-05-02T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180681",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180681",
      "title": "Day 41 Extended Classwork: Strategy Pattern (Design Pattern #1)",
      "description": "<p><span>Strategy Pattern<br></span></p>\n<p><span>a) Notes: <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Strategy Pattern Worksheet.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842798?verifier=tiGSm7DzlkrQaZc8OtIcHsZ8BG5tI8haujxEqWEs&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842798\" data-api-returntype=\"File\">Strategy Pattern Worksheet.pdf</a>&nbsp;&nbsp;</span></p>\n<p><span>b) Code: <a class=\"instructure_file_link inline_disabled\" title=\"RPGGameStarter Day2 Strategy Pattern.zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842613?verifier=4qUgNT0Jx8iBNx0RcxcslH9ItWAZG6yP2fYIxSGY&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842613\" data-api-returntype=\"File\">RPGGameStarter Day2 Strategy Pattern.zip</a> &nbsp; (Download, unzip, <a class=\"inline_disabled\" href=\"https://drive.google.com/file/d/1LzAOkv7CZI3-Vi0z7-JjgBIPMsSZBcN5/view?usp=sharing\" target=\"_blank\">import into Eclipse</a>)</span></p>\n<p><span>c) <span style=\"background-color: #fbeeb8;\"><a class=\"inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/12vetrVMSdktSrOl_h5yriOE0XY9AZcIN-7bpDR5FEmY/edit?usp=sharing\" target=\"_blank\">Slides</a></span></span></p>\n<p><span>d) Watch the video <span style=\"text-decoration: underline; color: #e03e2d;\"><strong>(start at minute 20:00 if you were in class)</strong></span>, fill out the codes: <a href=\"https://www.youtube.com/watch?v=bXJMbak1fwE\" target=\"_blank\">https://www.youtube.com/watch?v=bXJMbak1fwE</a></span></p>\n<p><span>e) Submit completed <strong>GameCharacter.java</strong> (only) that uses the WeaponBehavior interface to this assignment.</span></p>",
      "materials": [],
      "dueDate": "2025-05-02T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180683",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180683",
      "title": "Day 42 Extended Classwork: Model-View-Controller Compound Pattern (Design Pattern #3)",
      "description": "<p><span>Model-View-Controller Pattern<br></span></p>\n<p><span>a) <span style=\"background-color: #fbeeb8;\"><a class=\"inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1tAyn5zDwYhhV-R-emCZUPbOhxdiHAJhOBgDzoOv_Qu8/edit?usp=sharing\" target=\"_blank\">Slides</a></span></span></p>\n<p><span>b) Download the .jar file for \"Run For It\" game (Mac folks, you might have to download, and then right-click and specify \"open\" to allow it to run): <a class=\"instructure_file_link inline_disabled\" title=\"RunForItGame.jar\" href=\"https://mvla.instructure.com/courses/8995/files/2842615?verifier=8emLy0ZpifaOKvK92efFI9d4THZ1ovjSAv9mxvuB&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842615\" data-api-returntype=\"File\">RunForItGame.jar</a>&nbsp;&nbsp;<br></span></p>\n<p><span>c) Download starter code, add to Eclipse: <a class=\"instructure_file_link inline_disabled\" title=\"RunForIt starter code.zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842614?verifier=otfinACSqmDqREwIQo1E1Dry4DTfIC1p4Gnyi2Kh&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842614\" data-api-returntype=\"File\">RunForIt starter code.zip</a>&nbsp;&nbsp;</span></p>\n<p><span>d) Watch the video <span style=\"color: #e03e2d;\"><strong>(if you were in class, you can skip to minute 11:00. If you were gone, please watch from the beginning)</strong></span>, fill out the code: <a href=\"https://youtu.be/SXz4P90nIxU\" target=\"_blank\">https://youtu.be/SXz4P90nIxU</a></span></p>\n<p><span>e) Apply changes outlined in the video above to complete the code using the Model-View-Controller pattern.<br>f) Turn in <strong>RunForItModel.java, updated with the ability to add and notify Stats Observers </strong>as classwork<br></span></p>",
      "materials": [],
      "dueDate": "2025-05-05T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "204572",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/204572",
      "title": "HW #33: AP Classroom 2020 Practice Exam (Do at least half)",
      "description": "<p>Go to <a href=\"https://apclassroom.collegeboard.org/\" target=\"_blank\">https://apclassroom.collegeboard.org/</a>&nbsp;</p>\n<p>Do <strong>at least half of the assigned multiple choice section</strong> (&gt;= 20 questions) --&gt; 45 minutes</p>\n<p>Do <strong>at least half of the assigned FRQ section</strong> (&gt;= 2 questions) --&gt; 45 minutes</p>",
      "materials": [],
      "dueDate": "2025-05-05T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180688",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180688",
      "title": "Day 43 Extended Classwork: MVC Day 2, Refactor Checkers",
      "description": "<p><span>0) Model-View-Controller compound Pattern Day 2: <a href=\"https://youtu.be/zHacosFwnQ4\" target=\"_blank\">https://youtu.be/zHacosFwnQ4</a> <br>a) <span style=\"background-color: #fbeeb8;\"><a class=\"inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/presentation/d/1d4IvqOiHgFp5iGBDbAU9mHFrewfDexN1iQYLj9HFXeU/edit?usp=sharing\" target=\"_blank\">Slides</a></span><br></span></p>\n<p><span>b) Review of MVC, Example flow of method calls using RunForIt</span></p>\n<p><span>c) Download initial Checkers example, <a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Checkers.java\" href=\"https://mvla.instructure.com/courses/8995/files/2842629?verifier=Wa6B2d5TvtbtNAA3wrLeH7miUFX7A5d4Mc1DYcEM&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842629\" data-api-returntype=\"File\">Checkers.java</a> look at original Checkers design...Ugh!&nbsp; </span></p>\n<p><span>d) Download, unzip starter code for MVC refactor: <a class=\"instructure_file_link inline_disabled\" title=\"MVC Checkers.zip\" href=\"https://mvla.instructure.com/courses/8995/files/2842630?verifier=10pkv9m7euyXn5KpFeNJJe5GO1gWULEd7LqOrNBx&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842630\" data-api-returntype=\"File\">MVC Checkers.zip</a>&nbsp;&nbsp;</span></p>\n<p><span>c) <span style=\"color: #e03e2d;\">T</span></span><span><span style=\"color: #e03e2d;\">urn in <strong>CheckersController.java</strong> to this assignment</span><br></span></p>\n<p>&nbsp;</p>",
      "materials": [],
      "dueDate": "2025-05-09T23:59:59.000-07:00",
      "points": 2,
      "originLMS": "canvas"
    },
    {
      "id": "180810",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180810",
      "title": "HW #34: <Game Name>Class Diagram",
      "description": "<p><span>- Create a class diagram using <a href=\"http://www.draw.io\" target=\"_blank\">www.draw.io</a> that represents the current state of your design. This obviously may change as you progress in your project.&nbsp; You can also create a sketch on paper instead of using draw.io and take a picture of the paper for submission. <br><br>- You can either use the simplified (rectangle) representations of a class, or the full version that includes the fields and methods if you feel that that would help you in your design.<br><br>- Export as an image, and add your game title, e.g. \"AsteroidsClassDiagram.jpg\"<br><br>- Submit &lt;GameName&gt;ClassDiagram to Canvas.<br></span></p>\n<p>&nbsp;</p>\n<p><span style=\"background-color: #fbeeb8;\">- Example class diagrams: <a class=\"inline_disabled\" style=\"background-color: #fbeeb8;\" href=\"https://docs.google.com/document/d/1BRVbYPX-dEXh425hkS4zi5RKk2cj0wnuZIXTI9haOHc/edit?usp=sharing\" target=\"_blank\">RunForIt, RPGGame, TowerDefense, Yahtzee Examples</a></span></p>\n<p><span>- Again, here is the example from class on creating a Tower Defense class diagram using the Model View Controller design pattern: <a href=\"https://www.youtube.com/watch?v=hP_FJlIXccM\" target=\"_blank\">https://www.youtube.com/watch?v=hP_FJlIXccM</a> </span></p>",
      "materials": [],
      "dueDate": "2025-05-14T23:59:59.000-07:00",
      "points": 4,
      "originLMS": "canvas"
    },
    {
      "id": "180829",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180829",
      "title": "Project Progress Update #1: Submit .zip of your unfinished Game",
      "description": "<p>(1) zip up your src folder .java files.&nbsp; (Mac - Right click --&gt; \"compress\", Windows - Right Click --&gt; \"Send to\" --&gt; \"compressed (zipped folder)<strong><br></strong></p>\n<p>(2) submit as &lt;GameName&gt;Files.zip.&nbsp;</p>\n<p><strong>Even if you barely have gotten started, just submit what you have.&nbsp;</strong></p>\n<p><strong><img src=\"https://mvla.instructure.com/courses/8995/files/2842616/preview?verifier=LyxVRlT602hSRrCT6GZ4HP1HW3rxfVUJf02JCeks\" alt=\"Screen Shot 2023-05-15 at 9.18.12 AM.png\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842616\" data-api-returntype=\"File\" loading=\"lazy\"></strong></p>",
      "materials": [],
      "dueDate": "2025-05-16T23:59:00.000-07:00",
      "points": 1,
      "originLMS": "canvas"
    },
    {
      "id": "180830",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180830",
      "title": "Project Progress Update #2: Submit .zip of your unfinished Game",
      "description": "<p>(1) zip up your src folder .java files.&nbsp; (Mac - Right click --&gt; \"compress\", Windows - Right Click --&gt; \"Send to\" --&gt; \"compressed (zipped folder)<strong><br></strong></p>\n<p>(2) submit as &lt;GameName&gt;Files.zip.&nbsp;</p>\n<p><strong>Just submit what you have.&nbsp;</strong></p>\n<p><strong><img src=\"https://mvla.instructure.com/courses/8995/files/2842616/preview?verifier=LyxVRlT602hSRrCT6GZ4HP1HW3rxfVUJf02JCeks\" alt=\"Screen Shot 2023-05-15 at 9.18.12 AM.png\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842616\" data-api-returntype=\"File\" loading=\"lazy\"></strong></p>",
      "materials": [],
      "dueDate": "2025-05-19T23:59:00.000-07:00",
      "points": 1,
      "originLMS": "canvas"
    },
    {
      "id": "180831",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180831",
      "title": "Project Progress Update #3: Submit .zip of your unfinished Game ",
      "description": "<p>(1) zip up your src folder .java files.&nbsp; (Mac - Right click --&gt; \"compress\", Windows - Right Click --&gt; \"Send to\" --&gt; \"compressed (zipped folder)<strong><br></strong></p>\n<p>(2) submit as &lt;GameName&gt;Files.zip.&nbsp;</p>\n<p><strong>Just submit what you have.&nbsp;</strong></p>\n<p><strong><img src=\"https://mvla.instructure.com/courses/8995/files/2842616/preview?verifier=LyxVRlT602hSRrCT6GZ4HP1HW3rxfVUJf02JCeks\" alt=\"Screen Shot 2023-05-15 at 9.18.12 AM.png\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842616\" data-api-returntype=\"File\" loading=\"lazy\"></strong></p>",
      "materials": [],
      "dueDate": "2025-05-23T10:00:00.000-07:00",
      "points": 1,
      "originLMS": "canvas"
    },
    {
      "id": "180832",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180832",
      "title": "Project Progress Update #4: -- Have this be a playable \"rough draft\" of your final submission",
      "description": "<p>Please zip up your src folder .java files and submit as &lt;GameName&gt;Files.zip.</p>",
      "materials": [],
      "dueDate": "2025-05-28T08:00:00.000-07:00",
      "points": 1,
      "originLMS": "canvas"
    },
    {
      "id": "180833",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180833",
      "title": "Project Progress Update #5: Submit .zip of your unfinished Game",
      "description": "<p>Please zip up your src folder .java files and submit as &lt;GameName&gt;Files.zip.</p>",
      "materials": [],
      "dueDate": "2025-05-30T23:59:59.000-07:00",
      "points": 1,
      "originLMS": "canvas"
    },
    {
      "id": "180834",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180834",
      "title": "Project Progress Update #6: Submit .zip of your unfinished Game",
      "description": "<p>Please zip up your src folder .java files and submit as &lt;GameName&gt;Files.zip.</p>",
      "materials": [],
      "dueDate": "2025-06-02T23:59:59.000-07:00",
      "points": 1,
      "originLMS": "canvas"
    },
    {
      "id": "180839",
      "courseId": "8995",
      "url": "https://mvla.instructure.com/courses/8995/assignments/180839",
      "title": "Semester 2 Project Files Final Submission",
      "description": "<div>\n<ul>\n<li><span><span style=\"background-color: #eccafa;\"><a class=\"instructure_file_link instructure_scribd_file inline_disabled\" title=\"Semester 2 Final Project.pdf\" href=\"https://mvla.instructure.com/courses/8995/files/2842815?verifier=OUyLViYH240yQEqLMS24TbOyvIUEmlVWr2wRVmeJ&amp;wrap=1\" target=\"_blank\" data-canvas-previewable=\"false\" data-api-endpoint=\"https://mvla.instructure.com/api/v1/courses/8995/files/2842815\" data-api-returntype=\"File\">Semester 2 Final Project.pdf</a> </span></span></li>\n<li>One thing that is <strong>optional, but strongly recommended for complicated games</strong>, games that people might not be familiar with): <strong><span style=\"background-color: #bfedd2;\">Game instructions / readme / printed out sheet</span>.</strong></li>\n<li><span>Another<strong> very strong recommendation</strong> is that you include a <span style=\"background-color: #c2e0f4;\"><strong>screen cast demonstrating your game play</strong></span> in your submission, in the case that your game does not run on other devices the way it does on your own (it <em>does</em> happen sometimes). &nbsp;</span> Doesn't have to be long but show any features you want to show.&nbsp;</li>\n</ul>\n</div>\n<div><span style=\"background-color: #f8cac6;\">--&gt; <strong>Please zip up your project folder <span style=\"text-decoration: underline;\">(.java files PLUS optional screen recording PLUS any image files, music files, information sheets, readmes, anything else needed for your game)</span> and submit as &lt;GameName&gt;Files.zip. </strong></span><br><br><strong>Again, If you forget to .zip the screen recording, or images, or any informational sheets etc, it might make the game very difficult to play/grade when it comes time for me to look at it. </strong></div>",
      "materials": [],
      "dueDate": "2025-06-05T08:30:00.000-07:00",
      "points": 100,
      "originLMS": "canvas"
    }
  ]
}